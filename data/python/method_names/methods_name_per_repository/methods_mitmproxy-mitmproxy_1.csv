test_dump(selfself,
test_chunked_and_content_length_set_by_addon(tctx):
test_close_normal(ws_testdata):
test_tls_start_server_verify_failed(self):
test_get_browser_cmd_flatpak():
test_parse_replacements(self):
test_async_returned_in_sync():
test_add_command_failed(self,
test_format_msgpack():
test_bench_tls_both(tctx,
test_max_size():
test_close_disconnect(ws_testdata):
test_convert(self,
test_make_auth_required_response(
test_warn_no_nextlayer(caplog):
test_inject_insert(self):
test_https_proxy_eager():
test_parse(spec,
test_order(event_loop,
test_trailers(tctx):
test_json(self):
test_load_empty(self,
test_bench_http2_roundtrip(tctx,
test_fuzz_h2_request2(chunks):
test("MainMenu",
test_get_cookies_empty(self):
test_which_auth_header(self,
test_mkauth(scheme,
test_response_cookies(self,
test_fuzz_h2_request_chunks(chunks):
test_auth_required_response(
test_serverconnect_None(self,
test_view_protobuf_custom_config(tdata):
test_urldict_loads(self):
test_subject_hash_old(tdata):
test_stream_concurrent_get_connection(tctx):
test_scheme(self):
test_simple_alternate_syntax(tctx):
test_concurrent(self,
test('Dropdown',
test_init_file(self,
test_has_reply(self,
test_buildenviron_windows(tmp_path):
test_dont_pick_up_mutations():
test("should
test_conf(self):
test_nonexistent(self,
test_packing(self):
test_contentview(caplog):
test_expire(self,
test_get_local_ip():
test_app_not_serve_loading_flows(self):
test_modify_host_header(self):
test_http_reply_from_proxy(tctx):
test("CommandBar",
test_read_err(self):
test_cancel_examples(example):
test_validation_no_transparent(monkeypatch):
test_tls.TestClientTLS().test_client_only
test_add(self,
test_buildenviron_osx(tmp_path):
test_trigger(self,
test_inject_not404(self):
test_has_error(self):
test_playback_crash(monkeypatch,
test_order_generators_udp():
test_id.decode()
test_untrusted_cert(self,
test_ping_pong(tctx,
test_connect_more_newlines(tctx):
test_response_until_eof(tctx):
test_clip(tmpdir,
test_pack():
test('CommandBar
test_state(self):
test_server_aborts(tctx,
test_get_server_accept():
test_parse_modify_hook(self):
test_fuzz_cancel(stream_request,
test_view_grpc(tdata):
test_urldict_empty(self):
test_body_size_limit(tctx,
test_parse_modify_spec(self):
test_keyinfo(self,
test_get_cookies_single(self):
test_match(self):
test_view_protobuf_custom_parsing_response2(tdata):
test_stream_concurrency(tctx):
test_tcp_start_stop():
test_self_connect():
test_styling()
test_make(self):
test_h1_to_h2(tctx):
test_flowview(monkeypatch,
test_startup_err(monkeypatch,
test_tunnel_handshake_command(tctx:
test_no_tls(self,
test_modify_headers(self):
test_parse_err():
test_request_trailers(tctx:
test_refresh(self):
test_request(self):
test_partial_assert(tplaybook):
test_create_client_proxy_ssl_conn(self,
test_marker(marker,
test_socks5(self):
test_close_error(ws_testdata):
test_copy(self):
test_already_taken():
test_mixed_async_sync():
test_unpack_from_with_compression():
test_unpack():
test("FilterDocs
test_pretty_url(self):
test_simple_request_with_body(self):
test_correct_host_used(self,
test_server_handshake_headers():
test_transparent_tcp(tctx:
test_udp_start_stop(caplog_async):
test_invalid_and_dummy_end(tctx):
test_upgrade_denied(self,
test_block(self,
test_udp_start_error():
test_collect_commands(caplog):
test_reverse_with_invalid_response(tctx):
test_echo_trailer():
test_simple_no_hook(tctx):
test_is_http_proxy(mode,
test("addInterceptFilter",
test_content_length_not_added_for_response_with_transfer_encoding(self):
test_socks5_err(data:
test_get_cookies_with_parameters(self):
test_client_handshake_headers(_):
test_start_stop():
test_trailers(self,
test_tls.TestServerTLS().test_simple
test_cert(self,
test_async_signal()
test_asgi_full(caplog):
test_flow_content_returns_raw_content_when_decoding_fails(self):
test_dtls_connection_reuse(monkeypatch):
test_http_auth_header(is_http_proxy,
test_load_option():
test_split_pseudo_headers_err():
test_taken(self,
test_base_class(self,
test_http_proxy_tcp(tctx,
test_nesting():
test_get_cookies_no_value(self):
test_view_msgpack_doesnt_crash(data):
test_with_ca(self,
test_chain_file(self,
test_fails_with_binary_data(self,
test_socks5_eager_err(tctx:
test_transparent(failure,
test_script_deletion(self,
test_create_proxy_server_ssl_conn_verify_ok(self,
test_loader(caplog):
test("op_code",
test_multiple_server_connections(tctx):
test_comment():
test_generate_state_js(self):
test_view_mqtt(data,
test_reader():
test_ferr(self):
test_socks5_trickle(tctx:
test_get(self,
test_last_exception_and_running(monkeypatch):
test_timeout(self,
test_playbook_partial_assert(tctx):
test_reload(self,
test_http_expect(tctx):
test_resolve():
test_fuzz_response(opts,
test_dns():
test_errorcheck(tdata,
test_clear_failed(self,
test_commandreply():
test_tcp_start_error():
test_no_tls(tctx:
test_default_port():
test_fuzz_h2_request_mutations(chunks):
test("network
test_handshake(self):
test_tls.SSLTest()
test_init_append(self,
test_func_references(self,
test_forward_fail_connection(tctx):
test_response_content_type(self,
test_basic(self,
test_tunnel_handshake_start(tctx:
test_tls.TestClientTLS().test_server_required
test_transparent_eager_connect_failure(tctx:
test_pwd.decode()
test_http(self,
test_signal_weakref()
test_get_client_hello():
tested_paths.append(candidate)
test_create_no_common_name(self,
test_fuzz_h2_request_chunks(i,
test_done_writing_failed(self):
test_init(self):
test_random_string(self):
test_reason(self):
test("makeSort",
test_addons_termlog(self,
test__dtls_record_contents_err():
test_urldict_get(self,
test_alpn(self,
test_http_server_aborts(tctx,
test_get_path_components(self):
test_anticomp(self):
test_generate_options_js():
test_overrides(self,
test_invalid_protocol(monkeypatch):
test_is_dtls_handshake_record():
test("LineRenderer",
test_parse_spec_err(filter,
test_mismatch(tplaybook):
test_pretty_host(self):
test_http_to_https():
test_get_cookies_withequalsign(self):
test("ValidateEditor",
test_set_cookies(self):
test_inject_message(ws_testdata):
test_urldict_set_error(self,
test("options_meta",
test_dtls_parse_client_hello():
test_first_line_format(self):
test("websocket
test_wait_for_resume(self):
test_trailers(self):
test_dtls_start_stop(monkeypatch):
test_start_stop(caplog_async):
test_client_server():
test_modify_message(ws_testdata):
test('MenuItem',
test_order_generators_dns():
test_http2_client_aborts(tctx,
test_sanitize_candidate_path(self,
test_path(self):
test_cannot_encode(self):
test_anticache(self):
test_repr(self):
test_get_json(self):
test("No
test_empty_message(ws_testdata):
test_playback(mode):
test_command_completed():
test_tls_clienthello(self):
test_authority(self):
test_request_filtered(self,
test_max_concurrency(tctx):
test_domain(self):
test_tcp(self,
test_view_graphql():
test_and(self):
test_set_urlencoded_form(self):
test_udp_start_stop():
test_corrupt(self,
test_playback_https_upstream():
test_command_reply(tplaybook):
test_command_execute(self):
test_unknown_type(self):
test("HttpMessage",
test_next_layer_invalid_proto(self):
test_optionexceptions(self,
test_parse_spec():
test_early_server_data(tctx):
test_content_type(self):
test_cannot_migrate(self):
test_setter(self):
test_invalid_certificate(self,
test_fuzz_h2_request(parts):
test_truncated_text():
test_persistance_true(self,
test_utf8_as_ce(self):
test_validate_headers():
test_format_query_list():
test_headers(self):
test("ConnectionIndicator",
test_alpn_selection(self):
test_websocket_flow():
test_view_protobuf_custom_parsing_response(tdata):
test_tls_start_server_insecure(self):
test_mqtt_malformed(data):
test_multi_valued_rdns(self,
test_connection_failed(tctx,
test("ValueEditor",
test_filer_true(self):
test_tcp():
test_debug_messages(self,
test_parse_specific_modes():
test_forward_with_query_resend(tctx):
test_fmarker_char(self):
test_open_command_bar(self,
test_app_err(self):
test_persistance_false(self,
test_file_candidates(self,
test_special_kill_status_closes_connection(self):
test_start_hook():
test_tcp.test_simple(copy.deepcopy(tctx)))
test_no_connection(self,
test_tls_start_server_verify_ok(self,
test_concurrent_err(self,
test_get_cookies_twocookies(self):
test("CodeEditor",
test_playback_crash(monkeypatch):
test_unknown_ext(ws_testdata):
test_reverse_proxy_tcp_over_tls(
test_start_stop(tdata):
test_exception_handler():
test_set(self):
test_fork_placeholder(tplaybook):
test_server_tls_no_conn(tctx):
test_not_connected(self,
test_load(tmpdir,
test_request_filter_None(self,
test_cannot_set_both_allow_and_filter_options(self):
test_serializable(self):
test_reuse():
test_view_http3(data):
test_get_urlencoded_form(self):
test("sendUpdate",
test_read_frame(input,
test_up_and_down(self,
test_create_proxy_server_ssl_conn_verify_failed(self):
test("CaptureSetup",
test_context():
test_request_stream_modify(tctx):
test_styling(monkeypatch)
test_read_request_head():
test_strip_unnecessary(self,
test_proxy_chain(tctx,
test_bytes():
test_contentencode(self,
test("ToggleEdit",
test_upgrade(self,
test_upgrade_streamed(tctx):
test_next_layer(self):
test_sync_signal()
test_deflate(ws_testdata):
test_no_normalization():
test_tunnel_default_impls(tctx:
test_inject_insert_body(self):
test_no_content(self,
test_simple(self):
test_inject(tctx):
test_rechunk(self):
test_body(self):
test_constrain_encoding(self):
test_socks5_success(address:
test_ldap(monkeypatch,
test_order(self,
test_placeholder(tplaybook,
test_timestamp_end(self):
test_flow_contentview(self):
test_special_decoding():
test_map_local(self,
test_read_simple(self):
test_inject_fail()
test_request_smuggling_te(tctx):
test_load_script(tdata,
test_receive_data_before_server_connected(tctx):
test_check_http_version():
test_concurrent_class(self,
test_contentview_flowview(console):
test_addon(self,
test_ldap(monkeypatch):
test_response_trailers(tctx):
test_dtls_get_client_hello():
test_http_proxy_without_empty_chunk_in_head_request(tctx):
test_inject()
test_reverse_proxy(tctx,
test_load(tdata,
test_not(self):
test_server_tls(tctx):
test_get_cookies_double(self):
test_export_open(exception,
test_http_proxy_relative_request(tctx):
test_udp():
test_address(self):
test_udp_flow(err):
test_udp(self,
test_simple_explicit(tctx):
test_dns_not_simple()
test_old_api():
test_guess_json(self):
test_eq_blocking():
test_connection_close():
test_options_home_end(console):
test_repr(self,
test_buildenviron_pr(monkeypatch):
test_metadata(self):
test_tls_client_server_no_server_conn(tctx):
test_get_ca(tdata):
test_sslkeylogfile(tdata,
test_no_h2_proxy(self,
test_read_response_line():
test_left(self,
test2={},i=0;i<10;i++)test2["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(test2).map(function(n){return
test_request_smuggling(tctx):
test_alpn_select_callback():
test_keybindings_home_end(console):
test_freq_fresp(self):
test_next_layer(self,
test_drop_stream_with_paused_events(tctx):
test_format_graphql():
test_client_tls(tctx:
test_output(capsys):
test_script_run_nonexistent(self,
test_cut_save_open(exception,
test_insert(self,
test_is_killed(self):
test_errorcheck():
test_udp(self):
test_no_headers(tctx):
test_socks5_fuzz(data):
test_get_extensions():
test_is_killed(self,
test_late_hook_reply(self,
test_http_version(self):
test_http_proxy():
test_init_filter(self,
test_done_writing_failed(self,
test("FlowMenu",
test_parse_authority(authority:
test_async_halt():
test_closed_loop():
test_read_request_line():
test_receive_data_after_server_disconnected(tctx):
test_is_tls_handshake_record():
test_url_options(self):
test_backspace(self,
test("id",
test_next_layer_udp(self):
test_response_trailers(tctx:
test_response(self):
test_dtls(monkeypatch)
test_read_continued_err(self):
test_disconnect_while_intercept():
test_tls_start_client(self,
test_responses(self):
test_nonexistent_files(self,
test_rst_then_close(tctx):
test_extension(tctx,
test_upstream_https(tctx):
test_no_normalization(tctx,
test_exception(self,
test_resolve(self):
test_get_local_ip6():
test_simple_dns():
test_shutdown_err(caplog_async)
test_connection_close_header(tctx,
test_disconnect_during_handshake_command(tctx:
test_none(self):
test("ViewSelector",
test("Header",
test_redirect(strategy,
test_post(self,
test_cannot_decode(self):
test('SubMenu',
test_disconnect_during_handshake_start(tctx:
test_passthrough_from_clienthello(self,
test_tcp(self):
test_bench_server_tls(tctx,
test_reverse_fail_connection(tctx):
test_sans_change(self,
test_request(self,
test_simple(tplaybook):
test_load_script(tmp_path,
test_request_cookies(self,
test_replay_count(console):
test_already_handled(self):
test_reverse_premature_close(tctx):
test_has_reply(self):
test_check():
test_memory_usage_completed_flows(tctx):
test_view_protobuf(tdata):
test_udp_connection_reuse(monkeypatch):
test_pretty_url_authority(self):
test_done(self,
test_tcp_start_stop(caplog_async):
test_patch(self,
test_ca_expired(self,
test_statusbar(console,
test_create_dhparams(self,
test_eq_ne(self):
test_eq_placeholder():
test_parse_msgpack():
test_read_raw_frame(input,
test_get_client_key():
test_h2_to_h1(tctx):
test_cancel_then_server_disconnect(tctx):
test_fuzz(self,
test_str(self):
test("EventlogToggle",
test_guess_css_charset(self):
test_request_smuggling_cl(tctx):
test_browser(caplog):
test("FlowView",
test_from_store_with_passphrase(self,
test_config(self):
test_ping_pong_hidden_payload(tctx,
test_server_required(self,
test_http_proxy_relative_request_no_host_header(tctx):
test_multiple_server_connections():
test_listen_addr():
test_udp(tmp_path):
test_load(tdata):
test_dns_simple()
test_code(self):
test_stream_with_exception(self,
test_simple(self,
test_get_browser_cmd_executable():
test_ping(ws_testdata):
test_options():
test_configure(tmp_path):
test_keepalive_disconnect(tctx,
test_escape_single_quotes_in_body(self,
test_read_continued(self):
test_src(self):
test_get_host_header(self):
test_socks5_auth_fail(
test_https_proxy_lazy():
test_simple(monkeypatch):
test("response_code",
test_pipelining(tctx,
test_dns(tmp_path):
test("save",
test_shutdown_err()
test_inject_fail(caplog)
test_commands_exist(console):
test_dst(self):
test_connect(self,
test_continue(self,
test_response_None(self,
test_upstream_proxy(tctx,
test_close_code(ws_testdata):
test_command_multiple_replies(tplaybook,
test_simple(tmp_path):
test_fuzz_h1_response(data):
test_next_layer2(self):
test_tls.SSLTest(server_side=True,
test_masking():
test_replay(self):
test_parameters(self):
test_custom_grpc_contentview(self,
test_dns(self):
test_tunnel_openconnection_error(tctx:
test_make_error_response():
test_parse_subclass():
test_exception_handler(caplog):
test_mitmproxy_ca_is_untrusted_immediate_disconnect(self,
test_bench_client_tls(tctx,
test_playback(mode,
test_event():
test_read_frame_failed():
test_extract_str():
test_view_graphql_doesnt_crash(data):
test_halt():
test_get_query(self):
test_sans(self,
test_make_master_secret_logger():
test_guess_meta_charset(self):
test_range(self):
test("OptionsToggle",
test_sync_signal_async_receiver()
test_record_contents():
test_regular(tctx):
test_serverconnect(self,
test_bytes(self):
test3={};return"abcdefghijklmnopqrst".split("").forEach(function(letter){test3[letter]=letter}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},test3)).join("")}catch(err){return!1}}()?Object.assign:function(target,source){for(var
test_contentview():
test_hook():
test_simple(tctx,
test_split_pseudo_headers(input,
test_playbook_simple(tctx):
test_nonexistent_file(self,
test_request_replay(self,
test_kill_flow(tctx,
test_inject_fail():
test_mitmproxy_ca_is_untrusted(self,
test_debug_shorten(self,
test_layer_stack(tctx):
test_content_length_update(self):
test_read(self,
test_timestamp_start(self):
test_tcp(tmp_path):
test_server_close(tctx,
test_init_format(self,
test_addons_dumper(self,
test_record_contents_err():
test_simple():
test_invalid_content_length(tctx):
test_script_run(self,
test_reverse_eager_connect_failure(tctx:
test_integration(tdata,
test_rotate_stream(tmp_path):
test_app_no_response(self):
test_start_stop(tdata,
test_keep_sizes(self):
test_generate_options_js(self):
test_configure(self,
test_file_candidates(url,
test_fuzz_h2_response_mutations(chunks):
test_socks5_auth_success(client_greeting:
test_persistance_true_add_content(self,
test_configure(tdata):
test_save_flows_content(tmpdir):
test_response(self,
test_open_connection(tctx):
test_receive_close(self,
test_cannot_parse_clienthello(self,
test_http_proxy(tctx):
test_iter(self):
test_unsupported_protocol(self,
test_fork(tplaybook):
test_remote_speaks_no_tls(self,
test_dont_reuse_closed(tctx):
test("FlowTableHead
test_errorcheck(capsys,
test_forward_with_id_change(tctx):
test_dataclasses(tconn):
test_get_cookies_none(self):
test_server_no_tls(tctx:
test("reserved",
test_async():
test_wireguard_generate_conf(tmp_path):
test_read_empty_name(self):
test_urldict_dumps(self,
test_no_error():
test_no_server_conn_required(self,
test_server_unreachable(tctx,
test_fuzz_parse_client_hello(i,
test_forward_with_invalid_response(tctx):
test_fuzz_h2_response_chunks(chunks):
test_websocket_connection_repr(tctx):
test_unfragmented(ws_testdata):
test_tls_start_server_cannot_verify(self):
test_socks5_premature_close(tctx:
test_emoji():
test_reverse_dns(tctx):
test_script_error_handler(self,
test("FlowRow",
test_https_proxy(strategy,
test_invalid_confdir(self):
test_informational_response(self,
test_server_not_required(self,
test_generate_tflow_js(self):
test_no_normalization(tctx):
test_host_update_also_updates_header(self):
test_dns(resp,
test_create_server_nonce():
test_marker():
test_transparent_sni(tctx):
test_async_connect_to_sync():
test_empty(self):
test_writer_dict(self):
test_configure(self):
test("caching",
test_export(tmp_path)
test_styling():
test_filter_false(self):
test_reverse_proxy_tcp_over_tls(tctx:
test_unknown_ce(self):
test_simple(tctx):
test_url_authority(self):
test_save(self,
test_upgrade(tctx,
test_add_command_failed(self):
test_open_connection_err(tctx):
test_ignore(tctx,
test_urldict_dump(self,
test_forward(tctx):
test_set_multipart_form(self):
test_parse_modify_body(self):
test_inject():
test_close_during_connect_hook(tctx):
test_request_smuggling_validation_disabled(tctx):
test_guess_latin_1(self):
test_make_top_layer(self):
tested_paths.append(spec.local_path)
test_head(self,
test_pretty_url_options(self):
test_parse_http_basic_auth_error(input):
test_old_api(caplog):
test_disconnect_while_intercept(tctx):
test_url(self):
test("Modal
test_order_generators_tcp():
test_server_playback_kill():
test_socks5_auth_success(
test_magisk_write(tdata,
test_modify(self):
test_init(self,
test_fuzz_h1_request(data):
test_request_trailers(tctx):
test_text(self):
test_reverse_with_query_resend(tctx):
test_double_commit(self):
test_tls_client_server_alpn(tctx):
test_get_protocol():
test_request_keepalive(tctx,
test_simple_udp():
test_delayed_teardown():
test_dns(caplog_async)
test_reader(caplog_async):
test_basic(self):
test_set_query(self):
test_reuse_error(tctx):
test_memory_usage_errored_flows(tctx):
test_long_response(tctx:
test_check_handshake():
test_trigger_http_synatx(self,
test_update_content_length_header(self):
test(what:
test_inject_404(self):
test_commands(self):
test_get_multipart_form(self):
test_http_reply_from_proxy():
test_noop():
test_get_browser_cmd_no_flatpak():
test_reverse(tctx):
test_bench_http_roundtrip(tctx,
test_websocket(tmp_path):
test_method(self):
test_bench_tcp_roundtrip(tctx,
test_request_smuggling_te_te(tctx):
test_client_only(self,
test_set_encoder_str(self):
test_load_nonexisting(self,
test_parse_http_basic_auth():
test_http2():
test_kill_stream(tctx):
test_fuzz_request(opts,
test_disk_full(tmp_path,
test_init_conv(self):
test_read_multi(self):
test_forward_premature_close(tctx):
test_no_browser(caplog):
test_no_extensions(self):
test_response_streaming(tctx):
test_drop_message(ws_testdata):
test_request_streaming(tctx,
test_check_client_version():
test_expected_http_body_size():
test_init_dir(self,
test_transparent_init(monkeypatch):
test_read_response_head():
test_simple(caplog):
test_extensions(self):
test_configure_err(self):
test_parse():
test_no_data_on_closed_stream(self,
test_parse_modifyheaders(self):
test_special_character(self,
test_request_smuggling_whitespace(tctx):
test_client_cert_file(self,
test_auth_required_response(self,
test_placeholder_type_mismatch(tplaybook):
test_dns()
test_view_http3_unidirectional(data):
test_http_client_aborts(tctx,
test_view_grpc_compressed(tdata):
test_default_playbook(tctx):
test_dtls(monkeypatch,
test_connection_closed(tctx,
test_read_frame():
test_get_cookies_simple(self):
test_client_tls_only(tctx:
test_parse_client_hello():
test_response_streaming(tctx,
test_receive_data_after_half_close(tctx):
test_order(tdata,
test_mixed_async_sync(caplog):
test_cancel_during_response_hook(tctx):
test_upstream_error(tctx):
test_unfinished(tplaybook):
test_response_filtered(self,
test_stream_modify(tctx):
test_get_cert(self,
test_render_priority():
test_wireguard(tdata,
test_placeholder(tplaybook):
test_eq(self):
test_startup_err(monkeypatch)
test_protocol_error(ws_testdata):
test_make():
test_cut_clip(caplog):
test_insert(self):
test("FileChooser",
test_socks5_auth_fail(client_greeting:
test_view_protobuf_custom_config_packed(tdata):
test_http_redirect():
test_tls.SSLTest(server_side=True)
test("ViewImage",
test_regular_mode_no_hook(tctx):
test_set_path_components(self):
test("ProxyApp",
test_is_http_proxy(self,
test_get_browser_cmd_no_executable():
test_upgrade(tctx):
test_save_command(tmp_path):
test_wireguard_invalid_conf(tmp_path):
test_dump_info_async():
test_or(self):
test_port(self):
test_items(self):
test_warn_no_nextlayer():
test_status_code(self):
test_typing_aliases():
test_masker(self,
test_asgi_full():
test_view_msgpack():
test_bind_emptystr():
test_load(self,
test_read_empty_value(self):
test_create_proxy_server_ssl_conn_insecure(self):
test_fragmented(ws_testdata):
test_extension(tctx):
test2[n]}).join(""))return!1;var
test_generate_tflow_js(tdata):
test_transparent_failure(tctx:
test_expect():
test_immediate_disconnect(self,
test_statusbar(monkeypatch):
test_modify_headers(self,
test("static
test_ignore_connection(self):
test_inject(self):
test_response_not_existing(self,
test_right(self,
test_dtls_record_contents():
test_set_encoder_set(self):
test_original_server_disconnects(tctx):
test_parse_modify_spec():
test_flow_contentview_websocket(self):
test_view_protobuf_custom_parsing_request(tdata):
