test_hassio_discovery_update_configuration(hass,
test_set_text_overlay_good_entity_id(hass:
test_create_username(hass,
test_async_integration_yaml_config(hass):
test_flow_user_invalid_host(hass:
test_default_availability_list_payload_all(hass,
test_good_query(hass:
test_distance_sensor(
test_off_delay_restore(hass,
test_migrate_device_mac_bootstrap_fail(
test_user_setup_wohand_already_configured(hass):
test_update_sensor_network_errors(mock_now,
test_light_async_turn_on_error_conditions(hass:
test_setup_too_old(hass:
test_fan_ikea_init(
test_remove_failed_node(hass,
test_ssdp_missing_serial(hass:
test_platform_loading(hass):
test_entry_is_reloaded_when_title_changes(hass:
test_oauth_session_with_clock_slightly_out_of_sync(
test_browse_media_camera_offline(
test_import_usb(hass,
test2(hass)
test_single_foundation_preset(
test_validate_statistics_unsupported_device_class_2(
test_upload_image(hass,
test_reauth_flow(hass,
test_button_chime_remove(
test_select_battery_charging_usage_available(
test_thermostat_set_cool(hass):
test_change_property(hass,
test_zeroconf_sleeping_device_error(hass,
test_form_invalid_location(hass):
test_form_generic_exception(hass):
test_setup_auth_failed(hass,
test_open(hass:
test_update_reports_fan_on(hass:
test_update_connection_failure_recovery(hass,
test_light_color_temperature_and_rgb_color(
test_video_bad_camera_perms(
test_if_not_above_fires_on_entity_change_to_equal(hass,
test_get_significant_states_exclude_include_entity(hass_history):
test_missing_template_does_not_create(hass):
test_level_action_no_template(hass,
test_cover_close(
test_trigger_entity_render_error(hass,
test_aemet_weather(hass):
test_is_internal_request(hass:
test_ssdp_flow_existing(
test_invalid_path(hass):
test_track_template_result_super_template(hass):
test_api_get_discovery_info(hass,
test_setup_with_cloud_config_fails(hass):
test_switch_camera_highfps(
test_master_state(hass,
test_send_power_on_device_timeout(hass,
test_cover_gate(hass):
test_migrate_entry_fails(hass:
test_become_available(
test_no_command_topic(hass,
test_camera_streaming_fails_after_starting_ffmpeg(hass,
test_action_tilt(hass,
test_update_remove_triggers(
test_user_owserver_options_set_single(
test_no_mode_no_state(hass,
test_option_catch_all_exception(hass):
test_thermostat_set_eco_preset(hass,
test_water_heater_fahrenheit(hass,
test_purehotcool_set_fan_mode(devices,
test_create_local_entry(hass:
test_step_node_pro(hass,
test_simple_zone_timeout_freeze_without_timeout_cleanup2(hass):
test_discovery_expansion_without_encoding_and_value_template_2(
test__async_current_entries_explict_skip_ignore(hass,
test_service_setup(hass):
test_setup_embedded_starts_with_no_config(
test_position_via_template_and_entity_id(
test_disabled_indcator_sensor(
test_sensor_upper(hass):
test_if_value_updated_value_fires(
test_rgbw_detection_without_protocol(hass:
test_anna_number_entities(
test_parse_bad_playlist(hass,
test_discovery_update_unchanged_button(hass,
test_api_core_info(hassio_handler,
test_flow_successful(hass):
test_http_api_event_paging(
test_reauth_flow(hass):
test_scb1e_sensor_setup(hass):
test_invalid_config_entry(
test_resolve_media_search(hass:
test_form_unique_id_error(hass:
test_strip_tag_id(hass,
test_airzone_create_climates(hass:
test_incorrect_login(hass):
test_single_config_entry(hass,
test_thermostat_heatcool(hass):
test_light_start_decreasing_brightness(hass:
test_camera_on(hass):
test_playback_multiple_servers(hass,
test_successful_login_with_usb(
test_spa_preset_modes(hass:
test_playing_bluetooth(
test_setup_entry_connection_error(hass):
test_cost_sensor_price_entity_total_increasing(
test_actions(
test_overrides(self):
test_import_config_entry_from_existing_token(
test_bad_formatted_scene(hass,
test_fan_unique_id(hass:
test_simulated_sensor_default_config(hass):
test_setup_unload(hass,
test_specifically_referenced_entity_is_not_rate_limited(hass):
test_unique_id_migration(hass,
test_if_fires_on_entity_change_over_to_below(hass,
test_thermostat_fan_without_preset_modes(
test_observed_entities(hass):
test_set_operation_bad_attr_and_state(
test_x_forwarded_host_not_processed_without_for(aiohttp_client):
test_dynamic_attributes(
test_climate_device_without_cooling_support(hass,
test_wrong_configuration(
test_async_play_media_announcement_from_stopped(
test_fan_set_all_one_shot(hass,
test_hassio_ignored(hass:
test_get_attachments_with_verify_set_false(
test_discovery_already_setup(detect_mock,
test_sensor_backup_reserve_unavailable(hass):
test_manual_config(hass,
test_scan_match_upnp_devicedesc_manufacturer(
test_migration_1_2_to_1_3(hass,
test_discovery_via_usb_zha_ignored_updates(hass):
test_implemented_speed(hass,
test_list_statistic_ids(hass,
test_getting_backup_that_does_not_exist(
test_unload_config_entry(
test_owserver_binary_sensor(owproxy,
test_update_with_json_attrs_no_data(
test_warning(hass,
test_import_websocket(hass:
test_adam_climate_switch_changes(
test_load_handles_homewizardenergy_exception(aioclient_mock,
test_addressable_light(hass:
test_unknown_device_id(hass):
test_webhook_home_id_mismatch(hass,
test_config.get("target_values")
test_invalid_identifier_geography_name(hass):
test_notification_sensor(hass,
test_programmable_switch_button_fires_on_trigger(
test_block_device_update(hass,
test_send_message(signal_notification_service,
test_attribute_if_not_fires_on_entities_change_with_for_after_stop(
test_hue_event(hass,
test_standalone_light(hass:
test_alarm_sensor_value_changed(hass,
test_dump(try_both_dumpers):
test_user_form_invalid_auth(hass:
test_flux_with_custom_start_stop_times(hass,
test_import_flow_already_configured_hostname(
test_update_entity_update_failure(
test_group_that_references_two_types_of_groups(hass):
test_fetch_event_image_failure(hass,
test_flow_same_device_multiple_sources(hass,
test_zeroconf_flow(hass):
test_get_significant_states_multiple_entity_ids(hass_recorder):
test_unique_id(hass:
test_sensors_created_during_setup_if_monitor_already_connected(
test_no_covers(caplog:
test_quadratic_state(hass):
test_light_async_turn_off_fail_async_send_set_component(
test_feed_in_forecast_sensor(
test_light_service_call_color_conversion_named_tuple(
test_non_standard_speed_list(hass:
test_browse_media(hass,
test_user_form_exception(hass,
test_is_on_before_update(hass):
test_owserver_sensor(
test_max_sensor(hass):
test_hold_switch(hass):
test_http_error(hass:
test_check_loop_async_integration_non_strict(caplog):
test_default_setup_params(hass,
test_entry_message_from_event_binary_sensor_moisture(self):
test_discovery_flow_updated_configuration(
test_setup_with_tls_config_uses_tls_version1_2(hass):
test_async_response_request_context(hass,
test_stop_discovery_called_on_stop(hass,
test_thermostat_device_available(
test_validation_device_consumption_entity_unavailable(
test_on_command_rgbww(hass,
test_fetch_period_api_with_entity_glob_exclude(hass,
test_add_targets(hass:
test_full_flow_implementation(hass,
test_show_config_form(hass):
test_templatex_state_boolean(hass,
test_measure_from_end_going_backwards(hass,
test_multilevel_switch_select(hass,
test_flow_usb_cannot_connect(hass:
test_import_invalid_still_image(hass,
test_update_entity_install_failure(
test_not_release_notes(hass,
test_set_fan_mode_send_if_off(
test_invalid_mode(hass,
test_async_step_bluetooth_not_inkbird(hass):
test_one_light(hass,
test_trigger_with_unused_specific_delay(hass,
test_setup_with_exception(hass):
test_entity_device_info_update(hass,
test_config_entry_entity_id(hass:
test_process_battery(model,
test_form_user_failed_discovery_aborts_already_configured(hass):
test_2fa_code_success(hass:
test_form_home(hass:
test_discover_cover_noautoadd(hass,
test_peer_cert(hass,
test_setup_serial_fail(com_mock,
test_get_translations_for_single_integration(hass,
test_event_payload(hass,
test_url_not_allowed(hass,
test_float_function(hass):
test_measure_cet(hass,
test_communication_error(
test_entity_description_fallback():
test_two_factor_request_fail(hass,
test_add_new_sensor(hass,
test_issues_created(hass,
test_heartbeat_ignore_oserror(hass,
test_generate_media_source_id():
test_find_percentage_in_range_defaults(hass):
test_structure_missing_trait(hass,
test_random_sensor(hass):
test_zeroconf_flow_stretch(
test_options_dup_selection(hass:
test_repeat_var_in_condition(hass,
test_websocket_create(ws_client:
test_mode_change_dry_trigger_off_not_long_enough(hass,
test_turn_off_light(hass:
test_async_step_import_camera(hass,
test_import_step(hass:
test_command_failure(caplog:
test_fail_default_home_entry(hass,
test_get_triggers_non_initialized_devices(
test_light_registry_state_callback(
test_invalid_config(hass,
test_airzone_create_binary_sensors(hass):
test_default_discovery_abort_on_new_unique_flow(hass,
test_fans(hass,
test_remove_device(
test_match_max_scale():
test_form_2fa_connect_error(hass):
test_discovered_by_dhcp_or_discovery(hass,
test_async_track_entity_registry_updated_event(hass):
test_triggered_police(hass:
test_if_not_fires_on_entity_change_below_to_below(hass,
test_user_setup_wosensor(hass):
test_extract_entity_ids_from_devices(hass,
test_camera_content_type(hass,
test_ssdp_already_in_progress_host(
test_offer_failure(
test_multiple_active_orders(self):
test_basic_usage(hass,
test_get_properties(
test_form_reauth_legacy(hass:
test_save_bad_data_tuple_wrapper():
test_zeroconf_unique_id_required_abort(
test_get_events_invalid_filters(hass,
test_http_event_api_failure(
test_get_action_capabilities(
test_form_missing_key_get_info(hass,
test_error_flipr_api_sensors(hass:
test_not_valid_path_to_file(
test_light_turn_off_service(hass,
test_supported_brands(hass,
test_subscribe_unsubscribe_logbook_stream(
test_tracked_wireless_clients(hass,
test_delay(hass,
test_locate_service(hass,
test_datetime():
test_multiple_covers(
test_ensure_state_can_be_copied(hass_recorder):
test_hassio_discovery(hass):
test_user_with_password(hass,
test_manifest_json(hass,
test_get_attachments_with_verify_set_garbage(
test_integration_services(
test_node_status_sensor(hass,
test_setup_raise_auth_failed(hass,
test_camera_with_stream_profile(hass):
test_select_set_option_light_camera(
test_arm_night_no_pending_when_code_not_req(
test_notification(
test_unban_one(hass):
test_off_action_with_transition(
test_update_fails(hass:
test_loading(hass,
test_auth_legacy_support_with_password(
test_user_flow_undiscovered_manual(hass:
test_condition_template_error(hass,
test_trigger_zero_trigger_time_with_pending(
test_thumbnail_bad_event(
test_select_async_setup_entry(hass,
test_import_flow_options(
test_sensor_nvr_missing_values(hass:
test_set_tilt_position(hass,
test_version_source(hass,
test_multiple_readings_are_sampled(hass,
test_publish_mqtt_with_remote_code_text(
test_webhook_climate_event(hass):
test_send_multiple_message(hass,
test_select_entity(hass:
test_light_no_unique_id(hass:
test_bulk_set_config_parameters(hass,
test_include_events_entity(hass,
test_restore_traces(hass,
test_reload_on_title_change(hass)
test_setup(hass:
test_malformed_and_condition_list_shorthand(hass):
test_detection_flow_with_custom_path(hass):
test_setup_entry_wait_usb(hass:
test_cover_async_setup_entry(hass,
test_if_fires_on_position(hass,
test_setup_query_params(hass,
test_custom_log_entry_discoverable_via_entity_matches_only(hass,
test_icon_not_found(hass,
test_thermostat_hvac_modes_with_heat_only(hass,
test_sensor_state(hass):
test_config_flow_reauth_with_errors(mock_account,
test_multiple_agreements(
test_unexpected_exception(hass):
test_encryption_key_invalid_psk(hass,
test_extract_frame_integration_with_excluded_integration(caplog):
test_fetching_without_verify_ssl(hass,
test_user_flow_wrong_st(hass:
test_setup_params(hass:
test_browse_media_source_id(
test_remove_config_entry_device(
test_service_set_persons_home_invalid_person(
test_no_devices_error(hass:
test_valid_supported_color_modes():
test_power_monitoring(hass:
test_remove_air_quality_entities(hass,
test_bridge_zeroconf(hass,
test_setup_lcn_binary_sensor(hass,
test_setup_min(hass,
test_browse_media_bad_identifier(
test_condition_subscript(hass,
test_sending_mqtt_commands_rgbww(hass,
test_image_name_container(hass):
test_system_health_info_yaml_not_found(hass):
test_future_event_offset_update_behavior(
test_service_call_with_ascii_qos_retain_flags(
test_subscription_creation_fails(hass:
tests_glob=$(echo
test_form_invalid_data(hass):
test_attributes_dimmer(hass,
test_user_owserver_options_empty_selection(
test_get_translations(hass,
test_step_reauth_failed(hass):
test_discovery_cannot_connect_http(hass,
test_migration_ti_cc_to_znp(old_type,
test_media_player_unjoin_group(
test_google_update_expose_trigger_sync(
test_service_call_without_topic_does_not_publish(
test_wait_continue_on_timeout(
test_turn_on_with_brightness(hass:
test_async_setup_entry_not_ready(hass:
test_air_quality(hass:
test_reading_yaml_config(hass,
test_agreement_already_set_up(
test_switch_observed(hass,
test_track_template_result_none(hass):
test_setup_auth_failed(hass:
test_form_uuid_present_in_both_functions_uuid_q_empty(hass):
test_group_media_control(hass,
test_async_get_source_ip_no_enabled_addresses(hass,
test_event_data(test_address_d,
test_transition(hass,
test_multiple_config_entries(
test_if_fires_on_change_with_for_template_1(hass,
test_turn_on_fan_preset_mode(hass:
test_binary_sensor_errors(hass,
test_switch(hass,
test_refresh_library(
test_setup_http_exception(hass:
test_setup_sysbus(hass):
test_start_charging(hass):
test_is_on(hass,
test_zeroconf_not_found_error(hass):
test_discovered_by_discovery_and_dhcp(hass):
test_warn_outdated_mysql(caplog,
test_sending_mqtt_brightness_command_with_template(
test_zha_logbook_event_device_with_triggers(hass,
test_get_states_query_during_migration_to_schema_25_multiple_entities(
test_template_with_templated_delay_on(hass):
test_update_config_entry_unique_id(
test_node_model_change(hass,
test_convert_from_celsius():
test_hmip_multi_cover_slats(hass,
test_turn_on_with_speed_and_percentage(hass,
test_named_arguments(
test_light_setup(
test_connect_exception(hass,
test_import_cannot_connect_serial(hass:
test_numbers(
test_init_auth_failure(hass:
test_generate_backup_when_backing_up(hass:
test_select_setup_light(
test_api_base_url_with_domain(mock_stack):
test_user_flow_manual(hass):
test_get_entries_ws(hass,
test_integration_unloaded(hass,
test_options_flow_db_url_empty(hass:
test_panic(hass,
test_form_invalid_version(hass:
test_humidity_change_humidifier_trigger_on_long_enough_2(hass,
test_significant_change_extra(hass,
test_update_error(
test_unload(hass:
test_legacy_camera_b64_encoded_with_availability(
test_reloadable_multiple_platforms(hass,
test_homekit_finds_linked_motion_sensors(
test_device_entities(hass):
test_update_ws_unauthorized_error(
test_supported_features_play_pause(
test_import_sysbus_with_mount_dir(hass):
test_entity_with_specific_version(
test_form_invalid_ip(hass:
test_reload_automation_when_blueprint_changes(hass,
test_setup_with_config(hass,
test_methods(hass,
test_import_success(hass:
test_database_lock_without_instance(hass,
test_forgiving_add_index_with_other_db_types(caplog,
test_service_vehicle_id_not_found(hass):
test_nextdns_system_health(hass,
test_availability_poll_state_once(
test_alexa_handle_logout(hass,
test_form_reauth_auth(hass:
test_unsolicited_ssdp_registered_callback(hass,
test_listen_once_event_with_callback(hass):
test_find_next_time_expression_tenth_second_pattern_does_not_drift_entering_dst():
test_precipitation_no_unit(
test_integration_entities(hass):
test_valid_serial_schema():
test_options_flow_change_usb_sphere(hass:
test_get_preferences_default(hass,
test_tilt_given_value_altered_range(hass,
test_dupe_import_false_check_data_keys(hass,
test_entry_message_from_event_binary_sensor_sound(self):
test(hass)
test_hassio_system_health_with_issues(hass,
test_cancelling_at_start_when_running(hass,
test_ignore_issue(hass:
test_not_fires_on_mqtt_message_after_remove_by_mqtt_with_device(
test_restore_snapshot_on_reconnect(hass):
test_offer_for_stream_source(
test_form_with_auth_errors(hass,
test_zeroconf_ip_change(hass,
test_timestamp_state(hass,
test_get_unifi_controller_verify_ssl_false(hass):
test_mirrored_observations(hass):
test_import_duplicate_yaml(hass:
test_heater_cooler_change_swing_mode(hass,
test_scan_description_fetch_fail(
test_ws_create(
test_render_template_renders_template(hass,
test_number_entities(
test_if_not_fires_on_entity_change_above_to_above(hass,
test_scenes(hass,
test_user(hass,
test_discovery_expansion(hass,
test_service_update_devices(hass,
test_discovered_by_websocket_no_vid_pid(hass,
test_discovery_update_select(hass,
test_service_fan_update(hass,
test_significant_change_temperature(old_state,
test_snmp_error(hass:
test_config_entry(hass:
test_owserver_setup_valid_device(
test_form_pairexception(hass,
test_discovered_by_dhcp_or_homekit(hass,
test_record_stream_audio(hass,
test_event_listener_filtered_allowlist(
test_failed_cast_internal_url(hass,
test_flow_unlock_network_timeout(hass):
test_binary_sensor_entitity(
test_zeroconf_missing_data(hass):
test_user_adds_existing_device(hass,
test_set_preset_mode_invalid(hass,
test_async_update_locked_multiple_updates(hass,
test_async_register_device_longpress_fails(hass,
test_setup_config_full(hass,
test_entity_service_schema():
test_templatex_state_boolean(
test_ha_to_risco_schema(hass):
test_node_removed(hass,
test_reject_timezoneless_datetime_str(
test_config_google_home_entity_id_to_number(hass,
test_get_version_fails(hass):
test_thread_status_to_str():
test_get_image_from_camera(
test_config_flow_auth_invalid_pin(mock_keystore,
test_auth_active_with_token(hass,
test_cost_sensor_handle_mwh(hass,
test_service_set_ac_cancel(hass:
test_options_flow_exclude_mode_skips_category_entities(
test_zero_conf(hass:
test_trigger_invalid_entity_id(hass,
test_rtsp.main()
test_level_controllable_output_cover(hass,
test_automation_config_platform(hass):
test_homekit_start_with_a_broken_accessory(hass,
test_get_all_home_ids():
test_browsing(hass,
test_redact_diagnostics(hass,
test_release_notes_entity_does_not_support_release_notes(
test_default_setup(hass,
test_notifications(hass):
test_clear_completed_items(hass,
test_get_events_bad_start_time(hass,
test_setup_tcp_adapter(hass,
test_error_for_none_zero_exit_code(caplog:
test_event_listener_states(
test_change_statistics_unit(hass,
test_auth_failure(hass,
test_at_start_when_starting_callback(hass,
test_catch_log_exception():
test_gateway_device_no_configuration_url_when_addon(hass,
test_import(
test_light_all_options(
test_select_dpt_2_simple(hass:
test_disarm_failure(hass):
test_dupe_import_no_options(hass,
test_calendar_yaml_update(
test_entity_with_auto_update(
test_state_raises(hass):
test_discovered_by_dhcp_or_integration_discovery(
test_light_service_calls(hass:
test_config_yaml_bool(hass,
test_xiaomi_formaldeyhde(hass):
test_light_turn_on(
test_supported_states(hass,
test_wc_light(hass,
test_not_allow_clip_sensor(hass,
test_validate_refresh_token(provider,
test_shutdown_closes_connections(hass,
test_skip_old_entity_migration_for_multiple(
test_device_info_invalid_url(hass,
test_service_set_ac_start_with_date(
test_message1.set_payload("Test
test_template_with_trigger_templated_delay_on(hass):
test_update_addon(
test_scrape_sensor_no_data_refresh(hass:
test_duplicate_bridge_import(hass):
test_config_entry_login_error(hass:
test_local_form(hass):
test_theme_selector_schema(schema,
test_repeat_while_condition_validation(hass,
test_binary_sensor_setup_camera_all(
test_switch_set_states(hass,
test_ssdp_discovery_failed(hass,
test_user_create_entry(hass):
test_one_sensor_site_running(hass,
test_unit_of_measurement(hass,
test_updates_state_when_sensor_pushes(
test_discover_switch_noautoadd(hass,
test_abort_if_already_setup_alias(hass):
test_video(
test_restore_state_and_return_to_normal(hass):
test_minimal_config(hass,
test_import_luxembourg(hass,
test_thermostat_fan_on(
test_flow_with_password(hass:
test_authentication_errors(hass:
test_async_step_bluetooth_valid_device_legacy_encryption_wrong_key(hass):
test_unsupported_model_error(hass:
test_basic_setup(hass):
test_async_play_media_tts_timeout(hass,
test_boolean_in_serializer():
test_send_key_websocketexception_encrypted(
test_measure_multiple(hass):
test_user_form_show_advanced_options(hass):
test_fortrez_ssa3_siren(hass,
test_reloadable(hass,
test_form_unknown_error(
test_debug_info_qos_retain(hass,
test_hls_stream(hass,
test_switch_command_state_code_exceptions(
test_includes_only_with_glob_case_2():
test_send_with_energy_config(hass,
test_user_owserver(hass):
test_fan_restore(hass,
test_load_aldb(hass,
test_invalid_key(hass:
test_thermostat_set_invalid_hvac_mode(
test_themes_reload_themes(hass,
test_duplicate_zerconf_ignored(hass:
test_ll_hls_stream(hass,
test_show_authenticate_form(hass):
test_pushed_output_status_change(hass,
test_link_step_fails(hass,
test_light_state(
test_migrate_api_key(hass):
test_auth_failure(hass:
test_lock_locked(
test_multicast_set_value_options(
test_trigger_entity_device_class_errors_works(hass):
test_turn_on(hass,
test_formation_strategy_restore_automatic_backup_ezsp(
test_include_events_domain_glob(hass,
test_turn_on_fireplace(hass:
test_missing_keys_file_abort(hass,
test_sensor_lower(hass):
test_load_handles_aiohwenergy_exception(aioclient_mock,
test_setup_login_error(
test_update_duplicates(hass,
test_block_device_rgb_bulb(hass,
test_probe_radios(xbee_probe,
test_refresh_node_value(hass,
test_connect_retry(hass,
test_median_sensor(hass):
test_calendars_api(hass,
test_compile_hourly_statistics(
test_state_district(hass:
test_cell_state_sensor_heat_recovery(
test_manifest_list_specific_integrations(hass,
test_discovery_incl_nodeid(hass,
test_wrapped_bleak_scanner(hass,
test_async_step_user_with_found_devices(hass:
test_sun_renders_once_per_sensor(hass,
test_select_error(
test_setup_entry_bad_token_reauth(hass:
test_sunrise_trigger(hass,
test_x_forwarded_host_with_trusted_proxy(aiohttp_client):
test_not_supported(hass:
test_missing_service_account(hass):
test_output_turn_on_with_attributes(dim_output,
test_user_incomplete_info(hass,
test_options_configure_rfy_cover_device(hass):
test_helper_no_match(hass,
test_data_template_with_templated_key(hass):
test_initial_setup_logs_error(
test_wlightbox_s_update(wlightbox_s,
test_setting_sensor_value_via_mqtt_message(
test_track_template_result(hass):
test_x_forwarded_host_without_trusted_proxy(aiohttp_client):
test_accumulated_precipitation_to_metric():
test_effect_list_template(
test_channel(hass):
test_database_lock_and_overflow(hass:
test_config_entry_updated(hass,
test_abort_if_spotify_error(
test_pack(hass,
test_device_class(hass,
test_config.update(validated_user_input)
test_range_1_digit_sensor(hass):
test_form(hass,
test_config_local_sdk_if_ssl_enabled(hass,
test_internal_discovery_callback_fill_out_default_manufacturer(hass):
test_entry_already_configured(hass,
test_template_syntax_error(hass):
test_missing_required_scopes_requires_reauth(
test_service_set_charge_schedule(hass:
test_enqueue_rewrite(hass,
test_controlling_state_via_topic_and_json_message(
test_singleton_async(mock_hass,
test_media_permission_unauthorized(hass,
test_ssdp_discovery(hass:
test_config_bad_commands(hass):
test_fire_event(hass):
test_user_form(discover_mock:
test_old_firmware_dimmable_light(hass:
test_process_datetime_to_timestamp_mirrors_utc_isoformat_behavior(
test_form_and_auth(hass):
test_validate_trigger_unsupported_trigger(
test_profiles(hass):
test_device_manager_failure(
test_unique_id_migration_dupes(
test_import_failed_connection(hass:
test_sensors_update_failed(hass):
test_update_core(hass,
test_form_good(hass:
test_form_error_unexpected_data(hass:
test_get_triggers_block_device(
test_set_target_humidity_bad_attr(hass):
test_validate_or_move_away_sqlite_database_with_integrity_check(
test_validate_access(provider,
test_services_config_entry(hass):
test_form(
test_flow_import_cannot_connect(hass:
test_availability_icon_picture(hass,
test_form_already_configured(mock_wall_connector_version,
test_full_flow(hass,
test_process_advertisements_ignore_bad_advertisement(
test_raise_config_entry_not_ready_when_offline(hass):
test_homekit_reset_single_accessory_no_match(hass,
test_update_with_application_xml_convert_json_attrs_with_jsonattr_template(
test_oauth_session_no_token_refresh_needed(
test_async_show_setup_msg(hass,
test_number_light_simple(
test_measure_multiple(self):
test_ikea_default_transition_time(hass,
test_skip_update(
test_ignore_update_state_if_unknown_via_state_topic(
test_setup_config_entry_not_ready_switch_instance_fail(
test_trusted_device_success(hass:
test_import_flow_started(hass:
test_pair_error_import_abort(hass,
test_reauth(hass:
test_current_power_w(port,
test_lidl_christmas_light(hass,
test_subscribe_topic(hass,
test_thermostat_with_fan_modes_with_off(hass,
test_user_exception_user_step(hass:
test_pymodbus_close_fail(hass,
test_hassio_already_configured(hass):
test_visibility(
test_restoring_clients(hass):
test_event_rrule_ongoing(mock_now,
test_mix_global_timeout_freeze_and_zone_freeze_other_zone_inside_executor_job(
test_dupe_import(hass:
test_set_zonnsmart_preset(hass,
test_form_2fa_unknown_error(hass):
test_name(hass,
test_adam_climate_entity_climate_changes(
test_number_lock_remove(
test_async_discovered_device_api(
test_group_alarm_disarmed(hass):
test_adam_climate_binary_sensor_change(
test_step_homekit_zeroconf_ip_already_exists(hass,
test_no_currencies(hass:
test_setup_legacy(hass,
test_options_flow_correct_prefixes(hass:
test_lights_all_dimmable(hass,
test_format_version():
test_coordinator_detected_disabled_api(aioclient_mock,
test_setting_sensor_empty_last_reset_via_mqtt_message(
test_action(hass):
test_config_entry_title_from_home(hass,
test_reload_entry_legacy(
test_flow_user_no_discovery(hass:
test_discrete_true(hass,
test_manual_no_capabilities(hass:
test_import_migrate(hass):
test_v2_set_percentage(hass,
test_hidden_by_str_not_allowed(hass):
test_zeroconf_setup_onboarding(hass):
test_v3_weather(
test_fan_init(
test_async_step_user_only_allows_one(hass):
test_firing_event_template(hass):
test_show_setup_msg(hass,
test_config_flow_update_device(hass:
test_alexa_config_expose_entity_prefs(hass,
test_included_and_excluded_simple_case_with_underscores(hass,
test_event_zones(hass,
test_async_added_to_hass(default_sensor,
test_minor_version_default(hass,
test_cast_platform_play_media_local_media(
test_no_robots(
test_wallbox_number_class(hass:
test_websocket_without_platform(
test_flow_import(hass:
test_ssdp_not_wilight_abort_3(
test_thumbnail(hass:
test_setup_component_no_error(hass:
test_smile_adam_xmlerror(hass,
test_duplicate_error(
test_get_triggers(
test_color_rgbww_to_rgb():
test_already_configured_port(hass:
test_form_cannot_connect_throwing_socket_timeout_exception(hass):
test_cache_garbage_collection():
test_setup_and_stop_no_bluetooth(hass,
test_socket.setblocking(False)
test_discovery_cannot_connect(hass):
test_dupe_import_false_check_no_default_option(hass,
test_subscribe_same_topic(hass,
test_switching_adapters_based_on_rssi_connectable_to_non_connectable(
test_pin_form_bad_pin_format(hass,
test_calling_service_basic(hass):
test_subscribe_unsubscribe_entities(hass,
test_number(
test_get_network_settings(app_controller,
test_thermostat_with_no_off_after_recheck(hass,
test_listen_once_event_with_coroutine(hass):
test_image.open("rb")
test_homeassistant_path(hass,
test_thermostat_set_preset_on(hass,
test_extra_state_attributes(ecobee_fixture,
test_representing_yaml_loaded_data(try_both_dumpers):
test_browse_media_unconfigured(hass:
test_duplicate_error(hass,
test_load_application_credentials(
test_no_still_image_url(hass,
test_service_refresh_devices(hass,
test_unique_id_migrate(hass,
test_nan_serialized_to_null(caplog):
test_dhcp_discovery_intellifire_device(
test_discovered_by_websocket_scan_limited_by_manufacturer_matcher(
test_entry_setup_no_config(hass:
test_compile_hourly_energy_statistics_unsupported(hass_recorder,
test_form_catch_all_exception(hass):
test_sound_mode_list_children_and_attr(
test_step_user_no_selection(hass:
test_extra_state_attributes(port,
test_sensors_100(hass,
test_subscribe_unsubscribe_logbook_stream_included_entities(
test_spa_temperature(hass:
test_turn_on_with_no_brightness(light_mock,
test_webhook_error_in_data(hass):
test_set_state_via_stopped_state_no_position_topic(hass,
test_show_reauth(hass):
test_relays_open(control_motors_relays,
test_flow_already_exist(hass:
test_update_state_via_state_topic_template(
test_arming(hass,
test_link_config_entry(hass,
test_static_paths(hass,
test_set_position_templated_and_attributes(hass,
test_async_setup_entry_connect_error(hass):
test_cancel_delay(hass):
test_remaining_time_for_filter_in_the_future(
test_basic_sanity_check(hass_recorder):
test_ssdp_discovery(hass):
test_flow_auth_authentication_error(hass):
test_uptime_sensor(
test_setup_serial_wrong_telegram(
test_form_ssdp_existing_entry_with_alternate_port(hass:
test_connection_error(hass):
test_latest_rates_timeout(
test_missing_option_flow(hass):
test_automation_with_error_in_script(
test_turn_on_color(hass:
test_public_weather_sensor(hass,
test_gateway_create_group_with_id(hass,
test_flow_fails_incorrect_time(hass:
test_migrate_unique_id_temperature(
test_option_form(hass):
test_set_temperature_wrong_mode(hass,
test_message_callback_exception_gets_logged(hass,
test_form_import_with_entity_config(hass):
test_abort_hassio_discovery_for_other_addon(
test_config_without_unique_id(hass):
test_show_form_two_hubs(hass,
test_convert_same_unit():
test_ingress_missing_peername(hassio_client,
test_remaining_time_for_filter_today(
test_climate_device_with_preset(hass,
test_existing_node_ready(hass,
test_derived_upnp_sensors(hass:
test_tracking_battery_successful(
test_basic_usage(
test_hmip_multi_area_device(hass,
test_update_timeout(
test_async_step_integration_discovery_during_onboarding_two_adapters(
test_log_levels(hass,
test_stop_cover(hass:
test_setup_partial_config(hass,
test_indexed_sensor_state_via_mqtt3(hass,
test_event_media_data(hass:
test_config_flow_discovery_2_success(hass):
test_light_async_turn_on_fail_async_send_clear_effect(
test_discovery_update_light_topic_and_template(
test_dev_url(aioclient_mock,
test_automation_with_integration_without_device_action(
test_sensor_setup_camera_with_last_trip_time(
test_recent_items_intent_no_items(hass,
test_state_changes_are_published_to_mqtt(
test_log_thread_frames(hass,
test_abort_if_authorization_timeout(hass,
test_user_adds_device_by_ip_uses_unicast_scan(hass,
test_flow_reset_works(hass):
test_migrate_statistics_only(hass):
test_scan_with_registered_callback(
test_discovery_update_switch_template(hass,
test_aqara_gateway_e1_setup(hass):
test_pushon_controlling_state_via_mqtt(hass,
test_run_camera_setup(hass,
test_humidity_change_dry_trigger_on_long_enough(hass,
test_connection_error_at_startup(
test_arming(hass):
test_flow_already_registered_entry(hass,
test_multiple_clip_preview_events_in_session(
test_subscribe_topic(
test_migrate_device_mac_button_fail(
test_audio_input_sensor(hass,
test_cover_battery_sensor(hass,
test_reset_unloads_entry_if_setup(hass,
test_remove_orphaned_entries_service(hass,
test_ge_12730(hass,
test_unknown_state_outlier(values):
test_multiple_zeroconf_instances_gives_shared(
test_onboarding_progress(hass,
test_media_player_playback(
test_setup_component_invalid_token(hass,
test_user_setup_wohand(hass):
test_anna_climate_binary_sensor_change(
test_websocket_integration_list(ws_client:
test_pin_form_init(pin_form):
test_auto_detect_bluetooth_adapters_linux_none_found(hass,
test_service_device_id_not_mazda_vehicle(hass):
test_reauth_confirm_valid(hass,
test_pb_read_value(
test_get_async_client_patched_close(hass):
test_entity_debug_info_max_messages(hass,
test_speedtestdotnet_sensors(
test_migrate_config_entry(hass:
test_mqtt_payload_not_an_option_warning(
test_disabling_entity(hass,
test_get_state_pause(
test_form_user_with_serial_elk_no_discovery(hass):
test_discovered_by_unifi_discovery_direct_connect_updated(
test_light_state_change(hass,
test_pushbullet_push_email(hass,
test_single_entry(hass:
test_set_0_percentage_turns_off(
test_rgb_light_effect_speed(hass:
test_config_flow_user_initiated_auth_failure(hass):
test_bad_gateway_when_cannot_find_supervisor(hassio_client):
test_import_flow_deferred_ssdp(
test_symo_meter(hass,
test_ws_delete(hass,
test_get_github_import_url():
test_modern_to_percentage(hass,
test_zeroconf_form_token_unavailable(hass:
test_custom_birth_message(hass,
test_heater_cooler_respect_supported_op_modes_2(hass,
test_button_press(hass,
test_user_step_success(hass:
test_volume_convert(
test_device_tracker_discovery_update(hass,
test_add_doorbell_text(
test_does_not_work_into_the_future(hass):
test_discovery_update_unchanged_cover(hass,
test_temperature_convert(
test_get_entity_ids_with_domain_filter(hass):
test_setup_succeeds(hass,
test_flow_import_network_unreachable(hass):
test_refresh_expired_stream_failure(hass,
test_set_operation(hass,
test_wrapped_instance_changes_filters(
test_switch_dynamically_handle_segments(
test_rm_pro_sensor_update(hass):
test_serialize_body_None():
test_view_invalid_entry_id(integration,
test_no_color_modes(hass:
test_get_triggers_no_unit_or_stateclass(
test_jammed_when_locking(hass):
test_sync_message_recovery(hass,
test_config_flow_manual_host_success(hass):
test_form_unexpected(hass):
test_removing_file(hass:
test_subscribe_topic_not_match(
test_user_custom_url(hass,
test_get_image_http_remote(hass,
test_recorder_info_no_recorder(hass,
test_states(hass):
test_execute_stmt(hass_recorder):
test_homekit_reset_accessories_not_bridged(hass,
test_min_max_step_attributes(hass,
test_options_flow_no_time_step(
test_rate_limit(
test_hassio_cannot_connect(
test_offline_device_raises(hass,
test_bad_token_with_tokenless_server(
test_send_power_on(hass,
test_reauth_flow_update_configuration(hass):
test_dump_service(hass,
test_heal_node(hass,
test_level_action_no_template(
test_addon_installed_failures(
test_cancelling_at_start_when_starting(hass):
test_api_host_info_error(hassio_handler,
test_duplicate_user(hass:
test_on_off_fan_state(
test_async_user_not_allowed_do_auth(hass,
test_async_step_bluetooth_not_supported(hass):
test_start_stop_scanner(
test_process_play_media_url(hass,
test_sensors_connection_error(hass:
test_if_fires_on_entity_change_with_from_not_to(
test_energy_sensor(hass:
test_cleanup_on_shutdown(hass:
test_cost_sensor_handle_gas_kwh(
test_error_rendering_template(
test_recorder_pool_called_from_event_loop():
test_form_broad_exception(hass):
test_show_ssdp_form(hass:
test_discovery_device_remove_relay_as_light(hass,
test_form_dhcp(hass:
test_component_not_setup_twice_if_loaded_during_other_setup(hass):
test_if_fires_on_entities_change_overlap(hass,
test_event_on_update(hass):
test_abort_firmware_update_failures(
