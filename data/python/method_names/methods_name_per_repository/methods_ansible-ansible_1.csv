test_docs_suboptions=dict(
test_action_base__fixup_perms2(self):
test_rolemixin__build_doc():
test_update(self):
test_equals_ok():
test_coverage():
test_cache_invalid_cache_content(content,
test_deprecate_with_collection():
test_cwd_not_a_dir_noignore(self,
test_execute_list_collection_no_valid_paths(mocker,
test_fqcn_validation(fqcn,
test_git_ssh_role_url():
test_get_text_width_no_locale(problematic_wcswidth_chars):
test_verify_collections_no_version(mock_isdir,
test_play_compile():
test_failed_states_deprecation_instance_attr(self):
test_encrypt_with_ident():
test_verify_file_signatures(signatures,
test_get_error_lines_error_empty_lines_around_error(self):
test_me():
test_exit_json_exits(self,
test_execute_list_collection_specific(mocker,
test_cond_eval(native_template_mod):
test_get_distribution_version_not_linux(mocker,
test_ttyify(text,
test_fail_json_msg_as_kwarg_after(self,
test_deprecate_with_date(reset):
test_play_with_pre_tasks():
test_concrete_artifact_manager_scm_cmd(url,
test_initial_get(self):
test_distribution_version(am,
test_podman_fallback(ansible_test,
test_case.failures.append(TestFailure(message=message,
test_duplicate_yaml_dict_key_warn(dupe_node,
test_gather_services(self):
test_encrypt_wrapped_crypt_algo(self,
test_import_key_with_http_proxy(self):
test_aliases_invalid(arg_spec,
test_play_with_post_tasks():
test_root_loader():
test_python_interpreter(self,
test_candidate_with_conflict(monkeypatch,
test_set_permanent_hostname_line_missing(self):
test_check_required_if():
test_display_with_fake_cowsay_binary(capsys,
test_input():
test_play_with_vars_files(value,
test_equal(self,
test_file_multiple_extensions(mocker,
test_Display_banner_get_text_width_fallback(monkeypatch):
test_name)()
test_GzipDecodedReader_no_gzip(monkeypatch,
test_build_requirement_from_name_second_server(galaxy_server,
test_finding_middle(self):
test_seed(self):
test_groups.setdefault(key,
test_extract_tar_member_trailing_sep(mocker):
test_del(self):
test_globals_empty(self):
test_chain_deletion(self):
test_network_gather_facts_fqcn(self,
test.add_argument('--base-branch',
test_extract_tar_member_no_trailing_sep(mocker):
test_ratelimit(self):
test_legacy_plugin_dir_to_plugin_type(dirname,
test_verify_collections_name(mock_verify,
test_distribution_sles4sap_suse_sles_sap(mock_module,
test_multiple_actions_ping_shell(self):
test_mode_changed_to_0660_check_mode_no_file(am,
test(path)])
test_set_cache(self):
test_cbt_no_cryptography(monkeypatch):
test_logger():
test=dict(type='str'),
test_install_explicit_role_with_collections(requirements_file,
test_opensuse_leap_id(self):
test():
test_cond_eval():
test_recursive_diff_negative(self,
testcase['result'].items():
test_legacy_modules_list():
test_docker_images(docker_images,
test_deprecate_with_date_and_collection(reset):
test_role_download_url_default_version(mocker,
test_check_required_if_missing_required():
test_selinux_mls_enabled(self):
test_package_path_masking():
test_get_sysctl_nonzero_rc(self):
test_build_with_existing_files_and_manifest(collection_input):
test_keyed_group_with_trailing_separator(inventory_module):
test_build_requirement_from_name(galaxy_server,
testcase.get('uname_r',
test_parse_distribution_file_slackware(mock_module,
test_set_cwd_unreadable_use_gettempdir(self,
test_sanitize_keys_with_ignores():
test_context.items():
test_get_sg_inq_serial(self):
test_empty_vs_no_code():
test_globals(self):
test_no_log_alias(stdin,
test_collpkg_loader_load_module():
test_rolemixin__build_doc_no_filter_match():
tested_str.count('.')
test_sunos_service_start(mocked_sunos_service,
test_cli_options(required_signature_count,
test_new_or_existing_module():
test_deprecate_message_only(reset):
test_sets.extend(final_candidates)
test_add(is_module,
test_get_permanent_hostname_existing_whitespace(self):
test_iter_modules_namespaces():
test_get_sysctl_linux_vm(self):
test_pause_missing_curses(mocker,
test_build_requirement_from_path_no_version(collection_artifact,
test_Request_open_gzip(urlopen_mock):
test_flush(self):
test_play_with_roles(mocker):
test_no_zip_binary(self,
test_undefined(self):
test_play_with_tasks():
test_common=("${common[@]}"
test_deprecate_with_date():
test_check_required_one_of_context(arguments_terms):
test_fail_rekey_on_member(self,
test_module_alias_deprecations_warnings(monkeypatch):
test_on_collection_load():
test_selinux_initial_context(self):
test_default_collection_config():
test_rolemixin__build_summary_empty_argspec():
test_stdin_binary(self):
test_dict_merge_invalid_dict(self):
test_git_version_role_url():
testcase.startswith(prefix):
test_missing_required_galaxy_key(galaxy_yml_dir):
test_auth():
test_catch_exception(self):
test_check_missing_parameters_positive():
test_constraints():
test_spec_with_aliases():
test_sanitize_keys_dict():
test_keys(self):
test_no_zip_zipinfo_binary(self,
test_unknown_mime(mocker):
test.add_argument_group(title='common
test.filter_targets_by_version(test_targets,
test_paramiko_connect(play_context,
test_get_permanent_hostname_missing(self):
test_items.items())
test_invalid_crypt_salt():
test_groups.items())
test_parse_distribution_file_clear_linux_no_match(mock_module,
test_iterating_states_deprecation_instance_attr(self):
test_check_required_one_of_missing(arguments_terms):
test_warning_extra_keys(galaxy_yml_dir,
test_keyed_group_str_no_default_value(inventory_module):
test_paths(args,
testing.add_argument(
test_bad_mime(mocker):
test_nspkg_loader_not_interested():
test_install_role_with_collections_and_path(requirements_file,
test_nspkg_loader_load_module():
test_extract_tar_dir_exists(mocker,
test_invalid_error_message():
test_vendored(vendored_pkg_names=None):
test_check_required_if_missing():
tests+=("$line");
test_build_requirement_from_name_with_prerelease(galaxy_server,
test_check_required_by_missing():
test_duplicate_yaml_dict_key_ignore(dupe_node,
test_get_collection_signatures(api_version,
test_suites.to_pretty_xml()
test_role_download_url(init_mock_temp_file,
test_validate_certs_with_server_url(global_ignore_certs,
test_execute_list_collection_all(mocker,
test_install_collection_with_no_dependency(collection_artifact,
test_spec_with_defaults():
test_Display_set_queue_fork():
test_get_virtual_facts_bhyve(mocker):
testcase.get('platform.system',
test_play_hosts_template_expression():
test_candidates.append((test_context,
test_Display_display_lock(monkeypatch):
test_sub_spec():
test_finder_ns():
test_set_options_credential_exposure():
test_paramiko_connection_module(play_context,
test_rolemixin__build_summary():
test_toplevel_iter_modules():
test_import_from_collection(monkeypatch):
testcase['command_output'].get(command,
test_chain_creation_check_mode(self):
test_deprecate_without_list(am,
test_validate_certs(global_ignore_certs,
test_finder_playbook_paths():
testcoll.__loader__.get_code(testcoll.__name__)
test_check_required_one_of():
test_deprecate_with_date_and_collection():
test_exit_json_removes_values(self,
test_get_collection_signatures_backwards_compat(api_version,
test_check_missing_parameters():
tested_str.startswith(('git+',
test_galaxy_yaml_no_mandatory_keys_bad_yaml(galaxy_yml_dir):
test_build_requirement_from_name_single_version(galaxy_server,
tests(self):
test_wrapped_output_multiple_empty_lines(self):
test_service_mgr_runit_one(self,
test_world_writable_cache(cache_dir,
test_bool_type_server_config_options(config,
test_deprecate_with_version_and_collection():
test_merge_sub_dicts(self):
test(s)
test_execute_list_collection_specific_invalid_fqcn(mocker,
test_sets.extend(test_candidates)
test_set(self):
test_date_time_tz(fake_date_facts,
test_no_retries(self):
test_get_distribution_not_linux(system,
test__split_multiext_count(kwargs,
test_play_with_handlers():
test_iter_modules_impl():
test_get_text_width_no_locale():
test_Display_display_fork():
test_galaxy_yml_list_value(galaxy_yml_dir):
tests.extend(get_tests(pathlib.Path(glob)))
test_unsafe_lookup_no_conversion():
test_keywords_not_in_PY2():
test_finder_not_interested():
test_comment_position_at_end(self):
test_update_cache_if_changed(self):
test_host_label(self):
test_finder_coll():
test_basic_play():
test_module_utils_basic_ansible_module_set_directory_attributes_if_different(self):
test_existing_cache(cache_dir):
testgroup=dict(
test_get_text_width():
test_validate_rate_limit_argument_spec(mocker,
test_case.failures.append(TestFailure(message='rc=%s'
test_fail_json_removes_values(self,
test_items.keys())
test_validate_retry_argument_spec(mocker,
test_get_cpu_info(mocker,
test_shadowed_encrypt_string_prompt(self,
testcases.append(testcase.split('.',
test_add():
test_get_error_lines_error_in_last_line(self):
test_collpkg_loader_not_interested():
test_hello():
test.freeze_requirements()
test.add_argument_group(title='change
test_get_sysctl_openbsd_kern(self):
test_destination_ports(self):
test_set_context_if_different(self):
test_check_required_by_options_context(path_arguments_terms):
test_check_required_by():
test_play_invalid_hosts_sequence(value):
test_verify_collections_no_remote(mock_verify,
test_alias_deprecation():
test_noop_64999(self):
test_prepare_multipart():
test_module_alias_deprecations_warnings():
test_deprecate(am,
test_cache_complete_pagination(cache_dir,
testcase.get('platform.version',
test_concrete_artifact_manager_scm_cmd_shallow(url,
test_numbers(self):
test_role_download_github_default_version(init_mock_temp_file,
test_play_empty_hosts(value):
test_extract_tar_dir_does_not_exist(mocker,
test_check_required_by_multiple(path_arguments_terms):
test_add_sequence():
test_check_required_by_missing_none(path_arguments_terms):
test_validate_basic_auth_arg(mocker,
testhost=dict(
test_chain_deletion_check_mode(self):
test_check_required_if_missing_multiple():
test_install_implicit_role_with_collections(requirements_file,
test_evaluate_tags_special_all_in_only_tags_and_object_untagged(self):
test_collectionref_components_invalid(name,
test_keyed_group_str_with_default_value(inventory_module):
test_timeout.write(args)
test_git_https_role_url():
test_build_requirement_from_name_multiple_versions_one_match(galaxy_server,
test_keyed_group_exclusive_argument(inventory_module):
test_undefined_variable(native_template_mod):
test_loader_install():
test_multiple_deprecations(deprecation_messages,
test_bad_blocks_roles(mocker,
test_missing_lchmod_is_link_in_sticky_dir(am,
testcase['input'][fname].strip()
test_build_requirment_from_name_with_prerelease_explicit(galaxy_server,
test_is_rhel_edge_ostree(self):
test_play_with_bad_ds_type(self):
testhost.update(
test_empty_retry_iterator(self):
testcoll.__loader__.get_source(testcoll.__name__)
test_git_file_role_url():
test_token_role_url():
test_failed_states_deprecation_class_attr(self):
test_date_time_facts(date_facts,
test_python_module(path,
test_values(self):
test_valid_spec(arg_spec,
test_build_requirement_from_name_401_unauthorized(galaxy_server,
test_network_gather_facts_smart_facts_module_fqcn(self,
test_check_arguments(argument_spec,
test_get_sysctl_macos_vm(self):
test_default_collection_detection():
test_get_missing_key(self):
test_basic_spec():
test_selinux_context(self):
test_get_deprecation_messages(deprecation_messages,
test_subtract():
tested_str.split('.')
test_invalid_spec(arg_spec,
test_case.add_skipped_info(self.reason
test_non_ascii():
test_check_required_by_missing_multiple_options_context(path_arguments_terms):
test_load_whole_cache(self):
test_play_with_hosts_string():
test_no_tar_binary(self,
test_play_none_hosts(value):
test_is_fedora_ostree(self):
test_keyed_group_list_with_default_value(inventory_module):
test_to_bytes_unsafe():
test_tar_role_url(url):
test_wrong_type():
test_role_download_url(mocker,
test_finding_best(self):
test_get_sysctl_mixed_invalid_output(self):
test_memory_cachemodule_with_loader():
test_set_permanent_hostname_existing(self):
test_no_password(self):
test_pause_curses_tigetstr_none(mocker,
test_deprecate_without_list_version_date_not_set(am,
test_no_tty():
test_fail_json_exits(self,
test_get_permanent_hostname_existing(self):
test_finding_prefered(self):
test_role_download_github_no_download_url_for_version(init_mock_temp_file,
test_spec_with_elements():
test_to_bits():
test_empty():
tests=()
test_collectionref_components_valid(name,
test_set_cwd_unreadable_use_home(self,
test_keyed_group_dict_with_default_value(inventory_module):
test_formatted.split('/')
test_Request_open_not_gzip(urlopen_mock):
testcase.get('platform.release',
test_host_label_delegated(self):
test_iterating_states_deprecation_class_attr(self):
test_convert_to_supported(test_input,
test_install_collection_with_roles(requirements_file,
test_context_paths.items():
test_no_retry_baseexception(self):
test_get_sysctl_openbsd_hw(self):
test_set_permanent_hostname_missing(self):
test_equals_different_parents():
test_check_required_if_multiple():
test_role_download_url_default_version(init_mock_temp_file,
test__split_multiext(name,
test_check_required_by_single(path_arguments_terms):
test_check_required_if_missing_multiple_with_context():
test_install_installed_collection(monkeypatch,
test_aliases(arg_spec,
test_nested_sub_spec():
test_root_loader_not_interested():
test_stategy_get_never_writes_in_check_mode(self,
test_set_cwd_unreadable_use_None(self,
test_convert_to_supported_exception():
test_fetch_file(mocker):
test_invalid_identifier(identifier):
test_fqcr_parsing_invalid(ref,
test_bogus_imports():
test_unsafe_lookup():
test_retry_exception(self):
test_fail_json_msg_positional(self,
test_service_mgr_runit_no_comm(self,
test_template_convert_data_template_in_data(self):
test_user_agent(mocker,
test_get_expired_key(self):
test_options(self):
test_run_module(self,
test_build_artifact_from_path_no_version(collection_artifact,
test_match_set(self):
test_missing_cache_dir(cache_dir):
test_plugin_name(self):
test_clear_cache(cache_dir):
test_get_virtual_facts_docker(mocker):
test_iter(self):
test="$(pwd)/test.py"
test_all_named_strategies_exist(self):
test_deprecate_with_version_and_collection(reset):
test_get(self):
test_date_time_tz_offset(fake_date_facts):
testcase['input'][filename].splitlines(True)
test_role_download_github(mocker,
test_role_download_github_no_download_url_for_version(mocker,
test_vars_with_sources(self):
test_service_mgr_runit(self,
test_Display_banner_get_text_width(monkeypatch):
test_is_special_selinux_path(self):
test_https_role_url():
test_get_cpu_info_nproc(mocker):
test_logname():
test_ensure_correct_netmask_parsing(self):
test_get_sysctl_all_invalid_output(self):
test_paths(args:
test_no_retry_exception(self):
test_pause_curses_setupterm_error(mocker,
test_eventsource():
test_play_no_name_hosts_sequence():
test_recursive_diff(self):
test_role_download_github(init_mock_temp_file,
test_builtin_modules_list():
test_run_non_existent_command(monkeypatch):
test_case.errors.append(TestError(message=message,
test_no_vendored():
test_service_mgr_runit_two(self,
test_check_required_one_of_provided(arguments_terms):
test_play_invalid_hosts_value(value):
test_check_missing_parameters_list():
test_pop(self):
test_finding_last(self):
test_null_role_url():
test_play_with_remote_user():
test_play_with_bad_ds_type():
test_empty(self):
test_cbt_with_cert(certificate,
test_module_validate():
test_cache_complete_pagination_v3(cache_dir,
test_loader_remove():
test_invalid_yaml_galaxy_file(galaxy_yml_dir):
test_play_with_user_conflict():
test_install_missing_metadata_warning(collection_artifact,
test_clear_cache_with_no_cache(cache_dir):
test_coll_loader():
test_build_requirement_from_name_multiple_version_results(galaxy_server,
test_execute_list_collection_one_invalid_path(mocker,
test_selinux_enabled(self):
test_get_sysctl_missing_binary(self):
test_galaxy_yaml_no_mandatory_keys(galaxy_yml_dir):
test_validator_string_type(mocker,
test_collection_role_name_location(role_name,
test_cache_flaky_pagination(cache_dir,
test_chain_creation(self):
test=dict(type='str',
test_to_text_unsafe():
test(self,
testcase.get('uname_v',
test_ansible_version(capsys):
test_role_download_github_default_version(mocker,
test_required_and_default():
test_path_hook_importerror():
test_collection_install_with_url(monkeypatch,
test_set_cwd_unreadable_use_self_tmpdir(self,
test_concrete_artifact_manager_scm_no_executable(monkeypatch):
test_collect_usr_homebrew(self,
test_redir_http_error_308_urllib2(urllib_req,
test.filter_targets_by_version(args,
test_info.get('targets',
test_verify_collections_no_remote_ignore_errors(mock_verify,
test_passlib_bcrypt_salt(recwarn):
test_list.extend(test.tests().keys())
test_deprecate_with_version(reset):
test_say_hello():
test_network_gather_facts_fqcn(self):
test_vendored(vendored_pkg_names=['sys',
test_finder_setup():
test_deprecate_with_collection(reset):
test_collect_opt_homebrew(self,
test__split_multiext_invalid(name):
test_deprecated_alias(self,
test_execute_list_collection_specific_duplicate(mocker,
test_get_permanent_hostname_line_missing(self):
test_get_file_attributes_no_version(am,
test_valid_identifier(identifier):
test_date_time_facts(fake_date_facts,
test_set_permanent_hostname_existing_whitespace(self):
test_list_with_elements_callable_str(self,
test_Display_display_lock_fork(monkeypatch):
test_defaults_galaxy_yml(galaxy_yml_dir):
tests(self)
test_finding_C_on_no_match(self):
test_server_config.update(
test_fqcr_parsing_valid(ref,
test_server_default.update(
test_equals_different_tasks():
test_sanitize_keys_non_dict_types():
test_play_with_vars():
test_podman_no_such_image(ansible_test,
test_cache_id(url,
test_find_module_py3():
test_context(
test_token_new_style_role_url():
test_client_id(monkeypatch):
test_collection_get_data():
test_set_cwd(self,
test_no_cache(cache_dir):
test_dep_candidate_with_conflict(monkeypatch,
test_process_include_simulate_free_block_role_tasks(mock_iterator,
test_parse_clixml_multiple_elements():
test_Request_open_decompress_false(urlopen_mock):
test_get_sysctl_command_error(self):
test_Display_set_queue_parent():
test_path_hook_setup():
test(self):
test_items(self):
test_no_retry_required(self):
test_len(self):
test_empty_play():
test_duplicate_yaml_dict_key_error(dupe_node,
test_build_requirement_from_name_missing(galaxy_server,
test_validate_certs_with_server_config(global_ignore_certs,
test__split_multiext_min_max(args,
test_collect_macports(self,
test_parse_distribution_file_clear_linux(mock_module,
test.test(args,
test_selinux_default_context(self):
test_network_gather_facts_smart_facts_module(self,
test_vendored_conflict():
test_keyed_group_empty_value(inventory_module):
test_date_time_epoch(fake_date_facts):
