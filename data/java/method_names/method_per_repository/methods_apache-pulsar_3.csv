testDynamicConfigurationBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds()
testDataStream).get();
testApiKey()
testPulsarSourceStats(fileServer.getUrl("/pulsar-io-data-generator.nar"));
testMaxActiveTxn()
testAdminRequestWithSuperUserToken()
testProduceConsume(serviceUrl,
testTakeSnapshot()
testSyncFlushBatchMessagesPartitionedTopic(true);
testSortKeysMulti(SchemaType
testCreateTopic()
testCreateMissedPartitions(boolean
testClearBacklogForTheSubscriptionThatNoConsumers()
testUpdateMetadataCmdWithRequiredArgs()
testGetConsumerKeyHashRanges()
testNonPartitionedTopicMessagingWithFailover(Supplier<String>
testExpireIncompleteChunkMessage()
testUnchangedResponse()
testGetAppliedAdvertised()
testConsumeMultipleSchemaMessages()
testAutoDiscoverMultiTopicsPartitions()
testDeregisterSinkInterrupted()
testSchemaCompatibilityCmd()
testConvertEmptyCustomPayload()
testNotChangeMaxReadPositionAndAddAbortTimesWhenCheckIfNoSnapshot()
testPublishAndConsume(String
testPositiveNumber()
testMakeLocalPoliciesImmutableSerializationCompatibility()
testCreateExclusiveProducerWithRetry()
testSchemaValidationEnforced(String
testDeregisterFunctionFailure()
testWithPadding(int
testIsIgnoreEvent()
testDynamicConfigurationBrokerDeleteInactiveTopicsEnabled()
testGetBundle()
testEventGroups()
test_producer_is_connected(self):
testMultiReaderIsAbleToSeekWithTimeOnMiddleOfTopic()
testMessage.getFixed64Field());
testProduceWithRestAndClientThenConsumeWithClient()
testJavaExclamationFunction()
testSplitBUndleWithNoBundle()
testAddWithinTickTime()
testExpandAndShrink()
testBrokerConnectionStats()
testClientCreationWithProxyDefinedInConfFile()
testAddRg.setPublishRateInMsgs(100);
testClientWithoutTls()
testRemove()
test_chunking(self):
testDecreaseUnAckMessageCountWithAckReceipt(SubscriptionType
testSnapshotCache()
testSimplePolicyDeserialize()
testNs.getLocalName(),
testShadowReplication()
testE2EPulsarFunctionLocalRunMultipleInstances()
testSlidingCountWindowTest()
testTransactionBufferLowWaterMark()
testUpdateCursorPropertiesConcurrent()
testPublishOffloadAndConsumeDeletionLag(String
testAddProducedPartitionToTxn()
testDeleteOperation()
testMaxResource(1.05,
testTopicDuplicationAppliedApi()
testConcurrentlyRegisterUnregisterListeners()
testMessage.getBoolField());
testGetNativeSchema()
testFilterEntriesForConsumerOfServerOnlyMarker()
testCreateInitialSubscriptionOnPartitionedTopic()
testRestart()
testAutoCreationDisabled()
testPropertiesForMeta()
testPulsarSourceLocalRunMultipleInstances()
testRemoveSizeBasedBacklogQuota()
testListenerNotInvokedWhenSubscriptionCreated()
testTopicMaxMessageSize()
testCompareTo()
testDefaultProcessor(int
testConfigFileDefaults()
testNegativeUsedBucketCount()
testNukeExistingClusterWithBookies(false);
testDoIndividualBatchAckAsync()
testGetConsumerKeyHashRangesWithSameConsumerName()
testPojoAsAvroAndJsonConversionToConnectData(Float.MAX_VALUE);
testConsumerCrashSendAndReceiveWithHashRangeAutoSplitStickyKeyConsumerSelector(
testGenericObjectRemoveFieldFunction()
testPojoAsAvroAndJsonConversionToConnectData(Object
testExpiredLedgerDeletionAfterManagedLedgerRestart()
testNs.getLocalName()));
testListNonPersistentTopic()
testCanAcknowledgeAndCommitForTransaction()
test_producer_send(self):
testNukeExistingCluster(String
testSetMetadataServiceUriBookkeeperMetadataServiceUri()
testGetTransactionPendingAckStats()
testReceiveAsyncCanBeCancelled()
testRecoverWhenDeleteFromCursor(TxnLogBufferedWriterConfig
testPutVersionErrors(String
testPersistenceDisabled()
testFunctionNegAck(Runtime.JAVA);
testThrowsExceptionWhenFunctionInstanceIdNotPropertyDelimited()
testMinMaxResource(0.2,
testGetStatsAndCancelStatsTimeoutWithoutArriveUpdateInterval()
testReplicatePublishRatePolicies()
testAcceptIgnoresNonMatching()
testRecoverIndividualDeletedMessages()
testEndTransactionOpRetry(TxnStatus
testTruncateCorruptDataLedger()
testBatchConfig.setDiscoveryTriggererClassName(TestDiscoveryTriggerer.class.getName());
testMultiListener()
testConsumerCrashSendAndReceiveWithHashRangeAutoSplitStickyKeyConsumerSelector(String
testFactoryWrap()
testMainProcess(int
testRedirectOfGetCoordinatorInternalStats()
testProduceWithJsonSchema()
testCreateFunctionLabels()
testHealthCheckTopicNotOffload()
testRemoveMaxConsumers()
testAuthTokenConfigFromJson()
testSniProxyProtocolWithoutTls()
testGC()
testPublishWithAutoCompaction(Supplier<String>
testJavaExclamationTopicPatternFunction()
testPersistentTopicMessageAckRateMetricNamespaceLevel()
testAllowsColonsInFunctionName()
testAuthenticationHttpWithMultipleProviders()
testPeekBrokerEntryMetadata()
testWithoutRightTriggerer()
testCursorReadWriteMetrics()
testCursorCheckReadPositionChanged()
testMultiLevelDispatch(SubscriptionType
testStartFunctionWithPackageUrl()
testLastActiveAfterResetCursor()
testManagedCursorPersistStats()
testLoadFileFromSystemProperties()
testLoadFileFromPulsarProperties()
testGetStatsWithoutArriveUpdateInterval()
testLoadBase64FromPulsarProperties()
testAddAndRemoveTransactionMetadataStore()
testGetSubscriptionType()
testSameSubName()
testBatchMessageIndexAckForSharedSubscription()
testKeyValueSchema(KeyValueEncodingType.INLINE);
testPublishOffloadAndConsumeViaThreshold(Supplier<String>
testGetDispatchRateApplied()
testResourceGroupOneUpdate.setPublishRateInBytes(1000);
testDebeziumPostgreSqlSource()
testGetPolicyTimeout()
testReplicationWithSchema()
testClientWithConfig(config);
testAvroConsumerWithWrongRestoredSchema()
testWebExecutorMetrics()
testOrderingKeyWithHashRangeExclusiveStickyKeyConsumerSelector(boolean
testElasticSearch7Sink(boolean
testConsumerBuilderImplWhenDefaultCryptoKeyReaderIsNullMap()
testAck()
testInvalidPriorityLevel()
testMinMaxResource(1.01,
testAsyncBatchReceiveNonPartitionedTopic(BatchReceivePolicy
testClassLoaderSwitcher()
testFormatExistingCluster(String
testBrokerLevelPublishRateDynamicUpdate()
testAreExceptionsPresentInChain()
testMessageRedeliveryAfterUnloadedWithEarliestPosition()
testDeleteOffloadedPartitionedTopicExistsInBk(Supplier<String>
testReadEntriesOrWaitWithMaxSize()
testAdminWithCertAndKey()
testListenerCleanupByPartition()
testSubscriptionDispatchRateDisabled()
testCleanSubscriptionField()
test_invalid_basic_auth(self):
testProduceToNonPartitionedTopic(String
test.accept(cnx);
testProduceAndConsumeMessageWithWebsocket()
testSubscriptionPropertiesStats()
testDeleteWithLeastMost()
testLoadBase64FromSystemProperties()
testNonPersistentTopicSubscriptionCreationWithAutoCreationDisable()
testConnectionAutoReleasePartitionedTopic()
testNewAckForResponseNoFlushTimeout()
testValidateMinMaxResourcesRequired()
testPolicyValue()
testUpdateSourceSuccessWithPackageName()
testIncomingMessageSize(boolean
testUploadCmdWithAllArgs()
testAsyncTruncateLedgerRetention()
testCommandRequestTimeout()
testWillCancelReadAfterExhaustingRetry()
testSetAckSetByIndex(int
testUnackBlockRedeliverMessages(boolean
testCheckBacklogQuotaFailed()
testManagedCursorMetrics()
testGetAllBookies(String
testSinkConfig.setTransformFunction(TRANSFORM_FUNCTION
testCheckRetentionTimeBasedQuota()
tester.get().autoRecovery.getAuditor().isRunning())
testE2EPulsarFunction(jarFilePathUrl);
testConcurrentlyDeleteSchema()
testManagedLedgerMetricsWhenPendingAckNotInit()
testTopicPolicyInitialValueWithNamespaceAlreadyLoaded()
testVerificationWithReaderOnly()
testAbortOnTopic()
testGetWritableBookies(String
testCreateIllegalReaderImp()
testGetBytesOffsetZeroDifferentLen()
testWebSocket(String
testExists()
testDeadLetterTopicHasOriginalInfo()
testSimple()
testTopicNameValid()
testBatchSendOneMessage(BatcherBuilder
testProxyAdditionalServlet()
testExclamationFunction(Runtime.JAVA,
testRateLimiterWithFunction()
test_avro_map_array(self):
testResourceGranularities(Double
testFilterAndMapProperties()
testMaxUnackedMessagesOnSubscriptionApi()
testPolicyIsDeleteTogetherAutomatically()
testShadowTopics()
testReceiveAsyncCompletedWhenClosing()
testLoadProtocolHandler()
testPulsarSinkWithFunction()
testExpiredTokenMetrics()
testGetReadonlyBookies(String
testInvalidDynamicConfigContentInMetadata()
testSetMaxProducers()
testConsumerBuilderImplWhenDefaultCryptoKeyReaderIsNullString()
testUpdateDynamicCacheConfigurationWithZkWatch()
testUseAutoConsumeWithNoneSchemaTopic()
testGetListWithGetBundleOp()
testValidateConfig()
testDeadLetterPolicyDeserialize()
testPackagesManagementFlow()
testGenerateDocs()
testMessageRedelivery()
testNestedMessage()
testSendTxnMessageTimeout()
testConnectionController()
testCrashBrokerWithoutCursorLedgerLeak()
testReadNonExistentData()
testFileModeExitOnError()
testWithMessageCompression()
testGetLastMessageIdRequestTimeout()
testRemovalOfNodeJustTraversed(String
testAddForSameKey()
testRateLimit();
testTimestampWithJsr310Conversion()
testDynamicConfigurationTopicAutoCreationDisable()
testSerialization()
testReadCompactedSink()
testGenericAvroSchema()
testTimeoutTrackerMultiThreading()
testDebeziumMySqlConnect("org.apache.kafka.connect.json.JsonConverter",
testConsumeAvroMessagesWithoutSchema()
testOffloadPoliciesAppliedApi()
testStartStop()
testGetSinkConfig()
testReaderSubName()
test_group_shade_build()
testOffload(boolean
testAutoAckConvertFailed()
testNewTransactionWhenDisable()
testSetBacklogCausedCreatingProducerFailure()
testResetMethodOfOneBundles()
testPathValid()
testConsumerCreation()
testManagedLedgerTotalSize()
testGetMetrics()
testUpdateIfLeaderFunction(true);
testInvalidEntryIds()
testCassandraArchiveSink()
testTopicLevelOffloadNonPartitioned()
test::consumerConfigOfReader.clone();
testEncodeAndDecodeKeyValues(kvSchema,
testReplicatorRatePriority()
testRejectMessagesOnMultipleTopics(boolean
testReadOtherManagedLedgersEntry()
testRegisterSinkFailedWithWrongPackageName()
testThreadLocalStateCleanupInFastThreadLocalThread()
testRootMessageChange()
testGcsConfiguration()
testMergeDifferentTransformFunctionConfig()
testPermissionForProducerCreateInitialSubscription()
testNamespace).contains(topicName2.toString()));
testMessage.getSfixed64Field());
testKeyValueSchemaSEPARATED()
testSupportsBatchBuilderWhenProducerConfigIsNull()
testPerProducerStats()
testResourceGroupTwo.setDispatchRateInBytes(10000);
testCmdSourceConfigFile(testSourceConfig,
test_serialize_schema_complex(self):
testTransactionOperation()
testDeprecatedCommanderWorks()
testGetPolicy()
testInstanceJarDeps()
testMaxUnackedMessagesOnSubApplied()
testWriteGenericRecordsAtMostOnce()
testCleanupTopic()
testAvroSchemaProducerConsumerWithSpecifiedReaderAndWriter()
testJavaLoggingFunction()
testItems()
testDrainWorkers()
testDuplicationSnapshotApi()
testPatternTopic()
testRackUpdate()
testRemoveDeadBrokerTimeAverageData()
testPolicyOverwrittenByNamespaceLevel()
testBasicKubernetesManifestCustomizerWithRuntimeCustomizerConfigOverwrite()
testLastRange()
testCloseClient()
testLargeQueue()
testFailAndRetry()
testSetupClusterWithMultiZkServers(boolean
testExpireMessageWithNonExistTopicAndExistSub()
testHandlerStateChangeToReady()
testFileMode()
testMessageExpiryWithPosition()
testTransactionBufferRequestCredits()
test_group_messaging()
testConfiguration()
testResourceGroupTwo.setDispatchRateInMsgs(100);
testWebserviceRequest()
testReaderCursorStatsCorrect()
testDisableHttpTraceAndTrackMethods()
testRedeliveryFailOverConsumer(boolean
testGetProduceBaseEndPoint()
test_group_function()
testConsumerBacklogEvictionWithAckTimeQuotaPrecise()
testDebeziumMsSqlConnect(String
testResourceGroupPublishRateLimit()
testMetadataStoreStats()
testConsume()
testUpdatePartitionedTopicCoontainedInOldTopic()
testGenerateNextLogIndexLag()
testEnableConnectionPool()
testRebalance();
testCreateTimeoutException()
testCancellationOfScheduledTasks()
testLoadProxyEventListenerWithWrongListerClass()
testShouldMaintainOrderForIndividualTopicInMultiTopicsConsumer()
testMaxConsumersFailover()
testTransactionBufferRecoverThrowBrokerMetadataException()
testHashKey(ElasticSearchConfig.IdHashingAlgorithm
testModularLoadManagerRemoveInactiveBundleFromLoadData()
testMetadataResolver()
testListenerNotInvokedWhenTopicCreatedInOtherNamespace()
testSendTxnAckBatchMessageToDLQ()
testElasticSearchSink()
testVoidInputClasses(PulsarSourceConfig
testListTenantCmd()
testResourceCleanup()
testBacklogQuotaDefaultLimitPrecedence()
testDirtyLedger()
tester.startServiceContainer(pulsarCluster);
testGetSchemaValidationEnforcedApplied()
testPulsarSinkDLQ()
testVerificationWithPojoAndJsonDef()
test_connect_error(self):
testExceptionBySeekFunction()
testCredentialProviderPlugin()
testExistsCache()
testConsumerId.getSubscription());
testSetFromSystemProperty()
testRQCalcNegativeLocalUsageTest()
testWithFixedDelays()
testGetSetMaxConsumersPerSubscription()
testCompositeType()
testLoggingFunction(Runtime.JAVA);
testEncodeAndDecodeGenericRecord(encodeSchema,
testGetTopicsOfNamespace()
testCmdSinkConfigFileInvalidSinkType()
testCodecProvider(CompressionType
testNamespaceServicePulsarClientConfiguration()
testNoRolloverIfNoMetadataSession()
testTransactionBufferAppendMarkerWriteFailState()
testPartitionedShadowTopicSetup()
tester.getInputTopicSchema());
testTopicPolicyDisabled()
testNullValueFailure()
testProduceOnNonPersistentNonPartitionedTopic(String
testNamespacePolicy()
testMessage.getUint64Field());
testGetPartitionedMetadataRetries()
testInvokeJVMInternals()
testInvalidUseCaseForChunking()
testDebeziumOracleDbConnect("org.apache.kafka.connect.json.JsonConverter",
testIllegalArg()
testTransactionGetStats()
testGetRecoveryTime()
testRun3()
testFlush()
testHappyCase()
testDeleteOffloadedTopic(Supplier<String>
testInvalidBundleErrorResponse()
testByteBufComposite()
testHealthCheckTopicNotCompacted()
testGetTopicsOfNamespaceLongPattern()
testProperties()
testGetTransactionCoordinatorStats()
testNamespaceBundleOwnershipListener()
testSplitLargestBundle()
testPersistent(String
testProducerTimeoutOnPMR()
testReadCompactedFunction()
testThreadLocalStateCleanupInCurrentAndOtherThread()
testSeekByFunction()
testNonDurableSubscription()
testCmdClusterConfigFile(clusterData,
testDeleteNamespace()
testManyFailures()
testServerKeyStoreSSLContext(Set<String>
testCreateMultipleTopicReaderImp()
testSendTxnAckMessageToDLQ()
testProxyProtocol()
testCreateUpdateSubscriptionWithPropertiesCommand()
testCreateFunctionWithInvalidPackageUrl()
testReleaseOwnershipWithZookeeperDisconnectedAfterOwnershipNodeDeleted()
testBatchMessageOOMMemoryRelease()
testDeleteNamespaceForcefully()
testBootstrapProtocolHandler()
testResetMethodOfMultipleBundles()
testParseMessageMetadataWithBrokerEntryMetadata()
testReaderReconnectAndReadBatchMessages(Supplier<String>
testHistoryTopicContent(boolean
test_field_type_check(self):
testLowWaterMark()
testPublishRateLimiterMonitor()
testGetTransactionBufferStats()
testLoadBalancerNamespaceMaximumBundles()
testCacheCleanup()
testListenerName()
testMethodA()
testDisableSubscribeRate()
testLoadCA(String
testPut()
testPulsarSinkStatsBuiltinDoesNotExist()
testNullValue(ElasticSearchConfig.NullValueAction.DELETE);
testGetPendingAckInternalStats()
testParseEmptyData()
testWebSocket(url);
testBlockBrokerDispatching()
testTransactionBufferPendingRequests()
testFunctionResultNull()
testMergeDifferentTransformFunctionClassName()
testHasMessageAvailableWithBatch()
testKeyValueSchemaWithStructs(KeyValueEncodingType.INLINE);
testTimeoutHandling()
testRegisterStoreTwice()
testOrderingDispatch()
testDecompressReadonlyByteBuf(CompressionType
testDebeziumMsSqlSource()
testSendAndReceiveNamespaceEvents()
testE2EPulsarFunctionWithNarFile()
testListCmd()
testPythonFunctionNegAck()
testMultiRolesAuthzWithCustomRolesClaims()
testGetMetricsByDefault()
testPulsarSinkLocalRun(jarFilePathUrl,
testPartitionedTopicForceDeletion(Supplier<String>
testCompressDecompress(CompressionType
testNonPartitionedTopicTruncate()
testGetSchemaRequestTimeout()
testWebSocket()
testActionsSuccess()
testAddRg.setDispatchRateInBytes(2
testObjectWithUnknownProperties()
testHealthCheckupV2()
testGetEnsemblesAsync()
testCreatePartitions()
testKeyValueSchemaWithStructs(KeyValueEncodingType
testReplicateMaxUnackedMsgPerConsumer()
testAppendEntry()
testJSONSchemaDeserialize()
testTopicName()
testInitNewClusterTwice(String
test_group_cli()
testMaxSameAddressProducers()
testConcurrentWriteBrokerData()
tester.getServer().start();
testAdvertisedAddress()
testRun5()
testNukeExistingClusterWithReadonlyBookies(String
testDynamicConfigurationTopicAutoSubscriptionCreation()
testAutoCreatedSchema(String
testBacklogQuotaDisabled()
testDebeziumMySqlSourceAvro()
testEncodeAndDecodeGenericRecord(Schema<Foo>
testReplicatedSubscriptionAcrossTwoRegions()
testCreatePartitionedTopicHavingNonPartitionTopicWithPartitionSuffix()
testTransactionAddSubscriptionToTxnAsyncReconnect()
testTopicPolicyUpdateAndClean()
testAvroFunctionLocalRun()
testKeyValueSchemaWithStructsSEPARATED()
testGetSubDispatchRateApplied()
testByte()
testGetList()
testRegisterFunctionSuccessWithPackageName()
testFailoverSingleAckedPartitionedTopic(boolean
testCheckInactiveSubscriptions()
testGetBatchMessageIdByTimestamp()
testMemoryLimit(-512L,
testCreatedPartitionedProducerSendsCloseProducerAfterTimeout()
testStripNullNodes()
testPersistentTopicMessageAckRateMetricTopicLevel()
testUploadCmdWithRequiredArgs()
testProcessRequest()
testHavePadding()
testIsUsingAvroSchemaParser()
testKeyValueSchemaSeparatedEncoding()
testPythonExclamationFunctionWithExtraDeps()
testTimeoutRetriesOnPartitionMetadata()
testTerminate()
testGetSchemaInfo()
testInitializingWithExecutorProviders()
testCheckPositionInPendingAckState()
testCommitOnTopic()
testResourceGroupUpdate()
testUpdateIfLeaderFunctionWithCompaction()
testWindowFunction("tumbling",
testExpandShrinkAndClear()
testCreateConsumerWhenSchemaIsNull()
testCompactionCursorRetention(topic)
testFunction(4),
testMalformedDocIgnore()
testParseMetrics()
testPhaseOneLoopTimeConfiguration()
testHealthCheckup()
testThreadFunctionInstancesRestart()
testNamespaceCreation()
testTwoLedgers(String
testRQCalcNegativeConfTest()
testFormatNonExistingCluster(String
testNoWatchersWhenNoServerSupport()
testCustomKubernetesDownloadCommands()
testNegativeAckRedeliveryBackoff()
testKubeProxyURI()
testWriteGenericRecords(ProcessingGuarantees.EFFECTIVELY_ONCE);
testCanHandleExceptionAndRetry()
testCreateFunctionWithPackageUrl()
testTopicsListMinus()
testWithNoDelays()
testMessageOrderAndDuplicates(Set<T>
testGetTxnState()
testCmdClusterConfigFile()
testPulsarFunctionBuiltinDoesNotExist()
testSetTimeBasedBacklogQuota()
testGetClusterInstanceId(String
testMessage.getBytesField().toStringUtf8());
testIndividualAckList()
testTimestampWithJsonDefAndJSR310ConversionEnabled(){
testChangedFilteredResponse()
testAttributedNullTest()
testSubscribeKeySharedWithDLQ()
testJavaFunctionNegAck()
testProduceConsumeUsageOnRG()
testProducerTimeoutMemoryRelease()
testBasicKubernetesManifestCustomizerWithRuntimeCustomizerConfig()
testAppearTogether()
testPythonFunctionLocalRun()
testDeregisterFileSourceBKPackageCleanup()
testRanges.add(List.of(
testBinaryProtoToGetTopicsOfNamespaceNonPersistent();
testPulsarSinkLocalRun(jarFilePathUrl);
testReplicateQuotaTopicPolicies()
testDeregisterSinkSuccess()
testDecompressFromSampleBuffer(CompressionType
testReaderInterceptor(int
testPulsarFunctionBKCleanup()
testCmdRebalance()
testBuildTimeout()
testPackagesOperationsWithUploadingPackagesUsingFileSystemStorageProvider()
testConvertBackFidelity()
testAutoCreateNonPersistentPartitionsWhenThePartitionedTopicExists()
testListEntryTypeValidator()
testFlowPermitsWithMultiBatchesDispatch()
testSimpleProduceAndConsume()
testResetMethodOfOneBundlesEmptyBundleMap()
testBatchMessageIndexAckForSharedSubscription(boolean
testNegativeAcksWithBackoff(boolean
testCompactionCursorRetention(String
testRecordFunction()
testAutoCreatedPartitionedSystemTopic()
testCheckRetentionSizeBasedQuota()
testGenericObjectRemoveFiledFunctionKeyValue()
testTriggerBacklogTimeQuotaWithReader()
testGetMessageById()
test_logger_thread_leaks(self):
testCloseTopic()
testConsumerBuilderImplDLQForKeySharedNotAllowed()
testDecodeFailed()
testAllTimerTaskShouldCanceledAfterConsumerClosed()
testKeyValueSchema(KeyValueEncodingType
tester.shutdown();
testBacklogQuotaInGB(boolean
test_client_reference_deleted(self):
testRegisterSinkSuccessWithTransformFunction()
testUsageUnit()
testNegativeAcksDeleteFromUnackedTracker()
testDoNotGetOffloadPoliciesMultipleTimesWhenTrimLedgers()
testListenerNotInvokedAfterDeregistered()
testWrite()
testProduceConsumeThroughProxy()
testBatchReceiveAsync(String
testJavaConstructorWithoutWebServiceUrlAndExposePulsarAdminClientDisabled()
testKeepNullNodes()
testWhenSubPartitionNotDelete()
testBothExecutorProvidersMustBeSpecified()
testStringValidator()
testRegisterFunctionFailedWithWrongPackageName()
testAsyncTruncateLedgerSlowestCursor()
testSetupWithBkMetadataServiceUri()
testMessage.getInt32Field());
testRedeliveryOnBlockedDispatcher()
testWatchReadonlyBookiesSuccess(String
testAddForDifferentKey2()
testSimpleSQLQuery(true);
testDownloadFunction()
testDisableReplicatedSubscriptions()
testWebSocketNonDurableSubscriptionMode()
testNoPadding()
testBatchMessageMultiNegtiveAck()
testWithSeveralIncompletePaths(String
testGetZKServersFromServiceUri()
testGetLastDisconnectedTimestampForPartitionedTopic()
testMaxTenant()
testSource();
testShareConsumerWithMessageListener()
testElasticSearchSink7SchemaEnabled()
testErrorLevel()
testProducerCloseFailsPendingBatchWhenPreviousStateNotReadyCallback()
testProduceWithInCompatibleSchema()
testSyncProducerAndConsumer();
testDeleteInactiveNonPersistentSubscription()
testAvroUUID()
testPulsarSourceStatsWithFile()
testOpenAndWriteSinkNullValue(Map<String,
testSyncProducerAndConsumer()
testResourceGranularities(0.1,
testGetMessageSequenceRefForBatchMessage()
testRetentionAndBacklogQuotaCheck()
testBatchAckTracker(boolean
testConvertAvroInt()
testDistinguishTopicTypeWhenForceDeleteNamespace()
testRegisterSinkNoInput()
testAccessAvroSchemaMetadata(Schema<MyBean>
testPushOpenWithRightSource()
testSnapshotCachePruning()
testAvroToJson()
testUpdateSinkFailedWithWrongPackageName()
testReplicatorProducerNameWithUserDefinedReplicatorPrefix()
testDeleteOffloadedTopicExistsInBk(Supplier<String>
testSchemaCompatibilityStrategyCmd()
testRegisterSourceMissingArguments(
testMaxSubscriptionsFailFast()
testSerialization1()
testIndividualAck()
testAvroGetNativeRecord()
testPartitionedTopicStatsByNullProducerName()
testSetBacklogQuota()
testRateLimitingWithBatchMsgEnabled()
testConcurrentAsyncSetProperties()
testAddRg.setPublishRateInBytes(random.nextInt());
testTopicRetentionPolicySetInManagedLedgerConfig()
testDebeziumMongoDbConnect(String
testNamespaceNotExist()
testMessage.getStringField());
testAvroSchemaHandler()
testMemoryLimit(2048L,
testRemoveBacklogQuota()
testConsumerIsClosed()
testConvertCustomPayload()
testTopicCloseFencingTimeout()
testAdd()
testLifeCycle()
testConfigFile.deleteOnExit();
testMalformedListener()
testTransactionConflictExceptionWhenAckBatchMessage()
testEncodeAndDecodeGenericRecord(Schema<org.apache.pulsar.client.schema.proto.Test.TestMessage>
testRemoveMaxConsumersPerSubscription()
testConnectionController2()
testCreateWatcher()
testProxyRoleCantDeleteResourceGroups()
testDeleteNonExistentFailureDomain()
testLeaderServiceNoNewScheduling()
testTopicIsNotReady()
testNonPartitionedShadowTopicSetup()
testWebSocketDurableSubscriptionMode()
testBytes2StringNotUTF8()
testManagedLedgerRollOverIfFull()
testStepRelease()
testWithPadding(0);
testMigrationWithAllOptions()
testNamespaceResourceGroup()
testUserExceptionThrowingFunction()
tester.sinkType().getValue().toLowerCase(),
testMetricsTopicCount()
testFilterTopics()
testPartitionedProducerConsumer(false,
testCardinality()
testChangeLogLevel()
testSeekForBatchByAdmin()
testResolveLedgerManagerFactoryFlat()
testPulsarConfigurationLoadingStream()
testAutoJsonSchema()
test_reader_is_connected(self):
testConsumerCreatedWhilePaused()
testLookUpWithRedirect()
testHealthCheckupV2Error()
testRemoveTimeBasedBacklogQuota()
testAddMessageWithDeliverAtTimeAfterNowAfterTickTimeFrequencyWithStrict()
testCreateAndGetTopicProperties()
testLoadYamlConfig()
testUseTlsUrlWithPEM()
testBatchReceiveAckTimeout()
test.field("test").type(SchemaType.STRING);
testEmptySchema()
testCumulativeAck()
testOffloadAndReadMetrics()
testUpdateDynamicLoadBalancerSheddingIntervalMinutes()
testAcceptSendsNotificationAndRemembersTopic()
testSinkConfig.setTransformFunction(TRANSFORM_FUNCTION_CLASSNAME
testUnblockStuckSubscription()
testAddRg.setPublishRateInBytes(10000);
testConsumerSelect()
testCryptoWithChunking()
testAck(boolean
tester.prepareSource();
testGenerateLedgerId(String
testPulsarSourceLocalRun(String
testConsumeTxnMessage()
testConsumerBacklogEvictionTimeQuotaWithEmptyLedger()
testUseAutoConsumeWithSchemalessTopic()
testDownloadFunctionBuiltinConnector()
testBatchMessagePublishAndConsume(String
testDeleteRecursive(String
testFunctionsCreation()
testGetTenantCmd()
testJavaConstructorWithWebServiceUrlAndExposePulsarAdminClientEnabled()
testGenerateLedgerIdWithZkPrefix()
testMemoryLimit(null,
testArray()
testSendAvroAndJsonPrimitiveSchema()
testPublishOffloadAndConsumeViaCLI(String
testOffloadPoliciesApi()
testHistoryTopicContent(true,
testBookKeeperClientIoThreads()
testSyncFlushBatchMessagesPartitionedTopic(bool
testReplicateSubscribeRatePolicies()
testWindowFunctionWithAtmostOnce()
testProducerBuilderImplWhenDefaultCryptoKeyReaderIsEmptyMap()
testHashRangeConflict()
testCheckQuota()
testPulsarSinkStatsWithUrl()
testEntryFilterRescheduleMessageDependingOnConsumerSharedSubscription()
testGetTxnID()
testPublishRateLimitedTimes()
testLeastResourceUsageWithWeightWithArithmeticException()
testDelete()
testPublishOffloadAndConsumeViaThreshold(String
testTopicDispatchRateLimiterPerTopicInMsgOnlyBrokerLevel()
testAddRg.setDispatchRateInMsgs(400000);
testKeyStoreTlsTransportWithAuth(Supplier<String>
testVerifyOriginalPrincipalWithoutAuthDataForwardedFromProxy()
testReaderWithTimeLong()
testUpdateFunctionUserConfig()
testKeyValueSchema(KeyValueEncodingType.SEPARATED);
testTransactionPerf()
testMetricsStatsThatTriggeredByMaxRecordCount()
testMultiConsumers()
testTransactionBufferNoSnapshotCloseReader()
testFilteredMsgCount()
testErrorNotifier()
testResourceGroupOneUpdate.setPublishRateInMsgs(10);
testDownloadFunctionBuiltinFunction()
testHandle()
testGetSubPatternTopicFilterTxnInternalTopic()
testContains()
testAddAndRemove(boolean
test_non_sorted_fields(self):
testBatchSource.notifyError(new
testAdminRequestWithNormalUserToken()
testAsyncReadWithMaxSizeByte()
testProxyAuthorization()
testAddRg.setDispatchRateInMsgs(20000);
test_pathIsFromNamespace()
testDeleteNonExistCluster()
testOffloadDeleteClosedLedger()
testGetTopicsOfNamespaceOpsWithConsumePermission()
testResourceGroupOneUpdate.setDispatchRateInBytes(5000);
testPartitionTopicsOnSeparateListener()
testEnableLedgerReplication(String
testNamespacePolicyApi()
testTransactionBufferLookUp()
testPartitionedTopicMessagingWithShared(Supplier<String>
testSubscriptionDispatchRatePolicyOverwrittenNamespaceLevel()
testCloseConnectionOnBrokerTimeout()
testE2EPulsarFunctionWithNarUrl()
testDeleteNonExistentFailureDomainInNonExistCluster()
testDeleteTopicWithMissingData()
testNotifications()
testAuthDataRefresh(boolean
testAutoProtobufNativeSchema()
testUpdateProperties()
testReplicateMaxMessageSizePolicies()
testMultiIpv6Uri()
testEnableTopicDelayedDelivery()
testSendCallBackReturnSequenceId()
testAuthenticationFailedImmediately()
testPackagesOperationsWithoutPackagesServiceEnabled()
testMemoryLimitNotSet()
testDeleteCluster()
testAuthenticate(provider);
testSendMsgFail(true);
testClone()
testSelectorChangedAfterAllConsumerDisconnected(String
testNs.getCluster(),
testGetTransactionCoordinatorStatus()
testEndTBRecoveringWhenManagerLedgerDisReadable()
testBadConfig("tenant",
testFirstPositionIsOverLoad()
testProducerTimeoutOnLookup()
testProducerInterceptor()
testSeveralContiguousLedgers(String
testJdbcSink(boolean
testMessageExpiryWithTimestampNonRecoverableException()
testRegisterSourceMissingPackageDetailsAndClassname()
testOpReadEntryRecycle()
testBuild()
testRemovePublishRate()
testVerifyAuthRoleAndAuthDataFromDirectConnectionBroker()
testMethodB()
testSchemaFailure()
testTimeoutHandlingNoTimeout()
testResetPosition()
testChunksEnqueueFailed()
testPubRateOnNonPersistent()
testPartitionedStatsAggregationByProducerName(String
testSetupClusterDefault(boolean
testMockMetaStore()
testGolangConstructor()
testEncodeDecodeSuccessfully()
testRedeliveryAddEpochAndPermits(boolean
testProduceToPartitionedTopicSpecificPartition()
testLedgerNotRolloverWithoutOpenState()
testRemoveClusterFromNamespace()
testDeleteUnusedDirectories(String
testUpdateMetadataCmdWithAllArgs()
testReleaseOwnershipWithZookeeperDisconnectedBeforeOwnershipNodeDeleted()
testKubernetesFunctionInstancesRestart()
testMultiTopic()
testFlushInPartitionedProducer(bool
testGlobalTopicPolicies()
testTlsClientAuthOverHTTPProtocol()
testBacklogQuotaDefaultLimitGBConversion()
testNewAuthState()
testCheckPersistence()
testAdvertisedListeners()
testSetMaxConsumers()
testGenericObjectRemoveFieldRecordFunction()
testSuperUserCanUpdateScaleOfTransactionCoordinators()
testInterleavedMessagesOnKeySharedSubscription()
testTxnAbortMarker()
testConvertAvroUnion()
testProducerPendingQueueSizeStats(boolean
testDefault()
testSchemaRegistryMetrics()
testKeyHashRangeReader()
testHandlerReconnectionPartitionProducers(true,
testZKServer.close();
testRateLimit(persistentTopicString);
testMultiTopicsConsumerCloses()
testCreatePyFunctionWithPackageUrl()
testResourceGroupOneUpdate.setDispatchRateInBytes(5000L);
testE2EPulsarFunctionLocalRun(jarFilePathUrl);
testOpenAndWriteSinkNullValueJson(Map<String,
testFlowCountForMultiTopics()
testProxyTlsTransportWithAuth(Authentication
testPingPong()
testSystemNamespaceNotCreateChangeEventsTopic()
testReadMessages(topic,
testResetWords()
test_group_broker_flaky()
testBookieIsolationWithSecondaryGroup()
testTransactionBatchConfigurations()
testConvert()
testCertRefreshForPulsarAdmin()
testZookeeperServers()
testInitFunction(Runtime
testAckTrackerMultiAck(boolean
testOpEntryAdd_toString_doesNotThrowNPE(){
testSubTypeAndEnableBatch()
testTopicNameMatch(String
testDoCacheEviction()
testRun1()
testMemoryLimitPercentOver100()
testOpenAndWriteSinkNullValueJson(ImmutableMap.of("ACTION",
testDebeziumPostgreSqlConnect("org.apache.kafka.connect.json.JsonConverter",
testRSAEncryption()
testIpAddressInBrokerServiceUrl()
testPartitionedTopicMsgDelayedAggregated()
testTlsEnabledWithoutNonTlsServicePorts()
testForceDeleteNamespaceNotAllowed()
testHandleAuthResponseWithoutClientVersion()
testForUppercaseTopic()
testPutSameObj()
testDeleteWithAtMost2()
testExclamationFunction(Runtime.PYTHON,
testListenerWithoutTLSPort()
testPrecisePublishRateLimiterUpdate()
testCreatedPartitionedConsumerSendsCloseConsumerAfterTimeout()
testMaxTopicsPerNamespace()
testAsyncBatchReceivePartitionedTopic(BatchReceivePolicy
testFilterEntriesForConsumerOfNullElement()
testGetParentForPath(final
testConnectionCreation()
testTopicReplication(String
testGetBytesOffsetZero()
testHandleUnknownProperty()
testAvroFunctionLocalRun(null);
testReadEos()
testMetricsStatsThatTriggeredByMaxSize()
testSourceProperty()
test](https://img.shields.io/github/workflow/status/apache/pulsar/CI%20-%20Unit?label=unit%20test)
testExistOperation()
testGenericObjectRemoveFiledFunction()
testGenericOf()
testCheckUnAcknowledgedMessageRedeliveryTimer(long
testForceDeleteTenantNotAllowed()
testEffectivelyOnceEnabled(Supplier<String>
testRabbitMQSink()
testPulsarSinkLocalRun(String
testCustomString()
testPartitionsAutoUpdate()
testSubscribeRateDisabled()
testReplicateDelayedDelivery()
testKeySharedConsumerWithEncrypted()
testGetAllPartitions()
testProduceTxnMessage()
testWithoutRightSource()
testTopicLevelInactivePolicyUpdateAndClean()
testNettyClientSslContextRefresher()
testDebeziumPostgreSqlConnect(String
testAutoCreationNamespaceOverridesSubscriptionTopicCreation()
testUseAutoConsumeWithSchemalessTopic(SchemaType.NONE);
testSkipRedeliverTemporally()
testCreateReaderImp()
testProduceConsumeThroughBrokers()
testConvertAvroFloat()
testResourceRestrictions(cpu,
testEmptyStringAsExtractionDirectory()
testBadMongoUri()
testGenericReaderByClazzBasedWriterSchema()
testSerializationNull()
testBatchSourceConfigInvalidDiscoveryTriggererClassName()
testFilterEntriesForConsumerOfTxnMsgAbort()
testMultiReaderNonDurableIsAbleToSeekRelativeTime()
testConsumerBlockingWithUnAckedMessagesMultipleIteration(boolean
testPreciseBacklogForPartitionedTopic()
testConfigureWithoutOptionalParams()
tester.produceMessage(numMessages,
testTransactionBufferMetrics()
testGetOriginalException()
testGetMetadataCmd()
testRunWithTlsProviderConfigFile()
testInternalTopicInactiveNotClean()
testDownloadFunctionBuiltinFunctionByName()
testGetAuthMethodName()
test_listener_name_client(self):
testBadCollection()
testBps()
testReadData()
testGetWebSocketProduceUri()
testZKCreationFailure()
testBacklogQuotaWithReader()
testDebeziumMySqlConnect(String
testMultipleAddress()
testTransactionTopic()
testAddRg.setDispatchRateInBytes(Long.valueOf(-1));
testMessage.getSfixed32Field());
testE2EPulsarFunctionLocalRunNarURL()
testDeletePartitionedTopicMultipleTimes()
testHandleCloseProducer()
testGenerateDocumention()
testSerialize()
testFlushCursorAfterIndividualDeleteInactivity()
testAckWithTransactionReduceUnackCountNotInPendingAcks()
testEndSubNotExist()
testAddRg.setDispatchRateInMsgs(random.nextInt());
testRetentionPolicyValidationAsPartOfAllPolicies()
testBatchConfig.setDiscoveryTriggererClassName(TestBatchSource.class.getName());
testNullValue(ElasticSearchConfig.NullValueAction.IGNORE);
testPauseAndResume()
testGetSubscribeRateApplied()
testMessage.SerializeToArray(const_cast<char*>(content.data()),
testConnectionAutoReleaseUnPartitionedTopicWithTransaction()
testForwardAuthData()
testTopicReplicatedAndProducerCreate(String
testMetricsStatsWhenDisabledBatchFeature()
testPublisherStats()
