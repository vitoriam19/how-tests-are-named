testee.getAdjustedSeekPositionUs(playlistTimeToPeriodTimeUs(24_000_000),
testFullMediaItemList.subList(
testContext(
testOnCommandRequest(
testReturnedExtras.putBoolean(BrowserRoot.EXTRA_OFFLINE,
testReadFull()
testBeforeSesameFilled()
testArray.readBits(3);
testRating).addListener(latch::countDown,
testArray.setPosition(5);
test()
testReadUnsignedIntToInt(Integer.MAX_VALUE);
testReadLong(Long.MIN_VALUE);
testResponseHeader.remove("Content-Length");
testRunner.assertCompletedMediaPeriodLoads(
testSurfaceView.setVisibility(View.GONE);
testResponseHeader.entrySet())
testRunner.releaseSource();
testAddMediaSources_skipSettingMediaItems_invalidInitialSeek_correctMaskingMediaItemIndex()
testArray.skipBytes(-8);
testDataSource.getDataSet().newDefaultData().appendReadData(Arrays.copyOf(TEST_DATA,
testRunner.assertTimelineChangeReasonsEqual(
testResponseHeader.put("Set-Cookie",
testSource.getSize();
testOpenDotOutside()
test_OpenCallsUpstreamThrowingOpen_CloseCallsUpstreamClose()
testBuffer.put((byte)
testOnCommandRequest(COMMAND_PLAY_PAUSE,
testThread.quit();
testRunner.run();
testReadUnsignedIntToInt(1);
testSesameBefore()
testControllerAfterSessionIsClosed(String
testThread.start();
testFilledCircleAfter()
testAutoAfter()
testRead(DataSpec
testMediaItems.addAll(testAddIndex,
testAdaptiveDataSetTrailingSmallChunk()
testSubMesh(Projection.Mesh
testFilled()
testCloneAndInsert(ShuffleOrder
testDecoding(Arrays.copyOfRange(PROJ_DATA,
testException()
testSesameAfter()
testee.getAdjustedSeekPositionUs(playlistTimeToPeriodTimeUs(17_000_000),
testReadUnsignedIntToInt(int
testReadLong(long
testArray.setPosition(16);
testReadInt(-1);
testListener.onStreamVolumeChangedLatch.await(TIMEOUT_MS,
testAdaptiveDataSet()
testControllerAfterSessionIsClosed(@NonNull
testApplyEmbeddedStylesFalseWithApplyEmbeddedFontSizes()
tests](https://github.com/androidx/media/tree/main/libraries/transformer/src/androidTest/java/androidx/media3/transformer).
testPlaylist.add(TestUtils.createMediaItem(R.raw.video_not_seekable));
testRunner.assertPositionDiscontinuityReasonsEqual(Player.DISCONTINUITY_REASON_AUTO_TRANSITION);
testThread.release();
testControllerAfterSessionIsClosed(DEFAULT_TEST_NAME);
testMediaItems.addAll(mediaItems.subList(toIndex,
testParams.extras)).isTrue();
testResponseHeader.put("Content-Type",
testCacheAndReadUnboundedRequestUnknownLengthWithCacheKeyFactoryOverridingDataSpecCacheKey()
testPlayerBuilder.setUseLazyPreparation(useLazyPreparation);
testReadShort(Short.MIN_VALUE);
testOpenCircleAfter()
testExtras.putString("testKey",
testList.get(testWindowIndex).mediaId)
testArray.setPosition(11);
testFinished.block(timeoutMs);
testArray.skipBits(5);
testInvalidPosition()
testDecoding(byte[]
testRunner.assertTimelineChange();
testRunner.setListFramesToCapture(listFrameToCaptureMs);
testArray.readBits(32);
testedContentTypes.add(input);
testReadUnsignedInt(1);
testArgs.putString("args_key",
testPlaylist.add(TestUtils.createMediaItem(context));
testExtractorsUpdatesSourceInfoBeforeOnPreparedCallback(new
testReadPartialOpenEnded()
testObject).sendToTarget();
testSource.read(/*
testRunner.assertCompletedManifestLoads(/*
testArray.readInt();
testCoordinate(float[]
testReadShort(short
testFilledDotBefore()
testTimeline.getWindowCount();
testDurationMs).build();
testReadUnsignedLongToLong(Long.MAX_VALUE);
testReadLong(1);
testExtras.putString(testQuery,
testArray.readBitsToLong(64);
testArray.skipBits(16);
testPlayerBuilder.setTrackSelector(trackSelector);
testOnCommandRequest(COMMAND_ADJUST_DEVICE_VOLUME,
testHandler.postAndSync(
testCircleAfter()
testReads(false);
testFilledSesameBefore()
test2SpliceInsertCommands()
testEmpty()
testMediaItems.addAll(mediaItems);
testArray.readBits(0);
testRunner.start().blockUntilEnded(TIMEOUT_MS));
testThread2.start();
testReadUnsignedLongToLong(0);
testMediaItems.indexOf(testCurrentMediaItem);
testRunner.assertNoTimelineChange();
testBeforeFilledSesame()
testSource.open(dataSpec);
testCallback.waitForConnect(true);
testApplyEmbeddedFontSizes()
testArray.readBytes(bytesRead,
test_bypassOffThenOn()
testReadUnsignedLongToLong(long
testArray.readLong();
testNone()
testArray.skipBit();
testString.getBytes(Charsets.UTF_8);
testSource.readAt(position,
testArray.skipBytes(-2);
testTimeline.getWindow(testWindowIndex,
testReadUnsignedIntToInt(Integer.MIN_VALUE);
testMediaItems.add(MediaUtils.convertToMediaItem(testMediaMetadataCompat,
testSelections.add(
testRunner.assertPositionDiscontinuityReasonsEqual(Player.DISCONTINUITY_REASON_SEEK);
testOnCommandRequest(COMMAND_SEEK_TO_PREVIOUS_MEDIA_ITEM,
testHandler.post(
testRunner.assertPlayedPeriodIndices(0,
testCoordinate(FIRST_VERTEX,
testOpen()
testReadInt(0);
tests](../test_session_current/).
testMediaUri.toString())
testArray.skipBytes(-4);
testRunner.setActionSchedule(schedule).run();
testSubtitle)).isTrue();
testPlaylist.add(TestUtils.createMediaItem(R.raw.video_desks));
testCircleOutside()
testValidMixedWithInvalidDescription()
testSessionPositionInfo.toBundle();
testRunner.setOfflineLicenseKeySetId(offlineLicenseKeySetId);
testApplyEmbeddedStyles()
testMediaItems.get(i));
testTransformer.startTransformation(mediaItem,
test_bypassOnThenOn()
testArray.readBytesAsString(2));
testExtras.putString(testMediaId,
testPlaylist.add(new
testRead(END_OFF_BOUNDARY,
testArray.readUnsignedLongToLong();
testExplicitInitSegment_withRange()
testCloneAndRemove(
testOpenCircleOutside()
testReadUnsignedInt(Integer.MAX_VALUE
testException.set(exception);
testReadVarintFlaky(
testRemoveAllEmbeddedStyling()
testInvalidMarkShape()
testCoordinate(LAST_UV,
testRunner.runOnPlaybackThread(()
testRead(END_ON_BOUNDARY,
testDurationMs).build());
testRunner.releasePeriod(mediaPeriod);
testArray.readUnsignedIntToInt();
testReadInt(int
testReadInt(Integer.MIN_VALUE);
testReadInt(Integer.MAX_VALUE);
testHints.putString("test_key",
tests](https://github.com/androidx/media/tree/main/libraries/transformer/src/androidTest/java/com/google/android/exoplayer2/transformer).
testRead(START_OFF_BOUNDARY,
testFullMediaItemList.size()));
testDescription)).isTrue();
testInstance.close();
testReadUnsignedLongToLong(1);
testArray.readBitsToLong(45);
testRedirectParseAndAttachCookie_dataSourceHandlesSetCookie_andPreservesOriginalRequestHeaders()
testApplyEmbeddedStylesFalse()
testPlayerBuilder.setRenderers(renderers);
testThread.runOnMainThread(
testReadShort(Short.MAX_VALUE);
testReadUnsignedInt(0xFFFFFFFFL);
testRule.getActivity(),
testExtras)).isTrue();
testMediaId).build();
testSesameOutside()
testArray.readBits(result,
testArray.setPosition(6);
testThread.getLooper()));
testSegmentTypes()
testRunner.release();
testCustomAction2.getAction(),
testId).put("device",
testThread2.join();
testStart_withPlaceholderContent_initializedAdsLoader()
test23FpsH264FixedV23()
testReadShort((short)
testReadInt(1);
testOpenSesameAfter()
testPlayerBuilder.setRenderersFactory(renderersFactory);
testPlayerBuilder.setClock(clock);
testQueue.get(testIndex).getQueueId();
testArray.readUnsignedInt();
testMediaPeriodCreation(Timeline
testArray.skipBytes(2);
testReadLong(Long.MAX_VALUE);
testRunner.releasePeriod(lazyPeriod);
testRule.getActivity())
testColorDescriptionNotSupported()
testExtras.putInt(MediaBrowserCompat.EXTRA_PAGE,
testCoordinate(LAST_VERTEX,
testRunnable()
testArray.readBits(18);
testJson.put("testId",
testPlayerError)).isTrue();
testMediaItems.indexOf(mediaItems.get(testToIndex));
testPlaylist.add(secondPlaylistItem);
testRunner.createPeriod(
testRunner.assertPlaybackStatesEqual(
testRunner.startCapturingProcess();
testExtras.putInt(MediaBrowserCompat.EXTRA_PAGE_SIZE,
testReads(boolean
testRunner.outputSetCondition.block();
testRunner.assertPositionDiscontinuityReasonsEqual(
testJson.put("skipReason",
testCircleBefore()
testFakeData()
testMediaItems.addAll(mediaItems.subList(testToIndex,
testReadVarint(reader,
testQueue.size();
testArray.readBits(14);
testInstance.open(new
testRunner.start().blockUntilActionScheduleFinished(TIMEOUT_MS).blockUntilEnded(TIMEOUT_MS);
testRunner.assertTimelinesSame(placeholderTimeline,
testRunner.assertTimelinesSame(
testRead(FULL,
testThread.runOnMainThread(this::createDownloadManager);
testOnCommandRequest(COMMAND_SEEK_TO_NEXT_MEDIA_ITEM,
testCoordinate(FIRST_UV,
testArray.skipBytes(6);
testReadUnsignedIntToInt(0);
testRunner.captureFinishedCondition.block();
testFilledCircleBefore()
testEmptyWithWhitespace()
testNoInteraction()
testMediaItems.set(
testInvalidMarkFill()
testWithEncryption()
testMultipleDataSets()
testReadPartialBounded()
testRunner.prepareSource();
testReadVarint(
testSubMesh(projection.leftMesh);
test16BitPlayback()
testDataSource.getDataSet().newDefaultData().appendReadData(new
testRunner.assertCompletedManifestLoads(0,
testPlayerBuilder.setLoadControl(loadControl);
testArray.readBits(8);
testSource.addTransferListener(transferListener);
test_0ms()
testReadLong(-1);
testRunner.assertNoPositionDiscontinuities();
testSelections.add(Collections.singletonList(new
testBuffer.flip();
testee.getAdjustedSeekPositionUs(playlistTimeToPeriodTimeUs(19_000_000),
testReadLong(0);
testSource.close();
testDotBefore()
testOpenDotAfter()
testAuto()
test24FpsH264FixedV23()
testReads(true);
testPlaylist.add(TestUtils.createMediaItem(context,
testMp4SampleWithSlowMotionMetadata()
testArray.setPosition(32);
testPreserveJapaneseLanguageFeatures()
testRunner.assertPositionDiscontinuityReasonsEqual(Player.DISCONTINUITY_REASON_INTERNAL);
testTimeline.getWindow(testMediaItemIndex,
testArray.setPosition(0);
testException.get());
testSelections.add(selectionsFromAllGroups);
testBundle.putString("key",
testArray.setPosition(31);
testArray.byteAlign();
testCustomAction1.getExtras())))
testRunner.assertTimelineChangeBlocking();
testReadUnsignedInt(Integer.MAX_VALUE);
testOpenSourceFailures()
testArray.setPosition(10);
test29FpsH264FixedV23()
testDotOutside()
testThread1.join();
testThread.runOnMainThread(()
testCacheAndReadUnboundedRequestUnknownLengthWithCacheKeyFactoryWithNullDataSpecCacheKey()
testResponseHeader.put("Content-Length",
testMediaItems.get(testCurrentPeriodIndex);
testArgs.putString("args",
testReadUnsignedLongToLong(Long.MIN_VALUE);
testReadUnsignedInt(long
testRule.getActivity());
testPlayback_twoIdenticalMp3Files()
testArray.readShort();
testRunner.assertPlayedPeriodIndices(0);
testThread.quitSafely();
testArray.readBitsToLong(53);
testRedirectParseAndAttachCookie_dataSourceHandlesSetCookie_andPreservesOriginalRequestHeadersIncludingByteRangeHeader()
testParams).get(TIMEOUT_MS,
testRule.getActivity().runTest(hostedTest,
testDotAfter()
testFilledSesameAfter()
testOnCommandRequest(COMMAND_SET_DEVICE_VOLUME,
testReadUnsignedLongToLong(-1);
testCustomAction1.getAction(),
testCustomAction2.getExtras())))
testSurfaceView.setVisibility(View.VISIBLE);
testFilledSesameOutside()
testResponseHeader.put("Content-Encoding",
testOpenDotBefore()
test_OpenCallsUpstreamOpen_CloseCallsUpstreamClose()
testTitle)).isTrue();
testReadUnsignedIntToInt(-1);
testReadVarintFlaky(reader,
testee.getAdjustedSeekPositionUs(playlistTimeToPeriodTimeUs(100_000_000),
testMediaPeriodCreation(multiWindowTimeline,
test24BitPlayback()
testArray.getData(),
testRunner.createPeriod(mediaPeriodId);
testAddMediaSources_skipSettingMediaItems_invalidInitialSeek_correctMaskingWindowIndex()
testIFrameVariant()
testThread.runTestOnMainThread(r);
testAdaptiveDataSetChunkSizeDistribution()
testTransformer.startTransformation(
testReadUnsignedInt(0);
testRule.getActivity().getPackageManager().hasSystemFeature(PackageManager.FEATURE_PC);
testCloneAndRemove(new
testThread.join();
testExtractorsUpdatesSourceInfoBeforeOnPreparedCallback(
testAutoOutside()
testOpenAfter()
testNull()
testRead(START_ON_BOUNDARY,
testDataSource.open(new
testNoInteraction();
testSurfaceView.getHolder();
testQuotedStringStyleNotSupported()
testRunner.preparePeriod(lazyPeriod,
testThread1.start();
testOpenCircleBefore()
testOpenSesameOutside()
testArray.readBitsToLong(0);
testConnectionHints.putString("test_key",
testThread.runTestOnMainThread(
testJson.toString(/*
testFilledDotAfter()
testFilledDotOutside()
test10BitProfile2Playback()
testWithoutEncryption()
test_500ms()
testRunner.assertPrepareAndReleaseAllPeriods();
testDecoding(PROJ_DATA);
testFilledCircleOutside()
testRunner.captureFinishedCondition.close();
testCloneAndInsert(new
testRunner.preparePeriod(mediaPeriod,
testSurfaceView.getHolder().getSurface();
testRemoveEmbeddedFontSizes()
testOpenSesameBefore()
testDuration).build());
testInvalid()
testOnCommandRequest(int
