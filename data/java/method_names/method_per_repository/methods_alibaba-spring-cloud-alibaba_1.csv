testConsumeAndProduce(){
testFeign(@PathVariable
testInvalidDataId()
testServiceDiscoveryWithRestTemplate()
testCommonPropertiesHasLowerPriority()
testServiceDiscoveryWithFeignClient()
testUri(locationUri,
testImportCheckDisabled()
testServiceDiscovery()
testResolveProfileSpecific(String
testRefreshConfig()
testDefaultRule()
testDefault(@PathVariable
testFailureToleranceDisabled()
testDataIdMustBeSpecified()
testImportCheckEnabled()
testRestTemplateBlockHandler()
testResolveProfileSpecific("default");
testUsingSmartConfigurationPropertiesRebinder()
test_compatibleWithOlderVersion()
testFailureToleranceEnabled()
testServiceDiscoveryActuatorEndpoint()
testParseBeanDefinition()
testConfigSpecificRule()
testIsResolvable_givenDisable_thenReturnFalse()
testResolveProfileSpecific();
testFunction(String
testUri(locationUri);
testUsingConfigurationPropertiesRebinder_whenBehaviorIsDefault()
testUrisInLocationShouldOverridesProperty()
testServiceDiscoveryWithFeignClientUsingSentinelCircuitBreaker()
testProperties()
test()
testSpecificRefreshWork()
testIsResolvable_givenCorrectPrefix_thenReturnTure()
testUri(locationUri)).hasMessage("illegal
testFeignMethod(@PathVariable
testStartWithASlashIsOK()
testIsResolvable_givenIncorrectPrefix_thenReturnFalse()
testResolveProfileSpecific()
testGetInstancesFailureToleranceDisabled()
testSpecificFeignRule()
testUri(locationUri)).hasMessage("dataId
testUsingSmartConfigurationPropertiesRebinder_whenBehaviorIsNotDefault()
testConsumeAndProduce()
testResolveProfileSpecific_givenNothing_thenReturnDefaultProfile()
testSpecificFeignMethodRule()
testCacheIsOK()
testConfigDefaultRule()
testUri(locationUri))
testGetValidField()
testSetCommonPropertiesIsOK()
testUri(String
testGetInstancesFailureToleranceEnabled()
