testMemoryLimitAbsoluteNegative()
testLoadReportsWrittenOnMetadataStore()
testProxyAuthorizationWithPrefixSubscriptionAuthMode()
testReadYamlFile()
testUpdateNonPartitionedTopicProperties()
testProducerBusy()
testCrudResourceGroups()
Thread(()
testRSAEncryption()
testAdminRequestWithNormalUserToken()
simpleConcurrentReadPerfectMatch()
testBrokerNotReachThreshold()
testConstructor()
testBookieIsolationWithSecondaryGroup()
testMemoryLimit(JVM_MAX_DIRECT_MEMORY
testUserExceptionThrowingFunction()
testReplicateReplicatorDispatchRatePolicies()
testSendAvroAndJsonPrimitiveSchema()
testCreateSubscriptions()
testUploadCmdWithAllArgs()
testE2EPulsarFunctionLocalRun(jarFilePathUrl,
testFunctionLocalRun(Runtime
testRQCalcNegativeConfTest()
getGoInstanceCmd()
testRQCalcNegativeAllUsageTest()
testDeregisterHTTPSinkBKPackageCleanup()
testDeleteTopicAndSchemaForV2()
testContinueDispatchMessagesWhenMessageTTL()
testNamespaceDelayedDeliveryPolicyApi()
testTimedEvent()
testWatcherCallsListenerOnUpdate()
testReplicatorSubscriptionDispatchRatePolicies()
testAvroSchemaFunctionTest()
testLoadEventListenerWithWrongListerClass()
testDeregisterBuiltinSourceBKPackageCleanup()
testMultiConsumerImplBatchReceive()
revalidateLeaderWithinSameSession(String
testConvertEmptyCustomPayload()
testOnFilter()
testPtWithPartialPartition()
testAuthenticate(tokenAA,
testBatchReceivePartitionedTopic(BatchReceivePolicy
measureOpsTime()
testCreateExistTenantCmd()
namespace_equalsCheckType()
testFunctionNegAck(Runtime.JAVA);
testCreateUpdateSubscriptionWithPropertiesCommand()
log.info("--
testRejectUnknownEntityProperties()
brokerNotInitTxnManagedLedgerTopic()
testProducerBuilderImplWhenDefaultCryptoKeyReaderIsEmptyString()
testTopicTransactionMetrics()
testGetSetMaxConsumersPerSubscription()
Collections.singletonList("b");
testTopicPolicyTakeSnapshot()
TestConsumedLedgersTrimNoSubscriptions()
testClearBacklogForTheSubscriptionThatNoConsumers()
testConsumerCreation()
primitiveTypeConsumerConsumerUndefinedCompatible()
testAccessAvroSchemaMetadata(Schema<MyBean>
testPtLazyLoading()
kafkaLogicalTypesDateTest()
testRegisterSinkSuccessWithTransformFunction()
testCreatePartitionedTopicHavingNonPartitionTopicWithPartitionSuffix()
testUpdateBrokerDispatchRateLimiter()
testNotSupportedAvroTypesMap()
testSingleConsumer()
testMockBrokerService()
testCustomSerdeFunction()
testInsertMode(InsertModeTestConfig
shouldCalculateQuantiles()
testMessage.getInt64Field());
testAsyncReadWithMaxSizeByte()
testTrimAuthSecretKeyFilePath()
TopicName.get(
testCanRecoverConsumptionWhenLiftMaxUnAckedMessagesRestriction(SubscriptionType
testJavaNativeExclamationFunction()
assertEquals(keys.size(),
compareToWithAckSetForCumulativeAckTest()
testInvalidRackName()
testUsageUnit()
testInconsistentInputType(PulsarSourceConfig
tesSkipMessageWithNonExistTopicAndExistSub()
testNamespaceBundleLookupOnwershipListener()
testAddRg.setPublishRateInMsgs(Integer.valueOf(random.nextInt()));
testDeleteOffloadedTopic(Supplier<String>
testKeyValueSchemaWithStructs(KeyValueEncodingType.SEPARATED);
txnAckTestBatchAndCumulativeSub()
testDeleteUnloadedOffloadedPartitionedTopic(Supplier<String>
testPulsarSourceStats(String
testStripNonPrintableCharacters(StripNonPrintableCharactersTestConfig
testPulsarSinkStatsWithUrl()
testGetRecoveryTime()
testAcknowledgeUpdateCursorLastActive()
testMaxTopicsPerNamespace()
testTransactionBufferChannelUnActive()
testKeyValueSchemaSeparatedEncoding()
testConvertAvroFloat()
bytesRecordSchemaTest()
testBadConfig("tenant",
testUpdateDynamicLoadBalancerSheddingIntervalMinutes()
testProduceConsumeThroughBrokers()
testResourceGroupOneUpdate.setPublishRateInBytes(1000);
testAck()
testHappyCase()
testPartitionedTopicMessagingWithFailover(Supplier<String>
testProduceWithAvroSchema()
testHavePadding()
testBlockIfQueueFullWhenChunking()
testOpportunisticStripingConfiguration()
testReplicationSnapshotStopWhenNoTraffic()
cursor.close();
testCreateIllegalReaderImp()
testClusterWithTls()
writeInputStreamData()
test](https://github.com/apache/pulsar/blob/master/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/debezium/DebeziumMsSqlSourceTester.java).
testReadToOutputStream()
testPersistentTopicStatsByNullProducerName()
testPulsarShell.run((a)
testInitTransactionReader()
testAuthTokenConfigFromJson()
testMaxUnackedMessagesOnSubApplied()
testRedeliveryAddEpoch(boolean
testInteractiveMode()
testDeleteWithAtMost()
testLoggingFunction(Runtime
testElasticSearchSinkRawData()
tester.getInputTopicSchema());
testPulsarSourceLocalRunNoArchive()
testMalformedDocIgnore()
testSplitBundleForMultiTimes()
testResolveLedgerManagerFactoryUnspecifiedLayout()
testGetClusterInstanceId(String
testOfMethodReturnCorrectValue()
testTruncateCorruptDataLedger()
simpleConcurrentReadMissingLeft()
testSimpleMultiReaderReachEndOfTopic()
recoverAfterZnodeVersionErrorWhileTrimming()
testTriggerBacklogTimeQuotaWithReader()
getWithStats(String
testSink(SinkTester
testDelayedDeliveryWithAllConsumersDisconnecting()
testForceDeletePartitionedTopicWithSub()
testPojoAsAvroAndJsonConversionToConnectData(Double.MAX_VALUE);
testAcquireOwnershipWithZookeeperDisconnectedAfterOwnershipNodeCreated()
testMetricsStatsWhenDisabledBatchFeature()
s3BackwardCompatiblePropertiesTest()
testReadAndWriteAcrossSegment()
testCompactionRetentionOnTopicCreationWithNamespacePolicies()
testKeyValueSchema(SchemaType
testAllTimerTaskShouldCanceledAfterConsumerClosed(boolean
test_chunking(self):
testMessage.getTestEnum().name());
testTransactionAckMessageList()
testProduceConsumeThroughProxy()
HashSet<>();
testMessagePayloadProcessor()
testNonPersistentTopicSubscriptionCreationWithAutoCreationDisable()
TestMergeRuntimeOpts()
test_json_schema_encode(self):
testMultiReaderAfterMessagesWerePublished()
testProducerBatchSendTimeoutMemoryRelease()
cmdParserTest()
testGenericObjectSinkWithTransformFunction()
testProduceConsume(String
testAuthMetrics()
testCustomSerdeFunction();
testDecimal()
testTxnAbortMarker()
testSinkWithTransformFunction()
testConsumeMultipleSchemaMessages()
@Test(enabled
toCompletableFuture_shouldCompleteExceptionally_channelFutureCompletedAfter()
@Test(dataProvider="enableBatch")
testPolicyIsDeleteTogetherManually()
shouldFailHandleEndTxn()
testConstructorRegistersAsListener()
testDeleteNamespaceForcefully()
testDeleteNonExistCluster()
testOfFactoryMethod()
shouldAcceptNullReferenceAndIgnoreIt()
testSerializableAuthentication()
testPrimitiveType()
assertEquals(properties.get(HARD_CODE_KEY),
testConnectionController()
testMTProduceConsumeRGUsagePersistentTopicNamesSameTenant()
testng_report_dir=$(dirname
testPojoAsAvroAndJsonConversionToConnectData(Short.MAX_VALUE);
testMessage.getStringField());
testDeregisterHTTPSourceBKPackageCleanup()
testNonDurableSubscriptionRecovery(SubscriptionType
testQueueBigEntry()
testTooManyOnLookup()
testTransactionBufferRequestCredits()
testPersistentSubscription.getConsumers().get(0).getPendingAcks().size()
testModularLoadManagerRemoveBundleAndLoad()
testMaxResource(0.2,
testAttributes()
testSyncFlushBatchMessagesPartitionedTopic(false);
testLoadMapConfig()
testMaxSubscriptionsFailFast()
testGetMetricsByDefault()
testData2.keySet())
testKeyValueSchemaInfoToString()
testUpdateSinkFailedWithWrongPackageName()
testDeadLetterTopicWithMessageKey()
localDatetimeSchemaTest()
testCacheEvictionByMarkDeletedPosition()
producerSend(TopicType
serializeAndDeserializeTest()
testDuplicationSnapshotApi()
verifyConsumerNotReceiveAnyStateChanges(TestConsumerStateEventListener
testCreateFunctionWithInvalidPackageUrl()
timestampSchemaTest()
testKinesis()
testMemoryLimitBothSet()
testNoRolloverIfNoMetadataSessionWithExistingData()
testResourceGroupTwo.setDispatchRateInMsgs(100);
testPublishConsume(String
testTokenSettingPrefix()
testResourceGroupUpdatePart()
testEncodeAndDecodeGenericRecord(encodeSchema,
testCreateAndGetTopicProperties()
testInvalidConfig()
testCompactionRetentionAfterTopicCreationWithNamespacePolicies()
testE2EPulsarFunctionLocalRun(null,
namespace_emptyNamespace()
shouldCallSetupOnce2()
testProducerTasksCleanupWhenUsingExclusiveProducers(String
testLeastResourceUsageWithWeightWithArithmeticException()
testPriorityAndDisableMaxConsumersOnSub()
testGetStats()
testMultiReaderNonDurableIsAbleToSeekRelativeTime()
testReadMessageWithoutBatchingWithMessageInclusive()
testMetrics()
@Test(priority
structTypeConsumerConsumerUndefinedCompatible()
send(1);
testConfigurationMetadataStoreUrl()
testFlushCursorAfterInactivity()
testTopicDuplicationAppliedApi()
testGetStatsAndCancelStatsTimeoutWithoutArriveUpdateInterval()
testKinesis(boolean
testGetPartitionedMetadataRetries()
testPeekBrokerEntryMetadata()
testNullValueDelete()
testResourceGranularities(1.0,
testPutSameObj()
testListenerNotInvokedWhenTopicCreatedInOtherNamespace()
testPublishRateDisabled()
testRole).signWith(secretKey).compact();
testBasicKubernetesManifestCustomizerWithRuntimeCustomizerConfigOverwrite()
testHandleAuthResponseWithoutClientVersion()
testReaderWithTimeLong()
testGenericObjectSinkWithSchemaChange()
testAvroSchemaWithTcpLookup()
(executor
testExpiredLedgerDeletionAfterManagedLedgerRestart()
testGetSchema()
testConf.toString();
createConsumer(String
testMaxResource(1.05,
testConsume()
testKeyValueSchema(KeyValueEncodingType.SEPARATED);
testMessage.SerializeToArray(const_cast<char*>(content.data()),
castToKafkaSchemaTest()
testMarkerDelete()
testInternalTopicInactiveNotClean()
testLoadProtocolHandler()
testDeleteNamespaceInfiniteRetry()
testGetTransactionBufferStats()
testDisconnection()
testPartitionedProducerFailOnSending()
keyValueNullInlineTest(String
testResourceGroupCreate()
awsValidationSuccessTest()
testConvertAvroUnion()
testSinkConfig.setSinkType("foo");
testSplitBundleAndRemoveOldBundleFromOwnerShipCache()
testMTProduceConsumeRGUsageNonPersistentTopicNamesDifferentTenant()
writeBytesArrayData()
testSetMetadataServiceUriZookkeeperServers()
testThreadDump()
testHasMessageAvailableWithNullValueMessage()
testCmdClusterConfigFile()
callWithExhaustedRetries()
testTopicNameMatchNullTopicName()
testSetMaxConsumers()
testGetNativeSchema()
test_report="$(cat
testClusterIsReadyBeforeCreateTopic()
testThrowsExceptionWhenFunctionInstanceIdNotPropertyDelimited()
testDownloadFunctionBuiltinFunctionByName()
topicTerminatedTest()
testResetCursorCompatibility(String
testConfigurationStore()
testWindowFunction(String
testClazzBasedReaderByClazzGenericWriterSchema()
testPulsarSinkPoolMessages()
testDrainWorkers()
doubleRecordSchemaTest()
testCheckUnAcknowledgedMessageRedeliveryTimer(long
testRegisterSinkSuccessWithPackageName()
testBlockUnackConsumerAckByDifferentConsumer()
testMultiReaderSeek()
testPublishWithAutoCompaction(Supplier<String>
tester.getSinkArchive(),
testGetFunctionTypes(Object
testIndividualAckList()
testBookKeeperClientIoThreads()
unauthenticatedSocketTest()
testBrokerAdditionalServlet()
testGetMetadataOfTopicWithLookupPermission()
testRemoveReplicationClusters()
queryTest()
tester.get().shutdown();
testNullValue(ElasticSearchConfig.NullValueAction.DELETE);
testNewAckForResponseNoFlushTimeout()
assertNotNull(lastSequenceIdPushed);
testAuthorization()
testNotChangeMaxReadPositionAndAddAbortTimesWhenCheckIfNoSnapshot()
testForceDeleteNamespace()
testPojoAsAvroAndJsonConversionToConnectData(pojo,
assertEquals(bookies.getBookies().size(),
test_group_pulsar_connectors_thread()
testTlsClientAuthOverBinaryProtocol()
testGetReadonlyBookies(String
testAddRg.setPublishRateInBytes(10000L);
testTransactionBufferRecoverThrowPulsarClientException()
testPojoAsAvroAndJsonConversionToConnectData(new
testPersistentSubscription.getCursor();
testDownloadFunctionByName()
testMessage.getSfixed32Field());
statsOut.toString();
testMakeLocalPoliciesImmutableStringSerializationCompatibility()
testDoCacheEviction()
smallBlobTest()
testErrorLevel()
testResourceQuotaMixIn()
testSetBacklogCausedCreatingProducerFailure()
shouldCallSetupOnce1()
testTransactionClientReconnectTest()
testKeyStoreTlsTransportWithAuth(Supplier<String>
testProxyRoleCantGetResourceGroups()
testSubscriptionTypesEnabled()
AuthenticationService(PulsarConfigurationLoader.convertFrom(workerConfig)),
testBadBatchTime()
testSubTypeAndEnableBatch()
removeNonPersistentTopicReaderTest()
testMemoryLimitAbsolute()
keepFileTest()
testTransactionMetaLogMetrics()
testNegativeAcksWithBatchAckEnabled()
transferNormalTest(String
testTopicReplication(String
testGetTopicsOfNamespace()
testDynamicConfigurationTopicAutoCreationPartitioned()
testListTenantCmd()
testCustomKubernetesDownloadCommandsWithAuth()
testSnapshotCachePruning()
testRemoveMostServicingBrokersForNamespace()
testSslWithHostnameVerification()
testBadConfig("",
testProduceWithLongSchema()
testPersistent(String
testProduceConsume(serviceUrl,
testGetWritableBookies(String
checkClient()
newTopicShouldBeInTopicsList()
testRateLimiterWithFunction()
testDrain()
testSetBundleNumberForDefaultNamespace(int
testWhenUpdateReplicationCluster()
testLoadProxyEventListener()
testPingPong()
testFilterEntriesForConsumerOfTxnBufferAbort()
testInitNewClusterTwice(String
namespace_propertyClusterNamespaceTopic()
testProduceAndConsumeUnderSystemNamespace()
testDeadLetterTopicWithInitialSubscription()
testCredentialProviderPlugin()
shouldFailHandlePartitionMetadataRequest()
testResolveLedgerManagerFactoryHierarchical()
testFilter()
testNamespaceServicePulsarClientConfiguration()
testProduceTxnMessage()
testSimpleProduceAndConsume()
testGetSchemaInfo()
testShouldNotBlockConsumerIfRedeliverBeforeReceive()
testMaxResource(null,
topicNameUrlEncodingTest()
testTopicMaxMessageSize()
testCanReadEntryFromMLedgerWaitingForNewEntry()
testEncodeAndDecodeGenericRecord(Schema<Foo>
socketTest()
toCompletableFuture_shouldCompleteExceptionally_channelFutureCompletedBefore()
testExpiredTokenMetrics()
testProducerByTlsTransport()
testRQCalcGlobUsedGreaterThanConfigTest()
shouldFailHandleAddPartitionToTxn()
testThreadFunctionInstancesRestart()
testRecoverWhenDeleteFromCursor()
testCleanSubscriptionField()
testRequestCredits()
awsValidationDefaultBlockSizeTest()
testSeekForBatchByAdmin()
testDeadLetterTopicUnderPartitionedTopicWithKeyShareType()
testReceiveAsyncCanBeCancelled()
testSeekChunkMessages()
testWithBlankVallueConfig()
testSessionLost()
testMinMaxResource(0.05,
testAreExceptionsPresentInChain5()
testResourceRestrictions(Double
testAckTrackerMultiAck(boolean
testAutoCreationOfSystemTopicTransactionBufferSnapshot()
testUseAutoConsumeWithSchemalessTopic(SchemaType.BYTES);
testResourceGranularities(0.1,
testOnlyNegativeOnEOFWithBufferedRead()
testSend()
Lists.newArrayList(consumer1,
testConsumerIsClosed()
testStart()
runMainDummyConfigFile()
testManagedLedgerLazyCursorLedgerCreation()
testSortKeysMulti(SchemaType
testConsumerImplBatchReceive()
testAddMessageWithDeliverAtTimeAfterFullTickTimeWithStrict()
test](https://img.shields.io/github/workflow/status/apache/pulsar/CI%20-%20Unit?label=unit%20test)
testMinMaxResource(0.1,
testSendTxnAckBatchMessageToDLQ()
testWriteGenericRecords(ProcessingGuarantees
testPojoAsAvroAndJsonConversionToConnectData(Float.MAX_VALUE);
testGcsConfiguration()
testBareEnum()
testMessage.getFixed32Field());
testMessagePublishAndProduced()
testAuthenticate(AuthenticationProviderBasic
testIsSystemTopic()
testProduceToPartitionedTopicSpecificPartition()
test.accept(cnx);
testCreatedConsumerSendsCloseConsumerAfterTimeout()
testBadCollection()
testBuild()
testAllowsColonsInFunctionName()
testKeyValueGenericRecord()
testRemoveTimeBasedBacklogQuota()
testBlockUnackedConsumerRedeliverySpecificMessagesProduceWithPause()
oneTransactionOneTopicWithMultiSubTest()
testRegisterSinkZeroParallelism()
testCreateSubscriptionWithPropertiesCommand()
test_group_pulsar_connectors_process()
testPythonFunctionNegAck()
testDefault()
testTransactionBufferLookUp()
testWatchWritableBookiesSuccess(String
testCompletersClient()
testNonPersistentPartitionsAreNotAutoCreatedWhenThePartitionedTopicDoesNotExist()
testRemoveDeadBrokerTimeAverageData()
testPublishOffloadAndConsumeViaCLI(String
shouldAllowAllWithWildcard()
testCloseConnectionOnBrokerRejectedRequest()
testMarkingAsReplicated(String
testPythonExclamationFunction()
testJavaFunctionNegAck()
kvBytesIntSchemaTests()
testRateLimit(persistentTopicString);
testTransactionMetaStoreUnload()
testIndexExists()
testMaxSubPerTopicApi()
testProducerExceptionAndThenUnblockTimeQuota()
testGetMaxProducerApplied()
testLargeArray()
testMaxUnAckMessagesLowerThanPermits(boolean
testPartitionedProducerFailOnInitialization()
testBrokerServicePulsarClientConfiguration()
testJavaExclamationFunction()
shouldAlwaysAllowAcquire()
testMessageNotDuplicated(SubscriptionType
testTlsTransportWithAnyAuth(Supplier<String>
test.getKey()
testPartitionedStatsAggregationByProducerName(String
testGetTimeBasedBacklogQuotaApplied()
testCreateReaderImp()
testE2EPulsarFunctionLocalRun(null));
test_encryption(self):
testDebeziumPostgreSqlConnect(String
