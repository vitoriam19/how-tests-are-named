testAutoClusterFailoverSwitchWithoutAuthentication()
testLookUpWithRedirect()
testBuildSchema()
testCreateTenantCmdWithAdminRolesAndAllowClustersFlags()
test_pathIsFromNamespace()
testTopicLevelOffload()
testTxnTimeoutAtTransactionMetadataStore()
testBasic(String
testMaxSubscriptionsPerTopicWithExistingSubs()
testRetentionPolicyValidation()
cumulativePendingAckReplayTest()
testTransactionAddSubscriptionToTxnAsyncReconnect()
testAcceptSendsNotificationAndForgetsTopic()
txnAckTestBatchAndSharedSubMemoryDeleteTest()
testPulsarSinkLocalRun(null));
testConsumerBlockingWithUnAckedMessagesMultipleIteration(boolean
loadFromMapCredentialFromSecretTest()
testReplicatorMaxConsumerPerSubPolicies()
testProduceMessageAttributes()
testDeleteNonExistentFailureDomainInNonExistCluster()
testAvailable()
testAutoSchemaFunction();
testProducerTooManyOnLookup()
testConvertAvroNullValue()
testPulsarFunctionBuiltinDoesNotExist()
testAddAll()
testLowerBoundaryShedding()
testAutoSchemaFunctionTest()
testMultiConsumerWithSmallPermits()
testSetTimeBasedBacklogQuota()
genericRecordCastTest()
testAsyncBatchReceivePartitionedTopic(BatchReceivePolicy
testDoIndividualBatchAckAsync()
testInactiveLedgerRollOver()
testTransactionAckMessages()
testTimestampWithJsonDefAndJSR310ConversionEnabled(){
testClientCaCertSslContextWithSslProvider(SslProvider
schemaForceDeleteTest()
testProxyTlsTransportWithAuth(Authentication
shouldCloseResources()
internalSetUpForBroker()
Awaitility.await().untilAsserted(()
testChunkedMessageCtxDeallocate()
testListCmd()
testTakeSnapshotBeforeBuildTxnProducer()
testProducer()
testRegisterFunctionSuccessK8sWithUpload()
testSeveralContiguousLedgers(String
testGenerateLedgerIdWithZkPrefix()
cmdParserProxyConfigurationTest()
testCompressDecompress(CompressionType
AtomicReference<>();
testUpdateMaxBatchSize()
testReplicatorMaxProducer()
testAvroConsumerWithWrongRestoredSchema()
testGetNamespaceTopicList()
testAuthenticate(tokenBA,
testSendCompressedWithDeferredSchemaSetup(boolean
testDeleteTopic()
validateEmptyL4PathSkipped(String
testGenericObjectRemoveFieldRecordFunction()
testParseMessageMetadataWithBrokerEntryMetadata()
testByteBufComposite()
testDefaultIMessageFormatter()
testOpenSearchSinkSchemaEnabled()
testMultiMultipleReaders()
testTransactionBufferPendingRequests()
testGetSplitBoundaryMethodReturnCorrectResult()
processedFileFilterTest2()
testGenerateLedgerId(String
tester.getSourceType()
testPartName(String
testMsgKey()
testDebeziumOracleDbConnect("org.apache.kafka.connect.json.JsonConverter",
structTypeProducerProducerUndefinedCompatible()
testGetSchema(Supplier<String>
testPulsarClientCloseThenCloseTcClient()
testDeleteOperation()
testMbps()
shouldReplayBodyBuffer()
testConnectionController2()
testSource()
testDistinguishTopicTypeWhenForceDeleteNamespace()
testBrokerLevelSubscribeRateDynamicUpdate()
testFunctionResultNull()
testPulsarRecordCustomAck(PulsarSourceConfig
testPublishRateLimiterImplUpdate()
testIpAddressInBrokerServiceUrl()
testDeleteTenantForcefully()
testCreatingFutureWithTimeoutHandling()
testPulsarSinkStatsBuiltin()
test_connect_error(self):
testCmdSourceConfigFile(testSourceConfig,
testForceDeleteTenantNotAllowed()
testLedgerNotRolloverWithoutOpenState()
testIncomplete()
testMessageBrokerAndEntryMetadataTimestampMissed()
testGetTransactionCoordinatorStats()
testRemoveMaxProducers()
testCheckMaxProducers()
testRecordFunction();
testMaxResource(1.01,
testLazyCursorLedgerCreation()
testReacquireLeadershipAfterSessionLost()
testNonPartitionedTopicMessagingWithKeyShared(Supplier<String>
testValidatePersistentTopicNameInvalid()
testProduceWithJsonSchema()
testSelectOneAllBellsAndWhistles()
testCompareTo(){
testMessage.getSint32Field());
testWindowFunctionWithAtmostOnce()
testPauseAndResume()
testNonDurableSubscribe()
testRegisterSinkSuccessK8sNoUpload()
testCreateWatcher()
testResourcesNullTest()
testSpanWithGuava()
testTryAcquireNoPermits()
testMaxConsumersOnSubApi()
testBacklogQuotaMixIn()
testTBLowWaterMarkEndToEnd()
testCreatePyFunctionWithFileUrl()
testSetAlwaysCompatibleOnNamespaceLevelAndCheckAlwaysInCompatible()
testRestartBrokerEnableManagedLedgerInfoCompression()
testRead()
testPasswordsNotLeakedOnToString()
testCompactionPriority()
awsS3KeysTest()
testAddAndRemove(boolean
testCreateNameSpace()
testForDifferentCaseTopic()
testProduceToPartitionedTopic()
testAvgMessagesPerEntry()
testOperationSubscribeRate()
testCloneInReadModifyUpdateOrCreate(String
testPojoAsAvroAndJsonConversionToConnectData('a');
testPartitionsAutoUpdate()
longRecordSchemaTestCast()
decodeNullValue()
test_group_broker_group_1()
testConsumerClose()
testClientCreationWithProxyDefinedInConfFile()
testMessage.getUint64Field());
testDeleteNonExistentFailureDomain()
testNonKeySendAndReceiveWithHashRangeExclusiveStickyKeyConsumerSelector(boolean
testAutoCreationNamespaceOverridesSubscriptionTopicCreation()
test".getBytes(),
testResourceGranularities(null,
testGenericObjectSink()
testHaveEndPadding(boolean
testMessage.getUint32Field());
testMessage.getBytesField().toStringUtf8());
tester.startAutoRecovery();
testAddRg.setDispatchRateInBytes(Long.valueOf(-1));
testBrokerConnectionStats()
testExpireNonExistTopic()
testIllegalArg()
testMultiTopicSeekByFunctionWithException()
testClientBuilderWithIllegalLargePort()
testBadConfig("
testProxyAuthorization()
testPublishNullValue()
testE2EPulsarFunctionLocalRunWithNar()
testPulsarSourceLocalRun(String
testForUppercaseTopic()
testProducerMultipleSchemaMessages()
testHeartbeatNamespaceMatch()
testKeyValueSinkWithTransformFunction()
testUpdateCursorLastActive()
testLeastResourceUsageWithWeight()
testElasticSearchSink()
testValidateResourcesGranularityAndProportion()
testCompaction()
test_schema_version(self):
test_sub_record_set_to_none(self):
testSendMessage()
testMultiReaderECDSAEncryption()
structTypeProducerProducerAlwaysCompatible()
testRemoveSizeBasedBacklogQuota()
testHandleCloseProducer()
testAddRg.setDispatchRateInBytes(random.nextInt());
doubleRecordSchemaTestCast()
testTopicReplicatedAndProducerCreate(String
insertionWithInvalidation(String
testNonPersistentSubMetrics()
testApiKey()
testBuildTimeout()
testTopicDispatchRateLimiterOnlyNamespaceLevel()
testDeprecatedCommanderWorks()
testInvalidSchemaDataException(ApiVersion
testCyclicDefinitionDetect()
testGenericObjectFunction(String
testE2EPulsarFunctionLocalRunNarURL()
testMultipleSharedConsumerBlockingWithUnActedMessages(boolean
testHistoryTopicContent(false,
testPythonExclamationZipFunction()
transactions()
testReplicasCheckCTime(String
testInputConsumersGetter(PulsarSourceConfig
testSuperUserCanGetResourceGroups()
testGenericJsonSchema()
testExclamationFunction(Runtime.JAVA,
test_schema_array_wrong_type(self):
testMainProcess(boolean
testCleanUpStateWhenRevalidationGotLockBusy(String
testStringSchema()
testCompatibility(
testSupportsBatchBuilderDefinedInProducerConfigWhenTopLevelBatchBuilderIsUndefined()
shouldFailHandleConsumerStats()
testGetBatchMessageIdByTimestamp()
testGetLeaderBroker()
testE2EPulsarFunctionLocalRun(String
testNamespacePolicy()
testCacheEvictionByReadPosition()
testE2EPulsarFunctionLocalRunBuiltin()
testGetBytesOffsetZero()
cacheSizeUpdate()
testManagedLedgerTotalSize()
testKeyStoreTlsTransportWithAuth(Authentication
testTransactionMultipleSnapshot()
testTransactionBufferRecoverThrowBrokerMetadataException()
testMaxProducers()
avroComplexSchemaTest()
testTopicMaxMessageSize(TopicDomain
testCassandraSink()
testCanHandleExceptionAndRetry()
testReadMessageFromCompactedLedger()
testSubscriptionRecreateTopic()
testSourceByteState()
testInvalidateReadHandleWhenDeleteLedger()
testDispatchRate(SubscriptionType
testLoadBase64FromSystemProperties()
transientValidationSuccessTest()
testKeyHashRangeReader()
testRemoveOwnershipNamespaceBundle()
testNoEntryPutIn(boolean
testTlsLargeSizeMessage()
testRegisterSinkSuccessK8sWithUpload()
test_group_broker_group_2()
getOffloader();
testDeregisterSinkBKPackageCleanup()
testRegisterSourceSuccessWithPackageName()
testResolveLedgerManagerFactoryLongHierarchical()
deleteTopicCloseTransactionBufferTest(boolean
testClient()
testRemoveSubscribeRate()
shouldAllBrokersBeAbleToGetTheLeaderAfterExpiration()
testCreateExclusiveProducerWithRetry()
testDeadLetterTopicWithInitialSubscriptionAndMultiConsumers()
testAlwaysCompatible()
testRedeliveryCountWhenConsumerDisconnected()
testRebalanceWorkers()
testWebSocket(String
checkSystemTopic()
shortRecordSchemaTest()
testAfterDeleteTopicOtherTopicCanRecover()
testSendCommandBeforeCreatingProducer()
testConsistencyOfIndividualMessages()
testReplicatorCompactionThresholdPolicies()
testPartitionedTopicTruncate()
testParseEmptyData()
testTryAcquireMoreThanPermits()
shouldCatchAndLogException()
testJacksonWithTypeDifferences()
testParsingWithPositiveInfinityValue()
testAcquireScheduleManagerExclusiveProducerNotLeaderAnymore()
test_group_function_name="test_group_$(echo
testResourceGroupOneUpdate.setPublishRateInMsgs(10);
testCompareTo()
testMetricsMixIn()
testClientWithoutTls()
test_group_sql()
testSyncFlushBatchMessagesPartitionedTopic(bool
testConvertAvroBoolean()
testSeekForBatch()
localDateSchemaTest()
testSubscriptionPropertiesStats()
testReader()
testE2EPulsarFunctionLocalRun(fileServer.getUrl("/pulsar-functions-api-examples.nar"));
testOfDefaultFactoryMethod()
testCmdClusterConfigFile(ClusterData
testRunWithTlsProviderFlagWithConfigFile()
testDownloadTransformFunction()
testMarkSimilarMissingReplica(String
testCreateMultipleTopicReaderImp()
buffer.commitTxn(txnId2);
testMessage.getDoubleField());
testEffectivelyOnceDisabled(Supplier<String>
test_group_other()
testSeekTimeByFunction()
testPublishAndConsume(String
testBatchSourceConfigInvalidDiscoveryTriggererClassName()
testRetentionPolicyValidationAsPartOfAllPolicies()
testCheckRetentionSizeBasedQuota()
testJdbcSink()
testPulsarSinkWithFunction()
testClearDelayedMessagesWhenClearBacklog()
testAddProducedPartitionToTxn()
recoveryAfterOom()
testUseAutoConsumeWithSchemalessTopic()
testThreadLocalStateCleanupInCurrentAndOtherThread()
testGetListWithGetBundleOp()
testJdbcSink(boolean
TestExpireNonExistTopicAndNonExistSub()
testSubscriptionStatsAdminApi(String
testPulsarSourceStats(fileServer.getUrl("/pulsar-io-data-generator.nar"));
testHandlerReconnectionPartitionProducers(true,
insertionDeletion(String
Assert.assertEquals(Objects.requireNonNull(foundFiles).length,
testRedeliveryOnBlockedDispatcher()
streamingMultiLedgerOffloadIndexBlockImplTest()
testLastActiveAfterResetCursor()
testCanAcknowledgeAndCommitForTransaction()
testRegisterSourceMissingPackageDetailsAndClassname()
invocationBuilder.get();
testCursorReadWriteMetrics()
testAckResponse()
testMethodA()
testNamespacePolicyApi()
testDifferentLevelPolicyApplied()
loadFromYamlFileTest()
shouldShutdownExecutorsImmediately()
testMaxSubscriptionsPerTopic()
sanitizeTest()
testE2EPulsarFunctionLocalRun()
testNamespacesGetTopicHashPositions()
testRecreateNamespace()
testMergeDifferentTransformFunctionConfig()
testReplicatorOffloadPolicies()
testExistOperation()
testIsEmpty()
testBulkIndexAndDelete()
shouldResetBytesLimitAfterUpdate()
testCommandWatchErrorResponse()
testConsumerWithPermitReceiveBatchMessages()
testCreatedPartitionedProducerSendsCloseProducerAfterTimeout()
testBatchMessageOOMMemoryRelease()
testNewOutputRecordBuilder()
testPulsarSinkStatsByteBufferType()
testCustomProcessor(final
testGetTopicsRequestTimeout()
test_producer_is_connected(self):
testCmdSinkConfigFileInvalidSinkType()
testMaxUnackedMessagesPerConsumerPriority()
testV28ClientSetV28BrokerRead()
testBookkeeperFirstOffloadRead()
testCancelTxnTimeout()
primitiveTypeProducerConsumerUndefinedCompatible()
testPoliciesCanBeDeletedWithTopic()
testMalformedListener()
testOffloadAndReadMetrics()
testAutoJsonSchema()
notificationListeners(String
testBps()
testCreateByProperties()
testDispatchRate(subscription,
gcsBackwardCompatiblePropertiesTest()
topicPolicies()
testRemovePublishRate()
testGetPulsarAdminWithExposePulsarAdminDisabled()
testDebeziumMySqlSourceAvro()
shouldNotDoAnythingWhenThereIsBeforeAndAfterMethod(ITestContext
testAreExceptionsPresentInChain3()
testConsumeTxnMessage()
testGetList(String
updateValueWhenKeyDisappears(String
testProduceConsumeUsageOnRG(PersistentTopicNamesSameTenantAndNsRGs);
testGetDrainStatus()
testNegativeAckRedeliveryBackoff()
testPendingAckClearPositionIsSmallerThanMarkDelete()
testTopicFencingTimeout()
testRetentionAndBacklogQuotaCheck()
testIndexFormats(String
smokeTest()
testNs.getLocalName(),
testLookupTopicNotExist()
testMemoryLimit(512L,
testPrecisePublishRateLimiterUpdate()
testResourceGranularities(1.01,
testGetSubPatternTopicFilterTxnInternalTopic()
decodeDataWithNullSchemaVersion()
testTerminateSystemTopic()
testDoNotPrintSensitiveInfo()
emptyCacheTest(String
testRejectMessagesOnMultipleTopics()
testGetBytesNoCopy()
testMessage.getSfixed64Field());
ackBatchMessageTest()
testRegisterSinkFailedWithWrongPackageName()
testReadCreateDeleteLayout(String
testGetCoordinatorInternalStats()
testBatchReceiveAsync(String
txnMessageAckTest()
testMemoryLimit(2048L,
testInitializeWithoutTimer()
testResourceGranularities(0.999,
testGetReadPositionWhenJoining()
testBadMongoUri()
transactionTimeoutTest()
testPrepareFormatExistingCluster(String
testSubscriptionDispatchRateDisabled()
testServerKeyStoreSSLContext(Set<String>
testStartPaused()
testStrictBookieIsolation()
testMaxMessageSizeWithChunking()
tester.stopServiceContainer(pulsarCluster);
testSyncListener()
testConfigFile.deleteOnExit();
testClear()
testPhaseOneLoopTimeConfiguration()
testUpdateTenantCmdWithAdminRolesAndAllowedClustersFlags()
testAddAckedPartitionToTxn()
testRetryTopicException()
testConvertAvroString()
testWithSeveralIncompletePaths(String
testSocks5()
testSelectOneSingleHost()
produceAndConsume(producer,
testDeleteRequest()
testExpireMessageWithNonExistTopicAndNonExistSub()
testPartitionedTopicInterceptor()
partialPreCommitTest()
testAckWithTransactionReduceUnackCountNotInPendingAcks()
testAcceptIgnoresNonMatching()
testInvalidBundleErrorResponse()
@BeforeClass(alwaysRun
testCompatibility(payload,
testNukeExistingClusterWithBookies(false);
assertEquals(headerRead.getBlockLength(),
testUnblockStuckSubscription()
testAdminTerminatePartitionedTopic()
testFirstRange()
readModifyUpdateOrCreate(String
testOffsetBackingStore(true);
primitiveTypeConsumerProducerUndefinedCompatible()
testPublishAndConsume(Supplier<String>
testMTProduceConsumeRGUsageNonPersistentTopicNamesSameTenant()
testTriggerBacklogQuotaWithReader()
testSetMetadataServiceUriBookkeeperMetadataServiceUri()
testOpEntryAdd_toString_doesNotThrowNPE(){
testHdfsSink()
testCreatePartitions()
testBatchReceive(String
AtomicLong(0);
testDisableLedgerReplication(String
ImmediateTriggererTest()
markDeleteGreaterThanLastConfirmedEntry()
testModularLoadManagerRemoveInactiveBundleFromLoadData()
testListVersionsCmd()
Assert.assertNull(msg,
testSubscriptionDispatchRatePolicyOverwrittenNamespaceLevel()
testUpdateIfLeaderFunctionWithCompaction()
testEmptySchema()
testBulkRetry()
testSetPersistencePolicies()
testCustomKubernetesDownloadCommandsWithDownloadDirectoryDefined()
testContainsStickyKeyHashes(boolean
testNukeExistingClusterWithBookies(boolean
.isAckReceiptEnabled(true)
testGlobalZookeeper()
testDrain();
testTopicCloseFencingTimeout()
testDeleteOffloadedPartitionedTopic(Supplier<String>
test](https://github.com/apache/pulsar/blob/master/tests/integration/src/test/java/org/apache/pulsar/tests/integration/io/sources/debezium/DebeziumOracleDbSourceTester.java)
testPauseAndResumeWithUnloading()
testSendMsgFailWithCompaction()
testDecodeFailed()
testSendAndReceiveWithBatching(String
testProxyAdditionalServlet()
testUnackedBlockAtBatch(int
testUpdate()
testPolicyOverwrittenByNamespaceLevel()
testAckWithIndividualAckMode(CommandSubscribe.SubType
testBlockBrokerDispatching()
internalConfigurationRetroCompatibility()
testNukeExistingClusterWithWritableBookies(String
testPackagesOperationsWithoutUploadingPackages()
testRebalance()
testGetPolicyTimeout()
testCompatibilityMode()
testReaderChunkingConfiguration()
testDownloadCmd()
testFactoryWrap()
[#12622](https://github.com/apache/pulsar/pull/12622)
testEndTopicNotExist()
testReadData()
testMessageRedelivery()
testNullKeyValueProperty()
testMixCliAndConfigFile(
testGoFunctionLocalRun()
testAddRg.setDispatchRateInBytes(-1L);
testAddWithinTickTime()
testFindBrokerWithListenerName()
testBatchReceiveAndRedeliveryPartitionedTopic(BatchReceivePolicy
testReplicatorProducerName()
testFilterEntriesForConsumerOfTxnMsgAbort()
testPartitionedTopicMessagingWithKeyShared(Supplier<String>
testMessageExpiryWithTimestampNonRecoverableException()
kvBytesSchemaTest()
testLedgerReachMaximumRolloverTime()
testCredentialProvider()
testSetAckSetByIndex(int
testPublishFunction(Runtime.JAVA);
nackMessageTest()
testChunksEnqueueFailed()
testPartitionedStatsAggregationByProducerNamePerPartition(String
updateProp(zookeeperServer,
testBatchReceiveTimeoutTask(boolean
testLookUpWithException()
testLazyCursorLedgerCreationForSubscriptionCreation()
testConsumerStatsOutput()
testGetAppliedAdvertised()
testActionsOneAction()
testNukeExistingClusterWithAllBookies(String
testCustomPartitionedProducer()
testTransactionPerf()
testManyFailures()
testExitOnError()
testAsMap()
testAckWithMoreThanNoneMessageIds()
namespace_topicNameNullDomain()
testId.getAndIncrement();
simpleRead()
testDLogConfiguration()
validValidateTest()
commitTxnTest()
testSplitBundles()
testResourceGroupDeleteNonExistent()
testGetSetPublishRate()
testTopicRetentionPolicySetInManagedLedgerConfig()
testBatchIndexAckDisabled(String
testDecodeByteBuf()
testOrderingKeyWithHashRangeAutoSplitStickyKeyConsumerSelector(boolean
testReadAndWrite()
testMaxUnloadBundleNumPerShedding(){
testAutoProduceSchemaAlwaysCompatible()
shouldAllBrokersKnowTheLeader()
testRemoveMaxConsumers()
testBytesSchemaDeserialize()
testLoadEventListenerWithBlankListerClass()
testChangeZKPath2()
testJavaExclamationTopicPatternFunction()
consumeEncryptedMessages()
connectDataPojoListTest()
testHandle()
testLoadYamlConfig()
testMaxSameAddressConsumers()
testTableViewUpdatePartitions()
testExtendedSinkContext()
testLoadAdditionalServlet()
testRackUpdate()
test_group_broker_client_api()
testDebeziumPostgreSqlSource()
testAdvertised()
checkAdmin()
testTransactionCoordinatorMetrics()
testPulsarSinkLocalRun(jarFilePathUrl);
testPut(String
httpEndpoint()
testUpdateTransactionCoordinatorNumber()
testBothExecutorProvidersMustBeSpecified()
testUseAutoConsumeWithSchemalessTopic(SchemaType
testBatchReceiveRedeliveryAddEpoch(boolean
testSyncProducerAndConsumer()
testSink(CassandraSinkTester.createTester(false),
testReadWriteLargeDataOperations()
testGetNonExistTenantCmd()
shouldAllowIPv6AddressNumeric()
testListTopicShouldNotShowNonPersistentTopics()
testDebeziumMySqlConnect(
testNs.getLocalName());
testConfigurationConverting()
testLoadBase64FromPulsarProperties()
testBacklogQuotaDefaultLimitPrecedence()
testRehashing()
testNukeExistingClusterWithReadonlyBookies(String
testNoNICSpeed()
testGetLastMessageIdWhenTopicWithoutData()
testMinRequestCredits()
testPartitionedTopicAutoCreationForbiddenDuringNamespaceDeletion()
testCreateClientConfiguration()
testWarnLevelException()
testGetProperties()
sendKeyIgnoreMultipleFields()
testKeyValueSerializeRecordToJsonExpandingValue(SchemaType
testMultiAddresses(binaryLookupService);
testWriteGenericRecordsEOS()
sslConfigTest()
testKeyValueHashAndCanonicalOutput()
testAvroSchemaProducerConsumerWithSpecifiedReaderAndWriter()
testDispatchRateLimiterPerSubscriptionInMsgOnlyBrokerLevel()
testResourceGroupPublishRateLimit()
testExamineMessage()
testSourceProperty()
testResourceGranularities(1.001,
test_group_transaction()
testIvalidKeys()
testClientCreationWithEmptyProxyPropertyInConfFile()
testMultiTopicFunction()
basicTest(String
runMainNoArguments()
testSameSubscriptionNameForDurableAndNonDurableSubscription()
testPerTopicExpiredStat()
testMinMaxResource(1.00,
testAvroFunctionLocalRun()
testUpdateWorkerDrainMap()
testCompatibilityAsync(topic,
testSetMetadataServiceUriMetadataStoreUrl()
shouldNotAddPrometheusAnnotationIfMetricsPortIsSetToEmpty()
testNullPropertyValue()
testBrokerDeleteInactivePartitionedTopicMetadataEnabled()
functionsWorkerService.start(new
testLoadsOnlyOnce()
testSchemaCompatibilityCmdWithNamespaceLevel()
testPulsarSinkStats(jarFilePathUrl);
LinkedList<>();
navigateChildrenTest(String
testBadConfig(null,
test_invalid_basic_auth(self):
testParseMetrics()
testNamespace).contains(topicName2.toString()));
testPulsarSqlAuth()
normalConsumer.receive(RECEIVE_TIMEOUT_MEDIUM_MILLIS,
anErrorShouldBeThrowBeforeLeaderElected()
testReaderReconnectAndReadBatchMessages(Supplier<String>
testFindNewestMatchingAfterLedgerRollover()
testBatchWrite(String
readModifyUpdateBadVersionRetry()
testPulsarSinkDLQ()
testAddMessageWithDeliverAtTimeAfterNowAfterTickTimeFrequencyWithStrict()
testMaxConsumersPerSubscription()
tester.getConfiguration();
testMergeDifferentCleanupSubscription()
testFailedUpdatePartitionedTopic()
testProducerBuilderImplWhenDefaultCryptoKeyReaderIsNullMap()
timeSchemaTest()
testConnectionAutoReleaseMultiTopic()
this.activeCount.get()
testCertRefreshForPulsarAdmin()
testTransactionMetaStoreAssignAndFailover()
testNs.getLocalName()));
testLocalBrokerDataDeserialization()
testConvertAvroDouble()
tester.produceMessage(numMessages,
testAutoSubscribePatterConsumerFromBrokerWatcher()
testCheckAuthForMultipleTopics()
test_invalid_chunking_config(self):
testAreExceptionsPresentInChain()
testBacklogAndRetentionCheck()
testAvroSchemaUserDefinedReadAndWriter()
testTopicToIndexName()
test()
testGenericRecord()
testRQCalcProportionalIncrementTest()
testReadWriteOperationsWithSeparatedBkCluster()
testMetricsStatsThatTriggeredByMaxSize()
electedShouldBeTrue()
testNamespaceBundleOwnershipListener()
testIndexDelete()
testSyncFlushBatchMessagesPartitionedTopic(true);
oldPoliciesCompatibleTest()
testSchemaCompatibilityStrategyCmdWithNamespaceLevel()
testGenerateSystemMetricsWithoutCustomizedLabel()
testConsumerGetBrokerEntryMetadataForIndividualMessage()
testTopicMaxMessageSizeApi()
testRecoverWhenDeleteFromCursor(TxnLogBufferedWriterConfig
testDuplicationSnapshot()
testKeyValueSerializeNoValue(SchemaType
test_group_broker_group_3()
topicDoesNotExistTest()
testExpireMessageWithNonExistTopicAndExistSub()
testLazyRecoverCursor()
testGetLastDisconnectedTimestampForPartitionedTopic()
testFlush()
testPendingWaitingLookupRequestSemaphore()
int64SchemaTest()
testProxyRoleCantDeleteResourceGroups()
testTransactionMarkerDelete()
testPulsarSinkLocalRun(null);
testRemove()
testMergeDifferentTransformFunction()
testGetTransactionPendingAckStats()
testPulsarSinkStats(jarFilePathUrl,
namespace_members()
testDeleteUnloadedOffloadedTopic(Supplier<String>
test_client_reference_deleted(self):
testMultiRolesAuthzWithSingleRole()
testGetPendingAckStats(String
testBrokerWithSingleBundle()
callWithNoRetries()
testOpenDbWithConfigFile()
testProducerByAuthenticationTls()
shouldAllowIPv6Address()
testConfigCheck()
testSharedInstance()
test(NamespaceBundle
testBootstrapProtocolHandler()
testDeleteTopicThenDeletePendingAckManagedLedger()
testImmediateBatchAckingTracker(boolean
testProducerCloseMemoryRelease()
testSendTxnMessageTimeout()
testMessage.set_testenum(::proto::TestEnum::FAILOVER);
handleConnectWithServiceNotReady()
testPulsarSinkStatsMultipleInstances()
testFlowCountForMultiTopics()
testPartitionedLookupSortByBroker()
testResolveLedgerManagerFactoryUnknownScheme()
testListenerNotInvokedWhenSubscriptionCreated()
testReadWriteOperations()
testReadEntriesOrWaitWithMaxSize()
testGetConsumer()
testConsumerBuilderImplDLQForRetry()
testMigrationWithAllOptions()
testPublishRateLimiterMonitor()
instantSchemaTest()
testEndTxnWhenCommittingOrAborting()
nullValueBytesSchemaTest(String
testParseRetainOrderingField()
testRemoveUpTo()
testResourceGroupTwo.setPublishRateInBytes(10000);
testMultiIpv6Uri()
testFailures()
testFunction(N),
testHealthCheckTopicNotCompacted()
testRecordFunction()
test::consumerConfigOfReader.clone();
testAutoCreatedSchema(String
testLocking(String
simpleConcurrentReadNoMatch()
testNullValueFailure()
shouldSupportCancellingReadNextAsync()
testRecursionNumberOfFindStartPointLoop()
testConsumerBuilderImplWhenDefaultCryptoKeyReaderIsNullMap()
testDefaultSerDe(PulsarSourceConfig
getFreePort();
tester.startServiceContainer(pulsarCluster);
testTransactionBufferAppendMarkerWriteFailState()
testTopicPriorityLevel()
testPartitionedTopicStatsByNullProducerName()
testDownloadFunctionByPath()
testWebSocket(url);
testMTProduceConsumeRGUsagePersistentTopicNamesDifferentTenant()
testNonPartitionedTopicMessagingWithFailover(Supplier<String>
testIncr()
testBadConfig(String
testDifferentLevelPolicyPriority()
toCompletableFuture_shouldRequireNonNullArgument()
testConcurrentWriteBrokerData()
test_group_shade()
testManagedLedgerWithPlacementPolicyInCustomMetadata()
testReaderHasMessageAvailable()
testPendingScheduleTriggerTaskCount()
shouldResetStateBeforeReusing()
testNonPartitionedTopicMessagingWithShared(Supplier<String>
CronTriggererTest()
testTopicLevelMetrics()
testConsumerBuilderImplWhenDefaultCryptoKeyReaderIsNullString()
getTopicIntervalStateIncludeSchemaStoreLedger()
testFunction(int
testReplicateDeduplicationStatusPolicies()
testEmptyStringAsExtractionDirectory()
namespace_vargEquivalentToParse()
testResetMethodOfOneBundles()
testConvertBackFidelity()
testNonPartitionedTopicMessagingWithExclusive(Supplier<String>
testStartFunctionWithPackageUrl()
testDelayedTransactionMessages()
testMainProcess(int
testInterleavedMessagesOnKeySharedSubscription()
testAddBrokerEntryMetadata()
ClientBuilder.newClient(new
testDurableSubscribe()
testDynamicConfigurationTopicAutoCreationDisable()
testGetBytesOffsetZeroDifferentLen()
mock(ManagedLedger.class);
testMetadataStoreStats()
testSuperUserCanUpdateScaleOfTransactionCoordinators()
testSimple()
testProduceConsumeUsageOnRG(NonPersistentTopicNamesDifferentTenantAndNsRGs);
testClose()
testConfigFile.delete();
testTopicLevelInActiveTopicApi()
closeAll(String
any(),
testReadEmptyEntryList()
testResourceGroupOneUpdate.setPublishRateInBytes(1000L);
testWindowFunction("sliding",
namespace_v2Namespace()
testFilterEntriesForConsumerOfDelayedMsg()
testAddRg.setPublishRateInBytes(Long.valueOf(MESSAGE_SIZE));
testFlushInPartitionedProducer(bool
testSslDisableCertificateValidation()
testUnsetProperties()
dateSchemaTest()
ClientConfig().register(LoggingFeature.class));
namespace_nullTenant2()
testPythonExclamationTopicPatternFunction()
testPeekStickyKey()
testPreserveOriginalSchema(PulsarSourceConfig
EmbeddedChannel(new
testHasNICSpeed()
testDeleteOffloadedTopicExistsInBk(String
testInvalidateReadHandleWhenConsumed()
testSystemNamespaceNotCreateChangeEventsTopic()
testProduceConsumeUsageOnRG(PRODUCE_CONSUME_NON_PERSISTENT_TOPIC);
testOrderedRedelivery(boolean
testGet(String
testPublishFunction(Runtime.PYTHON);
testProduceConsumeUsageOnRG(topicStrings);
testLookupAnotherCluster()
SimpleLoadManagerImpl(pulsar1);
testNonPersistentMaxConsumerOnSub()
testMultiAddresses(*httpLookupServicePtr);
testCmdSinkCliMissingArgs(
testLoadSheddingWithNamespaceIsolationPolicies()
test_client_logger(self):
map.put("createIndexIfNeeded",
testPartitionedProducerConsumer(bool
testDispatchRate()
testAdvertisedListeners()
testFilterEntriesForConsumerOfServerOnlyMarker()
testMaxTenant()
testMaxConsumersFailover()
testCounterDoesNotAutoReset(String
test_group_shade_run()
connectDataPrimitivesTest()
testPutVersionErrors(String
testHandlerReconnectionPartitionProducers(bool
testFilterEntriesForConsumerOfNullElement()
testInactiveTopicApplied()
testPubRateOnNonPersistent()
getlookupdsTest()
testTopicLevelOffloadNonPartitioned()
c1.receive(RECEIVE_TIMEOUT_MEDIUM_MILLIS,
testNegativeAcksWithBackoff(boolean
testOffloadTaskCancelled()
testMetadataResolver()
testParseConfigs()
txnAckTestBatchAndSharedSub()
testNonPartitionedTopic(boolean
testBytes2StringNotUTF8()
testPrimitiveSerializeRecordToJsonExpandingValue()
testFileSystemOffloadDeletePath()
testCryptoWithChunking()
testSpecifiedPositionsLessThan1()
LinkedBlockingQueue<>());
testListenerName()
testGetSchemaAutoUpdateCompatibilityStrategy()
testEncryption()
testConsumerBacklogEvictionTimeQuotaWithEmptyLedger()
testBrokerAllowAutoUpdateSchemaDisabled(SchemaCompatibilityStrategy
tester.prepareSource();
testResolveLedgerManagerFactoryUnknownLedgerManagerFactory()
testMTProduceConsumeRGUsage()
testOpenSearchSinkRawData()
testSchema()
testThread.join();
testNamespaceSplitBundleWithInvalidAlgorithm()
testPojoAsAvroAndJsonConversionToConnectData(Long.MAX_VALUE);
testFilteredMsgCount()
testCrashBrokerWithoutCursorLedgerLeak()
testAuthDataRefresh(boolean
testGetMetadataCmd()
testDispatchRateLimiterPerSubscriptionInByteOnlyBrokerLevel()
produceTxnMessageOrderTest()
testMaxSubscriptionsPerTopicApi()
testAutoCreateNonPersistentPartitionsWhenThePartitionedTopicExists()
stringSchemaTest()
testAutoTopicCreationDisableIfNonPartitionedTopicAlreadyExist()
testAutoCreationDisabled()
testPulsarSourceStatsWithUrl()
testCustomAck()
testInitialSubscriptionCreationWithAutoCreationDisable()
AtomicInteger(0);
callWithSomeRetries()
concurrentInsertions()
newNativeAvroProducerForMessageSchemaOnTopicInitialWithNoSchema()
produceAndAbortTest()
addSubscriptionPropertiesTest(SubscriptionMode
testBatchReceiveAsyncCanBeCancelled()
testEncodeAndDecodeKeyValues(Schema<KeyValue<Foo,
testCleanFailedUnloadTopic()
testGetTenantCmd()
test.runPerformanceTest(arguments);
testGetReplicatedSubscriptionStatus()
testConsumersAfterMarkDelete()
testMultiTopicsConsumerImplPause()
testOffload(boolean
testTimeoutTrackerMultiThreading()
testProducerBuilderImplWhenDefaultCryptoKeyReaderIsEmptyMap()
testPublishOffloadAndConsumeDeletionLag(String
testProducerTimeoutOnPMR()
testNamespaceTTL(boolean
testStartReadOperationOnLedgerWithEmptyLedgers()
testUpdateSourceSuccessWithPackageName()
testRemoveSubscriptionDispatchRate()
testSendMsgFail(false);
testControlledClusterFailoverSwitch()
keyValueNullSeparatedTest(String
testProduceWithRestThenConsumeWithClient()
testEnsureCounterIsNotResetWithContainerNodes(String
testLoadArguments()
testResourceGroupTwo.setDispatchRateInBytes(10000L);
testKeyValueSchemaSEPARATED()
newConsumerWithSchemaOnExistingTopicWithoutSchema()
updateRanking.invoke(pulsarServices[i].getLoadManager().get());
testOpportunisticStriping()
testSchemaValidationEnforced(String
testTTLPoliciesUpdate()
testGetNextCounterRetry(String
testSourceConfig.getConfigs();
testTakeSnapshot()
testReadNonExistentData()
testKubeProxyURI()
testDebeziumOracleDbSource()
testClientWithConfig(config);
testDeleteCompareWithGuava()
testManageLedgerWriteFailState(TxnLogBufferedWriterConfig
testAdminWithTrustCert()
shouldFailHandleGetOrCreateSchema()
testNamespaceSplitBundleWithSpecifiedPositionsDivideAlgorithm()
test_group_schema()
testReplicatedSubscriptionRestApi1()
testGetPositionStatsInPendingAckStatsFroBatch()
testProducerFailureOnEncryptionRequiredOnBroker()
testForSchema(Schema<?>
testScanValues()
testJavaConstructorWithAbsolutDownloadDirectoryDefined()
testGetSinkConfig()
testSendTxnAckMessageToDLQ()
testGetClusterInstanceIdIfClusterNotInitialized(String
testServicePortsEmpty()
testTopicPolicyInitialValueWithNamespaceAlreadyLoaded()
testGetChildrenWatch()
testInterceptAck()
testGetDispatchRateApplied()
gcsKeysTest()
testSetRackInfoAndAffinityGroupDuringProduce()
testSubscriptionPropertiesStats(SubscriptionMode
testDirtyLedger()
testRateLimit(nonPersistentTopicString);
testMultipleInstances()
namespace_persistentTopic()
testCompactionWithMarker()
createPartitionedTopicTest()
testExternalService()
testTerminate()
simpleAnalyzeBacklogTestWithBatching()
testAcceptSendsNotificationAndRemembersTopic()
asyncResponseFilterTest()
testHttpLookupRedirect()
testBrokerBytesRateLimitingReceiveAllMessagesAfterThrottling(SubscriptionType
testComplexOutputType(PulsarSourceConfig
testExists()
test_avro_required_default(self):
toCompletableFuture_shouldCompleteSuccessfully_channelFutureCompletedBefore()
testRecoverSequenceId(boolean
testBuildAutoClusterFailoverInstance()
testAckWithNotIndividualAckMode(CommandSubscribe.SubType
testDebeziumMsSqlConnect(String
testGetOriginalException()
testOperationNamespaceMessageTTL()
batchDisableAndSharedSubTest()
testConsumerBacklogEvictionTimeQuotaWithPartEviction()
testAvroSchemaFunction()
testAddRg.setDispatchRateInMsgs(400000);
testArgs()
testJavaConstructorWithoutWebServiceUrlAndExposePulsarAdminClientEnabled()
testMaxReadPositionForNormalPublish()
testGetSchemaValidationEnforcedApplied()
testChainDoFilter()
testJvmDirectMemoryUsedMetric()
testMultiTopic()
testProxy(pulsarCluster.getProxy().getPlainTextServiceUrl(),
testConsumerDedup(boolean
testAutoCreatePartitionedTopicThatNameIncludePartition()
testBadSyncType()
simpleConcurrentReadMissingBoth()
admin.namespaces().setNamespaceMessageTTL("prop-xyz/ns1",
testGenericObjectRemoveFiledFunctionKeyValue()
testPulsarSinkStats(fileServer.getUrl("/pulsar-io-data-generator.nar"));
unsubscribeTest()
testNullValueIgnore()
testOperationSubscriptionDispatchRate()
testElasticSearch7Sink(boolean
txnCumulativeAckTest(boolean
testMultiTopicSetSchemaProviderWithKeyValue()
testProducerTimeoutMemoryRelease()
testNewChannelInitializersSuccess()
testUpdateDynamicCacheConfigurationWithZkWatch()
testReduceUnnecessaryExpansions()
testWriteGenericRecordsAtMostOnce()
TestGetAllDynamicConfigurations()
testDeleteAndCleanZkNode()
subscriptionModePersistedTest()
testRateLimit()
testE2EPulsarFunctionWithNarUrl()
testPropertyRead()
testTransactionCoordinatorRateMetrics()
testCheckInactiveSubscriptions()
