kTableShouldLogOnOutOfOrder()
testMapValuesWithValueMapperWithKeyAndWithMaterialized():
shouldAddAndRemovePendingTaskToRecycle()
shouldBackwardFetchForKeyAndRecordFetchMetric()
testShutdownApplication(2);
testPartitionMetadataFileCreatedAfterPreviousRequestWithoutIds():
testSupportedAlgorithms(
testForwardingTimeoutAfterRetry():
testDeleteTopicsRequestNumTopics()
testPartitionFilterForUpperBound():
shouldAggregateWindowedWithGrace()
shouldMatchStreamTime()
shouldGetEstimatedMemoryOfTableReaders()
testDistinctControllerAndAdvertisedListenersAllowedForKRaftBroker():
testSendToBlackedOutDestination():
shouldPutFetchRangeFromCacheForNullKeyFrom()
testLogCloseHandlers():
shouldBackOffTaskAndEmitDataWithinSameTopology()
testStickyTaskAssignorLargePartitionCount()
testPreferredReplicaImbalanceMetricOnConcurrentTopicDeletion():
shouldEncodeAndDecodeVersion9()
shouldReturnZeroWhenAllStandbyTasksWereSuccessfullyAssigned()
test_restart_connector_and_tasks_failed_task(self,
shouldThrowKafkaExceptionOnAssignorsWithSameName()
shouldCheckStateUpdater()
testSendRecordsTopicCreateRetriesMidway()
testCleansCombinedCompactAndDeleteTopic(codec:
testInvalidValueSize()
testAuthorizeByResourceTypeDenyTakesPrecedence():
shouldGetTasksFromPausedTasks()
testConsumerGroupStatesFromString(quorum:
testGetNonLeaderFollowersByFetchOffsetDescending()
testSendWithTopicDeletionMidWay():
testReplicaDownResponse(quorum:
testTopicIdsField()
testAlterDefaultTopicConfig(quorum:
shouldNotUseCommitFlagForHashcodeAndEquals()
shouldOnlyCheckpointStateWithBigAdvanceIfNotEnforced()
testApiVersionsRequestThroughControlPlaneListener():
testAwaitMessagesAfterAllRemoved()
testUrlFullPath()
shouldSetRepartitionTopicPartitionCountFromUpstreamExternalSourceTopic()
testStoreConfig()
testAlterUserScramCredentials()
testConfig.checkInstances(ClassTestConfig.RESTRICTED_CLASS,
testDescribeDoesNotFailWhenListingReassignmentIsUnauthorized(quorum:
testCreateTopicsWithPolicy()
testTopicCreationWithMetadataContextPassPrincipal():
conn.reconfigure(Collections.emptyMap()));
testInvalidKeySizePartial()
testAPIsWithInvalidArgs()
shouldSkipEntriesWhereValueHasBeenEvictedFromCacheReverseRange()
testPollRedeliveryWithConsumerRebalance()
testRebuildTimeIndexForOldMessages():
testLogRecoveryMetrics():
testUrlFile()
testBatchedListConsumerGroupOffsets()
fetcher.offsetsForTimes(offsetsToSearch,
listSerdeShouldRoundtripNonPrimitiveInputWithNullEntries()
shouldImmediatelyAddSingleStatelessTaskToRestoredTasks()
testTaskClass()
shouldThrowWhenTopicDescriptionsDoNotContainTopicDuringValidation()
converter.toConnectData(TOPIC,
pool.allocate(1025,
testQuotaMetric():
shouldReturnSameResultsForSingleKeyFetchAndEqualKeyRangeFetch()
testListSizeValidatorToString()
testFetchOffsetByTimestampForMaxTimestampWithUnorderedTimestamps():
testRollSegmentErrorWhenNextOffsetIsIllegal():
shouldThrowNullPointerExceptionOnFindSessionsNullFromKey()
shouldThrowErrorIfWindowSizeSetInConfigsAndConstructor()
testCreatesProperZkConfigWhenSaslDisabled():
shouldGetBackwardAllAcrossStores()
testSingleQuorumVoterConnections()
connectorsResource.restartTask(CONNECTOR_NAME,
shouldAddNumImmutableMemTablesMetric()
testCreatePermissionMetadataRequestAutoCreate(quorum:
testableSelector.waitForOperations(SelectorOperation.Poll,
testLeftJoinDuplicatesWithFixDisabled()
testDivergingEpoch():
WorkerConfig(WorkerConfig.baseConfigDef(),
testConnectorTransactionBoundaryValidationOnUnsupportedConnector()
testRaftShouldAlwaysForwardRenewTokenRequest():
testResizeThreadPool(50,
testMultipleControllerListenerNamesMapToPlaintextByDefaultForKRaft():
shouldThrowErrorIfDeserialisersConflictInConstructorAndConfig()
testListKeyDeserializerNoArgConstructorsWithClassObjects()
testCandidateToAnyStateLowerEpoch()
shouldNotContainChangelogsForStatelessTasks()
shouldReturnUnknownTimestampIfInvalidMetadata()
shouldInstantiateFromListOfClassTypes()
testElectUncleanLeaders(boolean
testAutoCommitAsyncWithUserAssignedType()
testCorrectlySuppressResultsUsingSuppressedUntilWindowClosesBySession():
Whitebox.invokeMethod(workerTask,
testDescribeTopicsWithIds():
testResetWhenInternalTopicsAreSpecified()
testRearrangement()
slidingWindowedCogroupedZeroArgCountShouldPreserveTopologyStructure()
()
RepartitionTopicConfig("foo
testString.getBytes(StandardCharsets.UTF_8);
testFatalMetadataErrorDuringLogLoading()
shouldLoadMissingFileAsEmptyPosition()
testHandleResponseRequiresOneKey()
testElectionAfterLeaderNetworkPartition(QuorumConfig
testCleanShutdownWithZkUnavailable():
testInvalidEntityTypes()
testMkdirs()
testListTransactions()
testFenceZombiesInvalidSignature()
builder.addSink("sink",
Materialized.as("test")));
ConfigDef().define("name",
TestUtils.waitUntilControllerElected(zkClient)).get.asInstanceOf[KafkaServer]
testSplitPath()
testKeyMissingValue():
testInitializeAsLeader()
testAcceptsLargeNodeIdForRaftBasedCase():
testAuthorizationFailure()
testApiScope(apiScope:
testOutput(0).readValuesToList().asScala)
shouldRecordTxCommitTime()
testStarGlob()
testRebalanceTimesOutWhenSyncRequestIsNotReceivedFromLeaders():
shouldEncodeAndDecodeVersion8()
shouldAddBlockCacheUsageMetric()
shouldIterateBackwardAcrossWindows()
testDefaultMetadataLogDir():
testPerformAssignmentShouldValidateCooperativeAssignment()
shouldReportMultipleMisconfigurationsForSameTopic()
shouldNotAllowNullValueJoinerWithKeyOnJoinWithStreamJoined()
testEmptySections()
shouldDistributeStandbyReplicasOverMultipleClientTags()
testDefaultPartitionAssignor()
TestUtils.createBrokerConfig(brokerId,
testNetWriteBufferResize(Args
testIsInternal(quorum:
testUnsupportedTlsVersion(Args
assertThrows(classOf[IllegalStateException],
builder.addGlobalStore(
testFindConsumerGroups()
testNewSegmentsAfterRoll():
JaasContext.loadServerContext(new
testInvalidEncryptionAlgorithm()
testExactlyOnceSourceSupportValidationWhenExactlyOnceNotEnabledOnWorker()
Map(RequestPercentageProp
testDescribeProducers(topicPartition,
testInitializeObserverNoPreviousState()
testOuterJoinDuplicatesWithoutFix(final
shouldAddAndRemovePendingTaskToCloseDirty()
testMaxQuotaConsumerMoreThanNumExpectedMaxCapacityMembers()
shouldResizeCacheAfterThreadReplacement()
Worker.adminConfigs(new
testNextCheckTimeNs()
shouldNotBeEqualIfDifferStateStoreNames()
serde.deserializer()));
test_restart_failed_connector(self,
testIdempotentProducerNoIdempotentWriteAclInInitProducerId(quorum:
testMetricsForBuiltInMetricsVersionLatest();
testEarlyStartListeners():
testDoubleDotDot()
testCorrectlyFlatTransformValuesInRecordsWithKey():
assertThrows(AuthenticationException.class,
testOutput(1).readValuesToList().asScala)
testGenerateResultWithConfigValuesAllUsingConfigKeysAndWithNoErrors()
testUpgradeFeaturesFailure():
shouldEqualPosition()
testFetchSnapshotRequestWithInvalidPosition()
builder.addProcessor(null,
ofEpochMilli(10)));
testPemKeyStoreConfigWithKeyPassword()
testNoAutoStart()
testMetadataWithPartitionOutOfRange(boolean
shouldCreateActiveTaskDuringAssignment()
shouldThrowOnCurrentStreamTime()
testTopicIdUpgradeAfterReassigningPartitions():
testListTransactionsAuthorization():
ConsoleProducer.ProducerConfig(invalidArgs))
testKeyValuesToMapWithNull()
shouldHandleMultipleRemovedTasksFromStateUpdater()
testListConsumerGroupOffsetsOptionsWithBatchedApi()
shouldNotOverrideUserConfigCommitIntervalMsIfExactlyOnceV2Enabled()
coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE)));
testUngracefulRemoteCloseDuringHandshakeRead(Args
testQuotaConfigChange(new
shouldBeInitializedWithDefaultSerde()
testDefaultBrokerRecord()
SchemaBuilder.bytes().defaultValue("a
assertThrows(AssertionError.class,
shouldNotGetStoreWhenWhenNotRunningOrRebalancing()
testDescribeTransactionsStartOffsetOrProducerIdRequired()
testPollMetadata()
testMetadataClusterClusterAuthorizedOperations(version.toShort,
testUnauthorizedHandleListPartitionReassignments():
shouldCorrectlyHandleAvgRecordingsWithZeroSumAndCount()
shouldCopy()
testHasValidSession()
shouldLogAndMeasureExpiredRecords()
testCommitOffsetIllegalGenerationWithResetGeneration()
testConfigureWithAccessTokenFile()
testDeltaToFollowerCompletesProduce():
shouldFetchSessionForTimeRange()
testDeferredIsQueuedAfterTriggering()
cachingStore.put(bytesKey("a"),
getAllTopicMetadataShouldNotCreateTopicOrReturnUnknownTopicPartition():
testChannelWokenUpIfLingerTimeoutReachedWithoutAppend()
testV12WithDownConversionDisabled():
testOffsetFetchTopicDescribe(quorum:
testRestartConnectorNotFound()
shouldThrowOnForward()
testInitializeFailure()
testSnapshotAfterMetadataVersionChangeWhenStarting():
testErrorWithCreationInZk(Errors.INVALID_REPLICATION_FACTOR,
testForwardableApi(ApiKeys.ALTER_PARTITION_REASSIGNMENTS,
bytesValue("anyValue")));
testJoinPrepareWithDisableAutoCommit()
windowStore.fetch(1,
testUniqueFieldOverflow()
testDescribeClusterRequestVersions()
testRaftShouldAlwaysForwardCreateTopicsRequest():
testLoadingLogDeletesProducerStateSnapshotsPastLogEndOffset():
testReport(2);
testAlterIsrIsClusterAction()
testBuildRequestWithoutFilters()
table.filterNot(null));
testApiVersionsRequestValidationV0ThroughControllerListener():
testCreateWithNoAllowedOverridesForNonePolicy()
timeWindowAnonymousStoreTypeMaterializedCountShouldPreserveTopologyStructure()
testVerifyTaskGeneration()
testImplementation(libs.kafkaStreams_0100)
testReassignmentCompletionDuringPartialUpgrade():
shouldNotAbortRecordRepeatedly()
testLog4jIncrementalAlterConfigsRequestWithKRaft():
test_get_offset_shell_topic_pattern(self,
testCreateTopicDoesNotRetryThrottlingQuotaExceededException():
test_broker_rolling_bounce(self,
testV1FetchFromConsumer(quorum:
testUpdateLogStartOffsetWithMissingSnapshot():
testTopicIdWithZeroUuid()
testRetriableErrors()
shouldThrowTimeoutExceptionWhenFuturesNeverCompleteDuringCleanUp()
ByteUtils.readVarlong(buf));
testFetchSnapshotSentToKRaft():
testNotEnoughBrokers()
testHasRemoteLeader()
testGetConnectorConfigDef()
testRange("until",
fullConstructorShouldSetAllExpectedAttributes()
testNonStringToBytes()
testElectionAfterLeaderNetworkPartitionQuorumSizeFiveAndThreeObservers()
testOverriddenConfigsAsLoggableString():
testFile(new
testStringToBytes()
testLogAppend():
testImplementation(libs.jfreechart)
test_authorizer(self,
testIncompatibilitiesDueToIncompatibleFeature():
testWriteTo()
test_static_consumer_persisted_after_rejoin(self,
shouldCloseAndReviveUncorruptedTasksWhenTimeoutExceptionThrownFromCommitWithALOS()
testRejectsNegativeNodeIdForZkBasedCaseWithAutoGenDisabled():
test_many_brokers_bounce(self,
testCreateClusterInvalidMetadataVersion():
testParseTopicPartitionNameForEmptyName():
compareImpact()
testDelayedLocalReadFromFollowerToHighWatermarkTimeout()
testIncompatibilitiesDueToAbsentFeature():
testClientInfoNode():
testSuccessfulFeatureUpgradeAndDowngrade():
testParseAssignment():
testMarkedDeletionTopicCreation():
testCreateWithAssignmentAndReplicationFactor():
shouldNotBeEqualIfDifferInHostInfo()
testUnknownConfigs()
testEnforcedIpConnectionRateQuotaUpdate():
testParseTopicPartitionNameForMissingTopic():
testSettingNameOnFilterProcessor():
shouldFailStopped()
testTruncateBelowHighWatermark()
bytesKey("anyTo"),
testPreprocessLegacyWithBrokerLoggerChanges():
windowStore.fetch("a",
testNonMonotonicEndOffsetUpdate()
shouldThrowExceptionWhenTopologyOptimizationOnAndOff()
testCanotDowngradeBefore3_3_IV0()
testEcdsaEncryptionAlgorithm()
testForwardableApi(ApiKeys.CREATE_DELEGATION_TOKEN,
testExecutorServiceShutdownWhenTerminationThrowsException()
ConsumerPerformance.ConsumerPerfConfig(args))
shouldAddThreadWhenRunning()
testReplicaPlacementAllServers(quorum:
testTranslateConfigSource(ConfigEntry.ConfigSource.DYNAMIC_BROKER_CONFIG,
testLocalLogRetentionProps():
testTransformCorrectlyRecords():
preserveHighestImpactRestartRequest()
shouldBeAbleToProvideInitialMetricValueToMetricsReporter()
converter.toConnectHeader(TOPIC,
testMetadataErrorCount()
testReleaseBufferNotMatchingBatchSize()
testFindCoordinatorWithTopicCreation(coordinatorType:
testPutRestartRequest(restartRequest);
testHasLateTransactionUpdatedAfterFullTruncation():
shouldAddEstimateTableReadersMemMetric()
loggingResource.setLevel("@root",
shouldUnassignTaskWhenNotProcessable()
testTruncationOnFetchSkippedIfPartitionRemoved():
testUnknownTopicPartitionForTxnOffsetTopic():
testClientAuthenticationRequestedNotProvided(Args
assertThrows(classOf[InvalidConfigurationException],
createKafkaApis(KAFKA_0_10_2_IV0).handleEndTxnRequest(null))
testProducerSnapshotsRecoveryAfterUncleanShutdown(ApiVersion.minSupportedFor(RecordVersion.V1).version)
testThrowTaskMigratedExceptionOnSubsequentFlush(final
testZkConfigRepository():
testAlterPartitionIsClusterAction()
(byte[])
testDescribeProducers()
testNoDescribeProduceOrConsumeWithoutTopicDescribeAcl(isIdempotenceEnabled:
shouldDescribeWithEmptyNamedTopology()
testFetchSnapshotResponsePartialData()
testAuthorizeByResourceTypeEnableAllowEveryOne(wrappedSimpleAuthorizer)
testClusterTests()
testReconfigureLogCleanerIoMaxBytesPerSecond():
testTopicPartitionFilterForPartitionRangeSpec(excludeInternal:
testUpdateDynamicThreadPool():
builder.addSink(null,
testRetryOnTopLevelError(Errors.CLUSTER_AUTHORIZATION_FAILED)
shouldNotAllowNullNamedOnProcessValuesWithStores()
testConfigureMissingPeriod()
shouldAllowForTopologiesToStartPaused()
testPemFilesWithoutClientKeyPassword(Args
testGetOffsetsByTimestamp():
shouldRemoveThread()
testFindStaleBrokers()
shouldThrowErrorIfWindowedInnerClassDeserialiserIsNotSet()
testExhaustive()
testRouteMessagesToAnonymousConsumers():
shouldMarkStreamStreamJoinAsSelfJoinTwoJoinsSameSource()
testElectionAfterLeaderGracefulShutdownQuorumSizeThree()
emptyBytesToConnect()
testControllerSwitchingIBP(KAFKA_3_1_IV0,
consumer.commitSync(Map(tp
testCreateTopics()
testFromValue()
testCompleteInDelayedFetchConsumerFetch():
shouldLogStateDirCleanerMessage()
MockTime()));
testDescribeClusterClusterAuthorizedOperations(version.toShort,
testDescribeStrictMatch():
testSwallowExceptionOnEosAbortTx(new
shouldThrowConfigExceptionWhenInvalidWindowInnerClassSerialiserSupplied()
testTruncateTo():
testInvalidAccessToken("this.isn't.valid",
testAllConsumerAreUnderMinQuota()
shouldIncludeThrottledReplicasForConsumerFetch():
testSessionExpiresAtTokenExpiryDespiteNoReauthIsSet()
testReport(false);
shouldIterateBackwardOverAllSegments()
testInvalidAlterPartitionReassignments(quorum:
testKRaftUpdateWithIBP():
testUnauthorizedProduceAndConsume(quorum:
testDeltaFollowerWithNoChange():
shouldFlushItemsToStoreOnEviction()
testMetadataWithNoTopicAccess(quorum:
shouldBackwardFindSessionRangeFromStoreAndRecordFetchMetric()
testIdempotentReject()
testNamedTopologiesCanBeStartedPaused()
testPartitionReassignmentToBrokerWithOfflineLogDir():
shouldDelegateToUnderlyingStoreWhenBackwardFetching()
testFindCoordinatorWithTopicCreation(CoordinatorType.TRANSACTION)
shouldAllowSameStoreNameToBeUsedByMultipleNamedTopologies()
shouldNotAllowNullValueJoinerWithKeyOnTableJoinWithJoiner()
testHandleLogDirFailureShouldRemoveDirAndData():
testGetEarliestOffsets(time:
testAppendConfig(props,
testStream.processValues((FixedKeyProcessorSupplier<?
processRestartRequestsDequeue()
testCompression(compression:
testPipeInputWithNullKey()
testVoterBecomeCandidateAfterFetchTimeout()
testTopicPartitionFilterForTopicNameList(excludeInternal:
shouldCloseWrappedStoreAfterErrorDuringCacheClose()
testFetchResponseWithInvalidSnapshotId()
shouldSwallowExceptionOnEosAbortTxInvalidEpoch()
SessionWindows.with(ofMillis(0)));
testDumpEmptyIndex():
shouldThrowExceptionSettingStreamsUncaughtExceptionHandlerNotInCreateState()
shouldReportMisconfigurationsOfCleanupPolicyForWindowedChangelogTopics()
provider.stores(StoreQueryParameters.fromNameAndType("timestamped-kv-store",
testArgumentParse("ips",
shouldReturnEmptyClientTagsMapByDefault()
testKRaftControllerThrottleTimeEnforced(
SaslExtensions(extensions)));
listSerdeShouldRoundtripLongPrimitiveInput()
testInfo.getTestMethod().map(Method::getName);
testRebalanceTimesOutWhenSyncRequestIsNotReceived():
testControllerListenerDefinedForKRaftBroker():
shouldQueryItemsInCacheAndStore()
testRoundTrip(message,
ScramCredentialUtils.credentialFromString("abc"));
testExtensionsWithEqualValuesAreUnique()
servers.find(_.config.brokerId
testEmptyBatchRetention(Args
testWriteControlBatchNotAllowedMagicV1(Args
testCandidateToUnattached()
testFromStringWithInvalidInput()
testEmptyRepository():
testPrefixScanPersistentTimestampedStoreWithCachingNoLoggingOldProcessor()
testInvalidBootstrapMetadata()
testReinitializeAfterAuthFailure():
testIterateOverSnapshotWhileDeletingAndReplacing()
testAllMessageRoundTripsFromVersion((short)
testSendRecordsTopicCreateRetries()
shouldNotAllowNullProcessValuesSupplierOnProcess()
testEmptyClusterPairsWithGloballyDisabledHeartbeats()
testEntrySet()
testGenerateResultWithConfigValuesAllUsingConfigKeysAndWithSomeErrors()
sslFactory.configure(clientSslConfig));
@SuppressWarnings("unchecked")
testNoRecords()
testExceedProducerIdLimitZk():
testDeleteTopicsVersions(quorum:
testDecompression(ByteBuffer.wrap(compressed),
testCreateSnapshotValidation()
testRetryDescribeTransactionsAfterNotCoordinatorError()
testValidateLogLevelConfigs():
testReadEndOffsetsUsingAdminThatFailsWithUnsupported()
testUniformBuiltInPartitioner()
adminZkClient.changeClientIdConfig("ClientId",
testWakeupFromEnsureCoordinatorReady()
Object>()));
shouldThrowIfSerializeNullData()
testNoOffsetIfTimestampGreaterThanLatestRecord():
testUpdateFeaturesDuringSuccess()
shouldNotAlterNonQuotaIpConfigsUsingBootstrapServer():
createKafkaApis(KAFKA_0_10_2_IV0).handleWriteTxnMarkersRequest(null))
testWriteRecord(name:
testEpochValidationWithinFetchSessionV12():
testObserverInitializationFailsIfElectionStateHasVotedCandidate()
testObserverCannotBecomeCandidateOrLeaderOrVoted()
Serdes.String().serializer()));
ConfigCommand.alterConfigWithZk(null,
streamStreamJoinTopologyWithCustomStoresSuppliers()
testConfigureThrowsExceptionOnAccessTokenValidatorClose()
testToSet()
testGlobMatch()
testUuidMappings():
onlyRemovePendingTaskToRecycleShouldRemoveTaskFromPendingUpdateActions()
testThenApplyOnFailedFutureTricky()
testMeasureCommittedDuration()
testSetBrokerConfig():
testInvalidLocalLogRetentionProps():
shutdownThreadShouldNotCauseException():
testLeaderChangeMessageWritten()
testRackListNotEnoughBrokers()
testSizeOfVarlongSimple()
testRemoteLogSegmentMetadataUpdateTransform()
shouldNotReturnMoreDataWhenIteratorClosed()
transactionManager.failIfNotReadyForSend());
retryEndOffsetsShouldRetryWhenTopicNotFound()
testUrl("ftp://ftp.example.com"),
testDeleteTopicsByIdAuthorization():
shouldNotSetStreamsConfigToNull()
testAlterWithEmptyPassword():
testHighAvailabilityTaskAssignorManyStandbys()
testUrl("
testCallbackHandlesError()
testExternalZombieFencingRequestAsynchronousFailure()
testExpansions()
shouldFetchAndIterateOverKeyBackwardRange()
testFile(file.toURI().toURL().toString());
shouldBeSmallerSameTopic()
SchemaBuilder.map(Schema.STRING_SCHEMA,
testExecutorServiceShutdownWhenTerminationFails()
testAllowDeprecatedNulls()
testForceDrainBeforeAppendLeaderChangeMessage()
shouldDecodeEmptyStringVersionTwo()
shouldPauseStandbyTask()
testOffsetFetchMultipleGroupsAuthorization(quorum:
test_compatible_brokers_eos_v2_enabled(self,
testPemKeyStoreConfigNoPassword()
testArrayBackedBufferSlice(Args
testBrokerStateMetric():
testAccumulatorClearedAfterBecomingFollower()
testValidConfigRecord()
testNullConfigs(quorum:
testSerde()
testFollowerToFollowerHigherEpoch()
testFailedTasksRestartBothConnectorAndTasks()
shouldComputeSizeInBytesForConsumerRecord()
shouldThrowExceptionWhenClientTagKeyExceedMaxLimit()
testAllocateProducersIdSentToController():
context.register(null,
shouldWaitForMissingInputTopicsToBeCreated()
shouldPutAndBackwardFetchWithPrefix()
testMap.put("bar",
testHandlingOfUnsupportedForMessageFormatErrorOnTxnOffsetCommit()
producer.beginTransaction());
testSettingNameOnJoinProcessor():
testPutConnectorTaskConfigsConnectorNotFound()
testUnattachedToCandidate()
testAlterLogDirReassignmentThrottle():
testToBindingRoundTrips()
testFetchRequestWithMetadata()
testZeroMaxAllocation()
testWriteAfterClose()
testListValueDeserializerNoArgConstructorsShouldThrowKafkaExceptionDueInvalidTypeClass()
shouldThrowOnNegativeTimeoutForCloseWithCloseOptionLeaveGroupTrue()
testLogDirRenameToExistingDir():
testAsBoolean()
testLoadProducersAfterDeleteRecordsOnSegment():
shouldNotMarkStreamStreamJoinAsSelfJoinMultipleSources()
testFailureInOffsetStoreStart()
testRetryElection()
shouldParseNamedTaskId()
store.fetch(null,
testRotateProducerIdInOngoingState(PrepareCommit))
testDeleteTopicsWithOldIBP():
shouldNotBeEqualIfDifferInStandByTopicPartitions()
testInitialLeaderElectionQuorumSizeFive()
shouldParseShortAsInt16()
testFetchRequestOffsetLessThanLogStart()
testReplay(MetadataVersion
testRaftShouldNeverHandleAlterPartitionRequest():
testCreateAclWithForwarding():
assertThrows(FencedInstanceIdException.class,
testAuthorzeByResourceTypeSuperUserHasAccess():
shouldHandleLostPartitions()
streamStreamLeftJoinTopologyWithDefaultStoresNames()
testToBytesNonUtf8Encoding()
shouldReturnAllKeysWhenMagicIsCurrentValueAndThrottleMsIsDefaultThrottle():
testClientIdQuotaConfigChange(quorum:
testAwaitMessagesReturnsAfterAsynchronousAck()
testForgottenTopics(short
testLateRegisteredListenerCatchesUp()
testECKeyPair(Args
testIncrementalAlterConfigsWithAuthorizer():
reset(supplier);
shouldThrowDuringAssignmentIfStandbyTaskToRecycleIsFoundInTasksRegistryWithStateUpdaterEnabled()
testUnloadOffsetsAndGroup():
testRequestMetadataEquals()
testCreate(quorum:
testConfigureDefaultTopic(quorum:
shouldDefaultToEmptyListIfRackAwareAssignmentTagsIsNotSet()
testNegativeSize()
testRegistrationWithUnsupportedMetadataVersion()
shouldNotReturnDeadThreads()
testTranslateConfigSource(ConfigEntry.ConfigSource.STATIC_BROKER_CONFIG,
testdowngradeType():
testDescribeReportOverriddenConfigs(quorum:
shouldAddThreadLevelImmutableMetric()
testAddRemoveTask()
testControllerWithGivenIBP(KAFKA_2_7_IV0,
testCannotBecomeFollowerOfNonVoter()
testNodeIdPresentIfControllerRoleOnly():
testInvalidEnvelopeRequestWithNonForwardableAPI():
testBadJaasConfigInitialization()
testCommitFlushCallbackFailure()
testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress(quorum:
shouldDeleteExistingCheckpointWhenNoOffsets()
testIterator(Collections.emptyList(),
testTransactionTimeoutSmallerThanCommitInterval(AT_LEAST_ONCE);
shouldCloseCacheAfterErrorDuringStateStoreClose()
AssignmentInfo(LATEST_SUPPORTED_VERSION
testBrokerRoleNodeIdValidation():
testTranslateConfigType(ConfigDef.Type.CLASS,
null).build());
testCleanupPartialSnapshots():
shouldReturnTopologyByName()
shouldPauseActiveTaskAndTransitToUpdateStandby()
Resource(Group,
testIOExceptionsDuringHandshake(args,
testThenApplyOnSucceededFuture()
testWithRecords(Args
testTopicIdsAreNotAdded():
shouldSerializeStringValue()
testRecordToRestartRequestOnlyFailedInconsistent()
shouldFetchFromPartition()
testConnectorTransactionBoundaryValidationHandlesInvalidValuesGracefully()
assertThrows(ClassCastException.class,
testDriver.close();
testCreateTokenForOtherUserFails():
shouldUseSpecifiedNameForSplitOperation()
testFetchFromUnrecognizedFollower():
testEpochUpdateOnChangedTopicIds()
shouldEmitFromLastEmitTime()
testUnknownTopicId():
testControllerFeatureZNodeSetup(Option.empty,
table.toStream((KeyValueMapper)
testInternalEndpointSkipped(HttpMethod.POST,
shouldFailIpConfigsWithInvalidIpv4Entity():
test(String
testBackoffLimit()
testPartitionMissingInResponse():
assertThrows(classOf[InvalidOffsetException],
testListValueSerializerNoArgConstructorsWithClassName()
shouldFindValuesWithinRange()
shouldThrowNullPointerExceptionOnPrefixScanNullPrefix()
testAllConsumersHaveOwnedPartitionInvalidatedWhenClaimedByMultipleConsumersInSameGenerationWithEqualPartitionsPerConsumer()
shouldUseDefaultStateStoreCacheMaxBytesConfigWhenNoConfigIsSet()
testRegisterStateStores()
testTopicId()
testSnapshotDeletionWithInvalidSnapshotState():
prepareReplicaManagerAndLogManager(new
shouldGetNextFromReverseStore()
Collections.singletonMap(0,
context.forward("key",
testControllerFeatureZNodeSetupWhenFeatureVersioningIsEnabledWithEnabledExistingFeatureZNode():
shouldFailIfUnresolvableHost():
testRecordTimestampsWithDeleteHorizon(Args
testIncrementalAlterConfigs()
testEarlyStartListenersDefault():
testRemoveLeaderships()
testParseTopicPartitionNameForMissingPartition():
testLineReaderOnlyValue():
testAppendEmptyRecordSetNotAllowed()
shouldNotAllowNullValueJoinerWithKeyOnLeftJoinWithStreamJoined()
shouldPutBackwardFetchRangeFromCacheForNullKeyFromKeyTo()
shouldNotAllowNullNamedOnProcessValues()
testInitializeAsResignedLeaderFromStateStore()
testTopicIdsInResponse():
testBasicEncryption()
testCleaningWithKeysConflictingWithTxnMarkerKeys():
shouldNotAutoCheckpointTasksIfIntervalNotElapsed()
(String[])
Bytes.wrap("h".getBytes()),
testLatestOffset():
consumer.assign(null));
testV1FetchFromReplica(quorum:
testErrorCountsIncludesNone()
LogValidator.validateMessagesAndAssignOffsets(
testFollowerToVotedSameEpoch()
testTopLevelError(isrs:
testDemarcationsLongerThanOne():
shouldGetRecordsWithPrefixKeyExcludingNextLargestKey()
testUpdateMetadataFollowsInterBrokerProtocolVersion(MetadataVersion.latest,
testConfigureWithAccessClientCredentials()
testCommitWithNoGroupAccess(quorum:
testMetricsReporterAfterDeletingTopic(quorum:
Resource.fromString("Unknown:fred"))
shouldCloseCacheAfterErrorDuringWrappedStoreClose()
testValidateOffsetLessThanOldestSnapshotOffset():
testControlPlaneListenerName():
testIncrementPartitions(quorum:
testCacheSegmentsWithDeleteSegmentFinishedState(RemoteLogSegmentLifecycleManager
testHasRoomForMethodWithHeaders(Args
MemoryRecordsBuilder(buffer,
testTopicIdAndPartitionMetadataFileForFollower():
testRevertReassignment()
testConfigChangeOnNonExistingTopicWithAdminClient(quorum:
testBackoffMoreThanTimeoutWillOnlyExecuteOnce()
connector.start(sourceProperties));
testOffsetsForLeaderEpochClusterPermission(quorum:
testTopicDeletionClusterHasOfflinePartitions(quorum:
shouldNotAllowTablesFromSameTopic()
testRestartConnectorAndTasksOnlyTasks()
testHostAddressBasedAcls(quorum:
testReplicaPlacementPartialServers(quorum:
testCreateSnapshot()
testIntervalBoundary()
shouldCreateTaskDirectoriesUnderNamedTopologyDirs()
shouldThrowExceptionOnNullInstructionV0Test()
testTopicIdReplaced(boolean
testAddProcessorWithBadSupplier()
test_controller(self,
testLookupKafkaClusterId()
testResponseCorrelationIdMismatch():
shouldThrowNPEIfKeyIsNull()
testClose(args,
test(final
shouldFetchAllSegments()
shouldGetNewClientLevelSensor()
shouldThrowDuringAssignmentIfStandbyTaskToUpdateInputPartitionsIsFoundInTasksRegistryWithStateUpdaterEnabled()
testClose(Args
assertThrows(classOf[InvalidProducerEpochException],
txnMetadata.prepareFenceProducerEpoch())
testRecordsAreSplit()
testInvalidIdReturnsError()
testReportErrorsTolerated()
testUnknownServer():
testDescribeTransactionsWithEmptyTransactionalId():
shouldBackwardFetchAllAcrossStores()
testIncrementalAlterConfigsWithPolicy()
testDescribeQuorumStatusSuccessful():
testAuthorizationDeleteTopicsIdWithTopicExisting():
testValidateGoodManualPartitionAssignments()
testRetryInitTransactionsAfterTimeout()
testUnexpectedPartitionError()
afterShouldNotModifyGrace()
shouldThrowNullPointerOnFetchIfKeyIsNull()
testCompleteFuturesExceptionally()
shouldParseRegardlessOfWhitespaceAroundValues():
testCreateAclsError()
testForwardableAPI(apiKey:
shouldNotHandleRevokedPartitionsIfStateCannotTransitToPartitionRevoked()
testRunningConnectorAndTasksRestartBothConnectorAndTasks()
SchemaBuilder.float32().defaultValue("invalid"));
shouldThrowOnTopic()
testSendRecordsConvertsData()
testExplicitlyEnableJmxReporter()
shouldThrowTimeoutExceptionWhenCreatingChangelogTopicsTimesOut()
shouldResumeActiveStatefulTask()
SchemaBuilder.bool().defaultValue("invalid"));
completed.size(),
shouldParseWhitelistArgument():
shouldGetEstimatedNumberOfKeys()
testVersion()
testLogEndLessThanStartAfterReopen():
testFulfillmentFailure()
testTranslateConfigSource(ConfigEntry.ConfigSource.DYNAMIC_TOPIC_CONFIG,
testCreatePermissionOnClusterToWriteToNonExistentTopic(quorum:
testVotedToFollowerHigherEpoch()
testSuccessfulHandleResponseWithOnePartitionErrorWithMultipleGroups()
testThreadNotStarted():
testParseTopicPartitionNameForNull():
testDsaKeyPair(Args
shouldGetPartitonTimeAndProcessorMeta()
testBuildRequestDoesNotBatchGroup()
testAllMessageRoundTripsOffsetFetchFromVersionV8AndAbove(version,
shouldNotPurgeBeforeThePurgeInterval()
testIgnoreErrorInInput():
testHighAvailabilityTaskAssignorLargePartitionCount()
shouldNotAlterUserScramCredentialAndClientQuotaConfigsSimultaneouslyUsingBootstrapServer():
testForwardableAPI(ApiKeys.CREATE_DELEGATION_TOKEN,
testLiteralComponent()
testElectLeaders()
testToImageAndBack(ProducerIdsImage
Values.convertToList(Schema.STRING_SCHEMA,
shouldThrowOnCommit()
testSuccessfulDescription()
testAllMessageRoundTripsOffsetFetchFromVersionV0ToV7((short)
consumer.partitionsFor(";3#
InternalRequestSignature.addToRequest(KEY,
testTruncateWillRemoveOlderSnapshot():
shouldDisableLoggingOnStreamJoined()
testBackToBackLeaderFailuresQuorumSizeThree()
testCorruptIndexRebuild():
shouldNotBeEqualIfDifferInConsumerClientId()
shouldBackwardFetchAllInTimeRange()
testCallbackAndInterceptorHandleError()
shouldCloseAfterTopicAdminUsed()
test_consumer_bounce(self,
ApiKeys.forId(10000));
testOneInFlight():
testAlterNothing():
testListTransactionsErrorResponse():
testOnJoinPrepareWithOffsetCommitShouldKeepJoinAfterRebalanceTimeout()
testTopicWithoutPartition():
group.transitionTo(CompletingRebalance))
testFilterRecordsNotSatisfyingPredicate():
testMetaPropertiesWithMissingBrokerId():
testIdUsageRevokedOnIdDowngrade()
assertThrows(classOf[joptsimple.OptionException],
testInvalidHeaderKeyPartial()
test.accept(driver);
testRealProducerConfigWithSyncSendShouldNotThrowException()
testSupportLongChainsOfFactoryMethods():
testFatalErrors()
testPreprocessIncrementalWithUnknownResource():
testUnsupportedVersionFromNetworkClient():
testFencingOnAddPartitions(quorum:
test()
shouldGetPinnedUsageOfBlockCacheWithMultipleCaches()
testStream.transformValues(()
testRemoveAndDeleteSegmentsAsync():
testConfigMapToRedactedStringWithSecrets()
testStateMachineExpireAppendedRecords()
testHandleBeginQuorumResponse()
testRaftShouldNeverHandleControlledShutdownRequest():
testGenerateResultWithConfigValuesMoreThanConfigKeysAndWithSomeErrors()
testUnattachedToUnattached()
dropNonExistingHeader()
shouldAllowAddingAndRemovingNamedTopologyAndReturnBeforeCallingStart()
testAllTransactionStatesAreMapped():
testAppendConfig(props:
testObserverQuorumDiscoveryFailure()
testMap1.put("myPassword",
shouldTruncateIfLeaderRepliesWithDivergingEpochNotKnownToFollower():
testCreateClusterWithAdvertisedHostAndPortDifferentFromSocketServer():
testableServer.enableRequestProcessing(Map.empty)
testLogRecoveryIsCalledUponBrokerCrash():
testAccumulatorClearedAfterBecomingVoted()
testPrefixScanInMemoryStoreWithCachingNoLoggingOldProcessor()
testRemoveStraySnapshotsKeepCleanShutdownSnapshot():
shouldHandleRemovedTasksToUpdateInputPartitionsFromStateUpdater()
testGetErrorResponse()
shouldMatchInnerJoinWithSelfJoinWithSingleStream()
shouldThrowOnOffset()
testOnJoinPrepareWithOffsetCommitShouldKeepJoinAfterNonRetryableException()
shouldComputeTasksToRemainingStandbys()
testJMXFilter(quorum:
testDescribeMetadataQuorumFailure()
testFromRecordAndToRecord()
LoggingContext.forConnector(null));
testDescribeWhenTopicDoesntExistWithIfExists(quorum:
testExpectedEntityTypeNames(List(ConfigType.User,
testCorruptLog():
testMonotonicHighWatermark()
testInvalidTimeDuration()
testRestoreRestartRequestInconsistentState()
testSuccessfulResponse()
shouldIncludeKeyInStreamTableLeftJoinResults()
store.put(null,
assertThrows(InvalidTopicException.class,
testBuildEndTxnMarker()
testFulfillmentRetryBookkeeping()
shouldThrowNullPointerExceptionOnRemoveNullKey()
testSeparateOffsetsTopic()
testInsertAndRemove()
testRetainMemberIdAfterJoinGroupDisconnect()
testFormatEmptyDirectory():
testInvalidRanges():
testUnsupportedCompress()
Serdes.ByteArray(),
testUnusedConfigs()
shouldNotBlockInCloseWithCloseOptionLeaveGroupFalseForZeroDuration()
testToRegularExpression()
testRemoveAccessControlEntryRecord();
cachingStore.fetch(bytesKey("anyFrom"),
testCompletingFuturesViaCancellation()
shouldRemoveEmptyNamedTopologyDirsWhenCallingClearLocalStateForNamedTopology()
testCloseWithoutFreeze()
(topic,
testEnvelopeRequestWithNotFromPrivilegedListener():
testAdvertisedListenersDisallowedForKRaftControllerOnlyRole():
connectorsResource.putTaskConfigs(CONNECTOR_NAME,
windowedStream.aggregate(MockInitializer.STRING_INIT,
shouldNotDeleteAppDirWhenCleanUpIfNotEmpty()
testEncodeDecodeRecovered():
testRequestThread.enqueue(queueItem)
shouldLogWarningWhenSettingWalOptions()
testSingleBatchAccumulation()
shouldReturnNoKeysWhenLastKeyIsSmallerThanSmallestKeyInStateStoreForwardDirection()
shouldThrowTopologyExceptionWhenAddingNamedTopologyReadingFromSameInputTopic()
batch.setMaxTimestamp(TimestampType.LOG_APPEND_TIME,
is("Encounter
testGetUnsupportedVersionsWhenControllerApiVersionsNotAvailable():
testCreateSnapshotMuchLaterEpoch():
shouldDistributeClientsOnDifferentZoneTagsEvenWhenClientsReachedCapacity()
testValidateRootLogLevelConfigs():
test_multiple_kraft_security_protocols(
@nowarn("cat=deprecation")
testListKeyDeserializerNoArgConstructorsShouldThrowKafkaExceptionDueInvalidTypeClass()
listSerdeSerializerShouldReturnByteArrayOfFixedSizeForShortPrimitiveInput()
testUpgradeFromPreProductionVersion()
testLogDirRenameToNewDir():
testRemoveAllStraySnapshots():
serializerShouldSeeGeneratedClientId()
shouldContainBothTypesOfPreExistingChangelogs()
testKeepsDeleteIfInImage()
shouldEnableAllOptimizationsWithOptimizeConfig()
testUpdateLogStartOffsetWithMissingSnapshot()
shouldLogWarningWhenEosBetaIsUsed()
testTransactionTimeoutSmallerThanCommitInterval(final
testHeartbeatRebalanceInProgressResponseDuringRebalancing()
testResetToDatetimeWhenPartitionIsEmptyResetsToLatestOffset()
testSourceConsumerConfig()
testStructWithNullFields()
consumer.partitionsFor("some
shouldDeleteCheckPointFileIfEosEnabled()
testDoubleFree()
testRemoteLogSegmentMetadataSerde()
consumer.endOffsets(Set(tp).asJava))
testBatchedListConsumerGroupOffsetsWithNoFindCoordinatorBatching()
testRemotePartitionDeletion(RemoteLogMetadataManager
testNotEnoughLiveBrokers():
testMaybeUpdateTopicIds():
createKafkaApis(KAFKA_0_10_2_IV0).handleAddPartitionToTxnRequest(null))
testRecoveryAfterAllNodesFailQuorumSizeThree()
testDescribeMissingEntityType():
shouldThrowTimeoutExceptionWhenCreatingRepartitionTopicsTimesOut()
testModifyValue()
testCreateAndCloseConsumerWithNoAccess(quorum:
shouldRemoveOneNamedTopologyWhileAnotherContinuesProcessing()
testFields(Args
@Timeout(5)
test_non_colocated_upgrade(self,
testExhaustingRetries()
testLoadingLogKeepsLargestStrayProducerStateSnapshot():
testFallbackPriorTaskAssignorLargePartitionCount()
shouldThrowOnCleanupWhileShuttingDown()
testInterBrokerSslConfigValidation(Args
testPartitionMetadataFileCreatedWithExistingLog():
assertThrows(OAuthBearerIllegalTokenException.class,
testCurrentLag()
testSkippingAssignmentFails()
testMaxAllocationLargerThanSize()
testIncrementalAlterConfigsForLog4jLogLevels(quorum:
shouldForwardInit()
parseHeaderWithNullClientId()
testQuotaConfigEntityUsingZookeeperNotAllowed():
ExtendedAclStore(LITERAL))
testInvalidSaslHandShakeRequest()
testSuccess()
testOriginalWithOverrides()
testThenApplyOnFailedFuture()
shouldThrowUnknownTopologyExceptionForStore()
testElectionAfterLeaderNetworkPartitionQuorumSizeFourAndTwoObservers()
shouldCreateRocksDbTimeOrderedWindowStoreWithIndex()
testWriteTransactionalRecordSet(Args
testOuterJoinDuplicatesWithFixDisabled()
testReplaceThreads(2);
testReleaseForeignBuffer()
shouldOnlyRetryNotSuccessfulFuturesDuringSetup()
shouldParseByteAsInt8()
shouldShutdownSingleThreadApplication()
testOffsetSyncsTopicsOnTarget()
testLineReaderHeader():
testAlterPartitionVersion2KeepWorkingWhenControllerDowngradeToPre28IBP():
shouldGetNumberOfDeletesActiveMemTable()
testDoRestartConnectorAndTasksNoAssignments()
ConnectSchema.validateValue(Decimal.schema(2),
testCandidateToResigned()
testRotateProducerIdInOngoingState(Ongoing))
testAbortedSnapshot()
shouldThrowNoSuchElementExceptionWhilePeekNextForPrefixScan()
retryEndOffsetsShouldRethrowUnknownVersionException()
ConfigDef().withClientSaslSupport().parse(props));
testSerializeWithInconsistentHeaderVersion()
testInput.pipeInput("a",
testProducerIdExpirationWithNoTransactions(quorum:
testAccumulatorClearedAfterBecomingUnattached()
testPrintDataLogPartialBatches():
testFileBasedRemoteLogMetadataCacheWithUnreferencedSegments()
testHashCode()
testFile(null),
testPotentialDeadlockWhenProducingToOffsetsTopic()
(Materialized)
testContains()
testInitialLeaderElectionQuorumSizeFour()
testUnsafeDowngradeIsTemporarilyDisabled()
shouldDistributeWithMultipleStandbys()
testSomething()
JoinWindows.of(ofMillis(-1)));
testReloadUpdatedFilesWithoutConfigChange():
shouldUpdateStandbyTaskAfterAllActiveStatefulTasksFailed()
testRoundTrip(REGISTRATIONS.get(1));
testValidateIsr()
test_context.injected_args.get(quorum_size_arg_name,
testNodeIfOnlineNonExistentTopicPartition()
testValidateExpirationAllowsZero()
testMap1.put("myString",
testLeaderAndIsrRequestFollowsInterBrokerProtocolVersion(interBrokerProtocolVersion:
logDirFailureChannel).read())
testAccessControlEntryRecordAndRemoveAccessControlEntryRecord()
testAppendInfoFirstOffset():
shouldCaptureRecordsOutputToChildByName()
test_simple_run(self,
shouldAddTotalSstFilesSizeMetric()
testListKeySerializerShouldThrowConfigExceptionDueAlreadyInitialized()
shouldDecodeVersionOne()
test_fail_fast_on_incompatible_brokers_if_eos_v2_enabled(self,
test_lifecycle(self,
testMetaPropertiesAllowsHexEncodedUUIDs():
testRetentionDeletesProducerStateSnapshots():
testShrinkThreadPool():
testLowerWindowBound(final
testKStreamSplit()
testAllowNullOverride()
shouldThrowNullPointerExceptionSettingStreamsUncaughtExceptionHandlerIfNull()
testApiIdsArePositive()
testDisableJmxReporter()
testSourceAdminConfig()
testBrokerHeartbeatStateList()
testAlterReplicaLogDirs(quorum:
shouldAllowForNamedTopologiesToStartPaused()
testDeleteTopicDoesNotRetryThrottlingQuotaExceededException():
shouldShutdownThreadUsingOldHandler()
testRetriableOldCoordinatorLookup()
testSendingOldValues(
testExistingBootstrapFile()
testAlterReassignmentThrottle(quorum:
storeProvider.getStore(StoreQueryParameters.fromNameAndType(windowStore,
testBranchingWithNoTerminalOperation()
testUncleanLeaderElection()
assertThrows(classOf[java.lang.IllegalArgumentException],
testDescribeClusterRequestExcludingClusterAuthorizedOperations():
testDescribeOptions():
shouldReverseIterateOverValueFromBothIterators()
table.outerJoin(table,
testTopicNameArg():
testDeltaFollowerStopFetcherBeforeCreatingInitialFetchOffset():
testDowngradeMetadataVersion()
testRequestTimeoutErrorSwapForTxnOffsetTopic():
testFetchSessionWithUnknownIdOldRequestVersion():
testProducerConsumerOverrideUnthrottled(quorum:
test.kafka.is_registered(prev_broker_node)),
testDecompression(buffer,
table.outerJoin(null,
testSendAndFailAuthentication():
testDeleteTopicsByName():
testPatternSubscriptionMatchingInternalTopic(quorum:
shouldDeleteKeyAndPropagateV0()
shouldResizeCacheAfterThreadRemovalTimesOut()
test_consume_bench(self,
assertThrows(NoOffsetForPartitionException.class,
testElectionAfterLeaderNetworkPartition(new
testDescribeConfigsForLog4jLogLevels(quorum:
testAddingReplicaReassignment()
testFormatAuthorizationHeader()
