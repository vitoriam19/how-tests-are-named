testReplicateMessageTTLPolicies()
testAreExceptionsPresentInChain2()
test500Error()
testConnectionAutoReleaseUnPartitionedTopicWithTransaction()
testHasMessageAvailableOnEmptyTopic()
testProducerBuilderImplWhenMaxPendingMessagesAcrossPartitionsPropertyIsInvalidErrorMessages()
testHealthCheckup()
testDefaultConfig()
testRedirectOfGetCoordinatorInternalStats()
testPreserveOriginalSchema()
testCopyKafkaHeadersDisabled()
testPersistentTopicMessageAckRateMetricNamespaceLevel()
writeLongBytesArrayData()
testMultiAddresses(LookupService&
testConnectionCreation()
testGetMaxConsumersApplied()
testOffload(false);
testPartitionsUpdate(bool
waitForExclusiveTest(String
testSinkConfigParsingPreservesOriginalType()
readModifyUpdate(String
testGenericOf()
startupShouldFailWhenAuthorizationIsEnabledWithoutAuthentication()
testLowerBoundarySheddingNoBrokerToOffload()
testKeyValueSchemaWithStructsSEPARATED()
testMaxConsumersDisabled()
structTypeConsumerProducerUndefinedCompatible()
testNotSupportedAvroTypesArray()
testBatchingDisabled()
testAppliedAdvertised()
testAddRg.setDispatchRateInBytes(200);
testAddRg.setDispatchRateInBytes(3
testCheckRetentionTimeBasedQuota()
testKeyValueSchemaCache()
testCustomKubernetesDownloadCommands()
testListenerOrdering()
testAuthenticate(tokenAB,
testAdminWithCertAndKey()
testDefaultValue()
testConvertBackFidelityWithBatch()
testValidateKeyStoreNoPwd()
testDeleteForDifferentKey()
testProduceWithRestAndClientThenConsumeWithClient()
testKeyBasedBatchingOrder()
testCompactionCursorRetention(topic)
testSerdeFunction()
testDebeziumMongoDbSource()
testPartitionsUpdate(true,
mainTest()
testMultiConsumers()
testProducerCloseCallback()
testMergeDifferentRetainKeyOrdering()
testWebSocketDurableSubscriptionMode()
testDoNotCreateSystemTopicForHeartbeatNamespace()
testGetTxnID()
testRehashingWithDeletes()
testTimestampWithJsonDef(){
testPendingAckReplayChangeStateError()
testCleanupEmptyTopicAuthenticationMap()
testCompactionCursorRetention(topic);
testReaderSubName()
testRootMessageChange()
testTumblingCountWindowTest()
testInvalidDynamicConfigContentInMetadata()
testAutoCreateSchemaForTransactionSnapshot()
testJavaConstructorWithWebServiceUrlAndExposePulsarAdminClientDisabled()
testForSchema(Schema
namespace_oldStyleNamespaceLocalName()
waitForExclusiveWithClientTimeout(String
testGetNativeRecord()
testPartitionedTopicStats()
testResolveUrlBeforeUpdateServiceUrl()
testMessage.getInt32Field());
testSeekForBatchMessageAndSpecifiedBatchIndex()
testResources()
TestDeleteInvalidDynamicConfiguration()
testPauseAndResumeNoReconnection()
testBatchMessage()
openAsyncLogWriterFailed()
equalsUnbatchedTest()
testMultiRolesAuthz()
testSinkConfig.getConfigs();
testConsumerWithPooledMessages(boolean
testIndividualAck()
testDeleteLog()
testSplitBundleByFlowOrQps()
testUpdatePartitionedTopicHavingProperties()
testWhenSubPartitionNotDelete()
testGetter()
@Test(timeOut
testScan(int
testRelease(String
testSystemTopicShouldBeCompacted()
testAddRg.setDispatchRateInBytes(2
testPulsarSinkStats(String
testReplicatedSubscriptionWhenReplicatorProducerIsClosed()
testSupportsBatchBuilderWhenProducerConfigIsNull()
testGenericObjectRemoveFieldFunction()
config1.setBrokerDeduplicationEnabled(true);
testConsumerBuilderImplWhenDefaultCryptoKeyReaderIsEmptyMap()
testNullValue()
testSendMsgFailWithoutCompaction()
sortedTest()
testRegisterFunctionFailedWithWrongPackageName()
testSetGetProperty()
testConsumerBuilderImplWhenDefaultCryptoKeyReaderIsEmptyString()
testWriteGenericRecordsAtLeastOnce()
testReadCompactedLatestMessageWithInclusive()
shouldNotCarryStateInAckSetWhenRecycled()
testAdminBuilderWithServiceUrlNotSet()
topic.subscribe(
testContains()
testResourceGroupTwo.setPublishRateInMsgs(100);
testOpenAndRead()
testExclusiveCumulativeAckedNormalTopic(boolean
testAddress(host,
createSubscriptionBySpecifyingStringPosition()
testMultiTopicsConsumerImplPauseForPartitionNumberChange()
markerMessageNotDeduplicated()
allocatorTest()
Awaitility.await()
testReplicatorProducerNameWithUserDefinedReplicatorPrefix()
testResetMethodOfMultipleBundlesEmptyBundleMap()
testSimpleMultiReader()
testDebeziumMongoDbConnect(String
unknownRecordSchemaTest()
testTransactionNewReconnect()
testWithReaderConfig()
testCloseException()
testInitializeWithTimer()
float64SchemaTest()
timeout(45_000).times(1)).resume(responseCaptor.capture());
testMessageImplGetReaderSchema()
testPackagesOperationsWithUploadingPackagesUsingFileSystemStorageProvider()
pulsarSplitJsonCodecTest()
testDisconnectProducer()
testSimpleAggregation()
testFilterAndMapProperties()
testAuthenticationFailedImmediately()
testRemoveMaxQueueLimit(boolean
testCreateGoFunctionWithPackageUrl()
testNullValue(ElasticSearchConfig.NullValueAction.IGNORE);
testMaxSubPerTopic()
testPulsarSinkLocalRun(fileServer.getUrl("/pulsar-io-data-generator.nar"));
testPartitionedTopicMessagingWithShared(Supplier<String>
testLimit()
testReadCloned(String
testVerifyAuthRoleAndAuthDataFromDirectConnectionBroker()
testCompositeType()
testDeleteLedgerFactoryCorruptLedger()
testSpecifyModuleName()
producerSendAsync(TopicType
callsCancelActionWhenCancelled()
testGetEnsemblesAsync()
testDeleteWhenNoSubscriptionsWithTopicLevelPolicies()
testMultiReaderIsAbleToSeekWithTimeOnBeginningOfTopic()
testKeyStoreTlsTransport(Supplier<String>
testTraceId()
testListNonPersistentTopic()
testClearBacklogPermission()
testLargeMessageAckTimeOut(boolean
testAutoKeyValueConsumeGenericObject()
testPersistentTopicStatsAggregationPartialProducerSupported()
testExpandShrinkAndClear()
sequentialKeys(String
testTopicIsNotReady()
offsetNoIndexNoBatchTest()
testJettyTlsServerTls()
testDelayedDelivery()
testConcurrentlyRegisterUnregisterListeners()
testTBRecoverChangeStateError()
activeBrokerParse()
testListOfNamespaceBundles()
testTopicLookup(TopicDomain
testChangedFilteredResponse()
testPartitionTopicsOnSeparateListener()
testTrigger()
testBrokerConnection()
testGetCurrentRecord()
testGetSchemaCompatibilityStrategyWhenSetSchemaAutoUpdateCompatibilityStrategy()
testVerifyOriginalPrincipalWithAuthDataForwardedFromProxy()
TestInitializeWithData()
testBatchAckTrackerMultiAck(boolean
testPulsarSinkLocalRun(String
testTransactionBufferNoSnapshotCloseReader()
testAutoAckConvertFailed()
int8SchemaTest()
testExceptionBySeekFunction()
testTransactionBufferClientTimeout()
testLookupPartitionedTopic()
testInitialization()
testTamperingMessageIsDetected()
testWithConsumer(consumer);
testBadDatabase()
testAdmin()
testRestart()
testAvroGetNativeRecord()
testSetReplicatedSubscriptionStatus()
windowTest()
testAddMessageWithDeliverAtTimeAfterNowBeforeTickTimeFrequencyWithStrict()
test.field("test").type(SchemaType.STRING);
testAckTimeoutMinValue()
testResourceCleanup()
TestKeyValuePrimitiveSchema()
testMetaValue()
TreeSet<>();
testProduce()
testGetPulsarAdminWithNonExistClusterName()
testProperties()
testResourceGroupTwo.setPublishRateInBytes(10000L);
testOpenSearchSinkRawData(boolean
testMessageAckRateMetric(topicName,
testBookkeeperMetadataStore()
testPartitionedLookup()
testBatchMessageAck()
testKeySharedMetadataExposedToStats()
schemas()
entries.put((long)
testFunctionsCreation()
config.setWebServicePort(Optional.of(0));
testReplicatorRatePriority()
jsonSchemaTest()
testCompactionCursorRetention(String
testClientInstance()
testValidateMinMaxResourcesRequired()
testWriteGenericRecords(ProcessingGuarantees.ATMOST_ONCE);
testDisableHttpTraceAndTrackMethods()
testHandleCloseConsumer()
checkConcurrentModifications(String
namespace_oldStyleNamespaceCluster()
testTransactionConflictExceptionWhenAckBatchMessage()
testNukeExistingCluster(String
testTransactionCommitToTxnAsyncReconnect()
tester.getSinkType().getValue().toLowerCase()
testPythonExclamationFunctionWithExtraDeps()
KeyValueSchemaTest()
testParseKeyRetainOrderingField()
testGetStats(String
testDifferentListenerWithSameHostPort()
testNonKeySendAndReceiveWithHashRangeAutoSplitStickyKeyConsumerSelector(String
testReadEOFException()
testMultipleTryAcquire()
structTypeProducerConsumerAlwaysCompatible()
testData.keySet())
testGetChildren(String
testJettyTlsServerInvalidTlsProtocol()
testTransactionAbortToTxnAsyncReconnect()
testErrorLevelException()
floatRecordSchemaTest()
testE2EPulsarFunctionMessagePooled()
testPulsarConfigurationComplete()
testUserExceptionThrowingAsyncFunction()
testDeadLetterPolicyDeserialize()
testAssignmentWorkerDoesNotExist()
testTopicPoliciesWithMultiBroker()
producerBuilderTest()
testGetList()
shouldCallSetupBeforeRetrying(ITestContext
testTimeoutHandling()
andAckSetTest()
testPublishRateLimitedTimes()
testReplicatedSubscriptionRestApi2()
testGetPartitionedTopicMetaData()
test_group_pulsar_io()
testReplicatorRateLimiterWithOnlyBrokerLevel()
testKubernetesRuntimeWithExposeAdminClientEnabled()
testCompactionRetentionOnTopicCreationWithTopicPolicies()
testAutoConsumeSchemaDeadLetter()
testNettyClientSslContextRefresher()
testMetricsWithCache()
insertionOutsideCacheWithGenericType(String
testTlsInstance()
testInfoLevel()
testListenerInvokedWhenTopicDeleted()
configurePulsar(ServiceConfiguration
log.info("Client:
testLoadCA(String
testNs.getTenant(),
shouldWaitForExecutorToTerminate()
testCreateTopicMLFailure()
parseLedgerIdTest()
TestKeyValueStructSchema()
testSendMsgFail(true);
testCheckConsumersWithSameName()
testConfigureWithoutOptionalParams()
testBuildControlledClusterFailoverInstance()
test_json_schema_encode_remove_reserved_key(self):
testRateLimiterWithPermitUpdater()
testNonRegionBookie()
testHttpLookupWithNotFoundError()
testAvroSchemaFunction();
testPersistentTopicList()
testCumulativeAck()
test](https://img.shields.io/github/workflow/status/apache/pulsar/CI%20-%20Unit?label=unit%20test)](https://github.com/apache/pulsar/actions/workflows/ci-unit.yaml)
testKeyValueSchema(KeyValueEncodingType.INLINE);
testSequential(String
tester.getSinkClassName()
testWillCancelReadAfterExhaustingRetry()
testGetConsumerKeyHashRangesWithSameConsumerName()
testSetTopicMetadata()
testSendTimeoutAndRecover(int
revalidateLeaderWithDifferentSessionsDifferentValue(String
getFreePort()
testForceDeleteNamespaceNotAllowed()
testPulsarSourceLocalRun(null));
testEnableWebSocketServer()
test_group_pulsar_io_ora()
testPendingAckLowWaterMarkRemoveFirstTxn()
testSyncProducerAndConsumer(int
testConvertAvroEnum()
testMakeLocalPoliciesImmutableSerializationCompatibility()
testTlsEnabledWithoutNonTlsServicePorts()
testPublishWithBusyWait()
zeroQueueSizeReceiveAsyncInCompatibility()
testLoadProxyEventListenerWithWrongListerClass()
defaultValuesTest()
testInitialNamespaceSetupZKDefaultsFallbackWithChroot()
int32SchemaTest()
awsS3BackwardCompatiblePropertiesTest()
testDeleteTopicAndSchema()
testAuthenticate(tokenBB,
conf.setAllowAutoTopicCreation(domain.equals(TopicDomain.non_persistent));
testE2EPulsarFunctionLocalRun(fileServer.getUrl("/pulsar-functions-api-examples.jar"));
testTokenParamWithBearerPrefix()
testMaxConsumersShared()
testDoFilterSendError()
testRedeliveryFailOverConsumer(boolean
testResourceGranularities(0.2,
seekPauseResumeTest()
testProduceConsumeUsageOnRG(String[]
testIncompatibleSchema()
testJsonSchemaProducerConsumerWithSpecifiedReaderAndWriter()
testMethodC()
testDebeziumMySqlConnect(String
testGetStatsWithoutArriveUpdateInterval()
testNullReturningFunction()
tester.getSinkType().name().toLowerCase()
testAckMessageWithNotOwnerConsumerUnAckMessageCount()
testProducerExceptionAndThenUnblockTimeQuotaPrecise()
testRateLimiting()
testGetSourceConfig()
testPythonFunctionLocalRun()
testPulsarSinkLocalRun(String.format("%s://data-generator",
binaryEndpoint()
renameFileTest()
shouldTerminateExecutorOnTimeout()
testGetSubscriptionType()
testJsonGenericRecordBuilder()
unloadTopicCloseTransactionBufferTest(boolean
testChecksumCompatibilityInMixedVersionBrokerCluster(MixedVersionScenario
(String
validateAuthenticationCompatibleWorkerConfig()
testProduceOnNonPersistentNonPartitionedTopic(String
testGetMetricsByAuthenticate()
testNamespaceNotExist()
testPackagePath()
Arrays.asList(foundFiles));
testRunWithTlsProviderConfigFile()
testExclamationFunction(Runtime
testBatchMessageSendTimeoutProducerSemaphoreRelease()
testThreadLocalStateCleanupInCurrentThread()
testPerProducerStats()
testUseAutoConsumeWithNoneSchemaTopic()
testMultiTopicsConsumerImplPauseForManualSubscription()
testHealthCheckupV1()
testDeadLetterTopicHasOriginalInfo()
testPackageNameErrors()
producerReconnection(ProducerAccessMode
consumer1.receive(RECEIVE_TIMEOUT_SECONDS,
testGetDurableSubscription()
testKeyValueGenericRecord(SchemaType
nullValueBooleanSchemaTest(String
testReplicatorWithPartitionedTopic()
testReplicateSubscribeRatePolicies()
testCreateExistedPartition()
testCumulativeAckRedeliverMessages()
testListOperation()
testReplicatePublishRatePolicies()
testRegisterStoreTwice()
testAllowDisableSinkTimeout()
testSerializationAndDeserialization()
Unpooled.copiedBuffer("message-"
testGetZKServersFromServiceUri()
testGetBytesOutCounter()
shouldContainAllEnumValues()
testPartialPartitionWithKey()
(int
kafkaLogicalTypesTimestampTest()
testMetricsStatsThatTriggeredByMaxDelayTime()
testMaxNamespacesPerTenant()
testResolveLedgerManagerFactoryNullScheme()
testDecompressReadonlyByteBuf(CompressionType
testOffloadDeleteClosedLedger()
testTopicsListMinus()
testAddAndRemove()
testReplicatorWithFailedAck()
testBadTenant()
testGetListWithoutGetBundleOp()
testSchemeFilter()
testSchemaRegistryMetrics()
booleanRecordSchemaTest()
testTwoLedgers(String
testOffloadPoliciesApi()
testReplicatorMessageDispatchRatePolicies()
testPreciseBacklog()
testClassLoaderSwitcher()
concurrentPutTest(String
testInitializingWithExecutorProviders()
testProduceNoSchema()
testWatcherGrabsConnection()
testRebalance();
testResourceGroupCreateMany()
customSerde(String
testSchemaCompatibilityStrategyPermission()
testAck(boolean
testDecreaseUnAckMessageCountWithAckReceipt(SubscriptionType
testResolveLedgerManagerFactoryNullUri()
testResourceGranularities(5.0,
testPojoAsAvroAndJsonConversionToConnectData(Byte.MIN_VALUE);
testGetMessageById()
testConsumerCrashSendAndReceiveWithHashRangeAutoSplitStickyKeyConsumerSelector(
testDeleteUnusedDirectories(String
testBatchMessageIndexAckForExclusiveSubscription(boolean
testMinMaxResource(0.2,
testSource(SourceTester<T>
testProduceAndConsumeWithSuperUserToken()
structTypeConsumerConsumerAlwaysCompatible()
testPublishCompactAndConsumeCLI(Supplier<String>
testGetTransactionInBufferStats()
testInitialNamespaceSetup()
testInterceptorOnFilter()
testDynamicConfigurationBrokerDeleteInactiveTopicsMode()
testGenerateSystemMetricsWithDefaultCluster()
tester.get().getServer().resumeProcessing();
testMultiReaderBuilderConcurrentCreate()
testFailoverSingleAckedPartitionedTopic(boolean
badVersionErrorDuringTruncateLedger()
testDefaultCredentialProvider()
testSubscriptionLevelDispatchRate()
testAddForDifferentKey2()
testIsClosed()
testReplicatorClusterApi()
testMultiLevelDispatch(SubscriptionType
multipleMembers(String
testSink(new
testFileModeExitOnError()
testPackagesOperationsWithUploadingPackages()
test_group_standalone()
tester.get().getConfiguration();
testGetTopicsOfNamespaceLongPattern()
testDynamicConfigurationBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds()
testHealthCheckupV2()
testDebeziumMsSqlSource()
cmdParserClientTest()
testBundlesMetrics()
testNamespaceResourceGroup()
testGetLastMessageIdRequestTimeout()
testLogicalTypesToJson()
testProducerExceptionAndThenUnblockSizeQuota()
listener).getBeforeSendCount(),
test_group_tiered_filesystem()
testConsumeAvroMessagesWithoutSchema()
testNestedMessage()
testSendMessageRespectFlowControl()
testWithPadding(10);
testAutoKeyValueConsume(boolean
testReadMessages(String
testSplitBUndleWithNoBundle()
testManagedCursorMetrics()
testReleaseOwnershipWithZookeeperDisconnectedAfterOwnershipNodeDeleted()
testRow()
testTokenFromHttpParams()
Assert.assertEquals(events.size(),
testFail()
testNullKey()
testProducerInvalidMessageMemoryRelease()
testOAuth2TokenRefreshedWithoutReconnect()
testCalculateHash()
testLoadSecretParams()
testDeadlockDetectionOverhead()
testPackageMetadataSerDe()
testBatchIndexAckDisabled(Supplier<String>
producerFencedTest()
testReplicateMaxSubscriptionsPerTopic()
testMultiReaderIsAbleToSeekWithTimeOnMiddleOfTopic()
topicDeleted(String
testResetMethodOfMultipleBundles()
transactionTimeoutRecoverTest()
testSchemaComparison()
testAdvertisedAddress()
testAvroFunctionLocalRun(null));
testDeleteCmd()
testAddAndRemoveTransactionMetadataStore()
testEncodeAndDecode(String
testNamespacePoliciesPermission()
gcsPropertiesTest()
testDoFilterInvokeChainDoFilter()
testAutoAvroSchema()
testNeedToReportLocalUsage()
test_group_cli()
testGetStoreNull()
testNotifications()
testIndexRequest()
cacheSizeAllocatorTest(long
testDeleteExistFailureDomain()
testGetOrCreateSchemaRequestTimeout()
testWithErrorPassword()
testWatchBookiesSuccess(String
testPersistentTopicStatsAggregationPartialProducerIsNotSupported()
testDebeziumMongoDbConnect("org.apache.kafka.connect.json.JsonConverter",
testCreateTopicWithReplicationCluster()
testBatchReceiveNonPartitionedTopic(BatchReceivePolicy
testGetListInBundle()
ackCommitTest()
testCreateTopic()
testDoNotReplicateSystemTopic()
SerializeAdnDeserializeTest()
testManageLedgerWriteFailState()
testSchemaCompatibility()
testIterateNoLedgers(String
testParsingWithNegativeInfinityValue()
testAutoKeyValueConsumeGenericObjectNullValues(KeyValueEncodingType
testResourceRestrictions(cpu,
testCreateInitialSubscriptionWhenExisting()
testPersistentTopicMessageAckRateMetricTopicLevel()
@Test(dataProvider
testFlushCursorAfterIndividualDeleteInactivity()
testIndexName()
testAdd()
testMaxActiveTxn()
testRedeliveryOfFailedMessages()
testPublishOffloadAndConsumeViaCLI(Supplier<String>
testCanReadEntryFromMLedgerSizeExceededLimit()
testPermissionForProducerCreateInitialSubscription()
testHashKey(ElasticSearchConfig.IdHashingAlgorithm
testBatchSourceConfigCorrect()
Awaitility.await().until(()
testShareConsumerWithMessageListener()
testKbps()
testFlushInPartitionedProducer(true);
testWebExecutorMetrics()
testPartitionedTopicForceDeletion(Supplier<String>
testMemoryLimitPercent()
testPackagesManagementFlow()
shouldAllowValidInput()
testConsumerBuilderImplDLQForKeySharedNotAllowed()
testBatchProducing(Supplier<String>
testSetAlwaysInCompatibleStrategyOnTopicLevelAndCheckAlwaysInCompatible()
testEndSubNotExist()
testResolveLedgerManagerFactoryFlat()
produceAndConsumeCloseStateTxnTest()
int16SchemaTest()
testMessageOrderAndDuplicates(messageSet,
testFilterRecentlyUnloaded()
factory.open("test-ledger"
testPulsarSourceStatsWithFile()
testFailByZk()
multipartUploadTest()
testConsumerId.getSubscription());
testRegisterFunctionSuccessWithPackageName()
testDeleteRecursive(String
testPersistentPartitionedTopicUnload()
testSchemaStorageFailed()
testResolveLedgerManagerFactoryMs()
testCreatedProducerSendsCloseProducerAfterTimeout()
testCustomBatchFormat()
testPojoAsAvroAndJsonConversionToConnectData(Long.MIN_VALUE);
testPulsarAuthCheck()
testAddRg.setPublishRateInMsgs(100);
testSubscriptionStatsAdminApi(topic,
PulsarClient.builder().serviceUrl(lookupUrl.toString())
namespace_nullCluster()
shouldFailHandleGetTopicsOfNamespace()
testCreateFunctionWithoutClassName()
testValidateMaxResourcesRequired()
testGenericObjectRemoveFieldFunctionKeyValue()
testWithMixedDelays()
testPopulateMessageSchema()
testNullDeadLetterPolicy()
testRegisterSinkNoInput()
testAddRg.setPublishRateInBytes(10000);
testTableView()
testGenerateDocs()
testProducerSemaphoreInvalidMessage()
PulsarClientImpl(conf))
txnAckTestNoBatchAndCumulativeSub()
testTakeSnapshot(boolean
testAvoidUsingIoThreadToGetValueOfMessage()
testUpdateSourceFailedWithWrongPackageName()
testSchemaFailure()
testUseAutoConsumeWithBytesSchemaTopic()
testNonPersistentTopicTruncate()
testDisableReplicatedSubscriptions()
testLoopCreateAndDeleteTopicPolicies()
shouldSetDefaultRetryAnalyser()
TestInitializeWithNullData()
test2reportSame(String
clearTransactionBufferSnapshotTest()
testBroker()
testReplicateMaxUnackedMsgPerConsumer()
testSetProperties()
partitionedTopics(String
testPulsarSinkLocalRun(null,
test_reader_is_connected(self):
testTriggerBacklogQuotaSizeWithReader()
testUnAckMessageRedeliveryWithReceiveAsync(boolean
testCreateProducerTimeoutThenCreateSameNamedProducerShouldFail()
testSetupClusterWithMultiZkServers(boolean
testPooledMessageWithAckTimeout(boolean
testTopicLevelInactivePolicyUpdateAndClean()
testDeduplicationPriority()
testAccumulativeStats()
testRQCalcGlobUsedLessThanConfigTest()
namespace_propertyNamespace()
testThrowsExceptionWhenTenantNamespaceFunctionNameNotProperlyDelimited()
connectDataPrimitiveArraysTest()
testE2EPulsarFunctionLocalRun(jarFilePathUrl);
testInitTransactionReader(TxnLogBufferedWriterConfig
testUpdateSinkDifferentTransformFunction()
testTransactionBufferRecoverThrowException()
testManagedLedgerMetrics()
testSendAndConsumer()
testRedeliverCountOfDeadLetterPolicy()
testSink(CassandraSinkTester.createTester(true),
testGetTheSlowestNonDurationReadPosition()
testOperationPublishRate()
testPulsarSinkStatsBuiltinDoesNotExist()
streamingOffloadIndexBlockImplTest()
Arrays.toString(msg.getData()));
testListenerDuplicate_3()
testAutoCreationOfSystemTopicNamespaceEvents()
testPulsarSourceStatsBuiltinDoesNotExist()
doReturn(Optional.of(port)).when(config).getBrokerServicePort();
testPlacementPolicyCheckCTime(String
testDownloadTransformFunctionByName()
testUnackBlockRedeliverMessages(boolean
schemaKeyValueAvroSchemaTest()
testReadMessageWithBatching()
testJettyTlsServerInvalidCipher()
offsetTest()
testWebSocket(service.getWSUrl());
testNotSupportedAvroTypesRecord()
testFirstPositionIsOverLoad()
testNegativeUsedBucketCount()
testFlowPermitsWithMultiBatchesDispatch()
testGenericObjectFunction(GENERIC_OBJECT_FUNCTION_JAVA_CLASS,
canWriteSampleWithLabels()
testDoNotGetOffloadPoliciesMultipleTimesWhenTrimLedgers()
testGetReplicationClusters()
testDeregisterSourceBKPackageCleanup()
testReadMessageWithBatchingWithMessageInclusive()
testBatchReceiveAndRedelivery(String
testReplicatorRateApi()
teardown()
testActiveConsumerCleanup()
testProduceAndConsumeWithNormalUserToken()
testSortKeysSingle(SchemaType
testWithConsumer(Consumer<byte[]>
testGetWebSocketProduceUri()
testKubernetesRuntimeWithExposeAdminClientDisabled()
testParseProcessingGuaranteesField()
testSkipRedeliverTemporally()
testResourceGranularities(0.05,
bytesSchemaTest()
testPublisherStats()
compareToTest()
testSimpleBatchProducerWithStoppingAndStartingBroker(BatcherBuilder
testConsumerBacklogEvictionSizeQuota()
testChunkingMaxMessageSize()
testNullValueAction(NullValueActionTestConfig
testDefaultCryptoKeyReader()
testRetention0WithEmptyLedgerWithoutCursors()
testSkipCorruptDataLedger()
testInitialize()
shouldFailHandleLookup()
testStripNullNodes()
testDrainExceptions()
testTimeoutHandlingNoTimeout()
testEndTPRecoveringWhenManagerLedgerDisReadable()
testHistoryTopicContent(true,
testMultiConsumerRedeliveryAddEpoch(boolean
partitions.add(0L);
getInputStream()
testSink(SinkTester<ServiceContainerT>
testReplicatorInactiveTopicPolicies()
testGetNumberOfEntriesInStorage()
testSplitTaskWhenTopicJustOne()
testWindowedPulsarFunction.process(10L,
byteRecordSchemaTest()
testAppendBufferWithNotManageLedgerExceptionCanCastToMLE()
testDeleteWithAtMost2()
testElasticSearch8SinkSchemaEnabled()
txnIndividualAckTestBatchAndFailoverSub()
writeRecordFailed()
testSameSubName()
testRegisterSourceMissingArguments(
testEncodeAndDecodeObject()
testTransactionAddPublishPartitionToTxnReconnect()
simpleAnalyzeBacklogTest()
testProducerTooManyOnPMR()
shouldProvideConsistentAnswerToTopicLookups()
testShouldMaintainOrderForIndividualTopicInMultiTopicsConsumer()
testPulsarServiceAdminClientConfiguration()
testConvertAvroLong()
testMigrationWithExtra()
testUnchangedResponse()
cleanupOnClose(String
testSnapshotCache()
testDebeziumPostgreSqlConnect("org.apache.kafka.connect.json.JsonConverter",
tester.getServer().getBookieId().toString(),
testProduceWithInCompatibleSchema()
testAddForSameKey()
testRetryTopicProperties()
testMergeDifferentTransformFunctionClassName()
testPtUpdateWithPartialPartition()
testDeleteUnloadedOffloadedPartitionedTopicExistsInBk(Supplier<String>
testMessage.getSint64Field());
testSeekByFunction()
testNotSupportedAvroTypesFixed()
testSinkConfig.setTransformFunction("{\"test_function_config\":
testJavaConstructorWithoutDownloadDirectoryDefined()
testPulsarBatchSourceStatsBuiltin()
testPolicyIsDeleteTogetherAutomatically()
testPulsarSourceLocalRunMultipleInstances()
testNoBrokers()
isAckSetRepeatedTest()
testPartitionsUpdate(false,
testDebeziumOracleDbConnect(String
testWithoutMetadataStoreUrlInConfFile()
testTxnTimeRedeliverForShareSub()
testTopicConsumerConfigurationData(String
test_producer_send(self):
testSplitLargestBundle()
testMessageExpiryWithPosition()
testPrintResourceUsage()
testInfoLevelException()
testCleanupTopic()
testGetTopicPoliciesWithRetry()
testFailWhenAddData()
test_group_function()
testAddCompareCompareWithGuava()
test.build(schemaType);
testRanges.add(new
testNativeAvroSendCompressedWithDeferredSchemaSetup(boolean
testUpdateSchemaCompatibilityStrategyRepeatedly()
test_non_sorted_fields(self):
testBatchSourceConfigMissingDiscoveryTriggererClassName()
testGenericObjectFunctionKeyValue()
wrongKeyValueSchemaTest()
testTokenParamWithOutBearerPrefix()
testOrderingKeyWithHashRangeExclusiveStickyKeyConsumerSelector(boolean
testGetBytesOffsetNonZero()
LengthFieldBasedFrameDecoder(
testPackagesOps()
createKeyValueSchema(ApiVersion
testRemoveRangeInSameKey()
testPojoAsAvroAndJsonConversionToConnectData(Float.MIN_VALUE);
testUpdateFunctionFailedWithWrongPackageName()
testPersistentTopicsExpireMessagesInvalidPartitionIndex()
s3ValidationTest()
testJavaLoggingFunction()
testGetMatchingTopicsReturnsFilteredList()
TestDeleteDynamicConfiguration()
testUseTlsUrlWithPEM()
admin3.topics().updatePartitionedTopic(persistentTopicName,
testHealthCheckupDetectsDeadlock()
invocation.getArgument(0,
testChangedUnfilteredResponse()
connectDataPojoMapTest()
testMaxSubPerTopicPriority()
testE2EPulsarFunctionLocalRunMultipleInstances()
testElasticSearchSink7SchemaEnabled()
testRetentionSize()
testPulsarServicePulsarClientConfiguration()
testInvalidPriorityLevel()
@BeforeMethod(groups
testLargeQueue()
testKeyValueSchema(KeyValueEncodingType
testAutoCreatedPartitionedSystemTopic()
testReplicationWithSchema()
testDeleteCluster()
testOneListenerMultipleAddresses()
shouldFailHandleGetSchema()
testDeleteNamespaceForciblyWithManyTopics()
testOverride()
test_group_backwards_compat()
ackListMessage(boolean
LOG.info("received
testMaxProducersPerTopicUnlimited()
TimeUnit.SECONDS).untilAsserted(()
testTransactionBufferOpFail()
testReadMessages(topic,
testDeleteTenant()
testAddRg.setDispatchRateInMsgs(random.nextInt());
testAttributedNullTest()
@Test(groups
shouldFailHandleEndTxnOnPartition()
testMemoryLimit(Long
testGetWorkerServiceException()
testPostSchemaCompatibilityStrategy(ApiVersion
test_listener_name_client(self):
testReadFromConfigFileProxyProtocolException()
UUID.randomUUID();
testGetMessageIdByTimestamp()
testSplitBundleWithHighestThroughput()
testListenerDefaulting()
testMultiNonPartitionedTopicWithStartMessageId()
testBlocking()
testLookUpTopicNotExist()
testUpdatePartitionNumAndReconnect()
testAddRg.setDispatchRateInBytes(Long.valueOf(random.nextInt()));
testTokenAuth()
tester.get().getServer().suspendProcessing();
testTopicBundleRangeLookup()
test_produce_and_consume_complex_schema_data(self):
testNonPartitionedShadowTopicSetup()
test_exception_inheritance(self):
testEndTCRecoveringWhenManagerLedgerDisReadable()
namespace_invalidFormat()
tester.stopServiceContainer();
testUpdateIfLeaderFunction(boolean
testSendMsgFail(boolean
testSubscriptionTypesWithPartitionedTopic()
testSetFromSystemProperty()
primitiveTypeConsumerConsumerAlwaysCompatible()
testConsumerBacklogEvictionTimeQuotaPrecise()
testAutoProtobufNativeSchema()
testEncodeAndDecodeGenericRecord(Schema<org.apache.pulsar.client.schema.proto.Test.TestMessage>
testRegisterSourceMissingPackageDetails()
testProducerBuilderImplWhenDefaultCryptoKeyReaderIsNullString()
testCheckPositionInPendingAckState()
producerReconnection(String
testJsonSerialization()
testListenerCleanupByPartition()
testMockMetaStore()
closeInTimeTest()
primitiveTypeProducerProducerAlwaysCompatible()
testFilterOutForResponseInterceptFilter()
partitionedTopicNotAllowed()
testProduceFailed()
testPojoAsAvroAndJsonConversionToConnectData(Object
mockRequestTest()
testConcurrentlyDeleteSchema()
(PulsarClientImpl
tester.getServer().getBookieId();
testLowWaterMark()
testGetPersistenceApplied()
testCmdClusterConfigFile(clusterData,
testWaitForAny()
testCluster()
testEventGroups()
testDynamicConfigurationBrokerDeleteInactiveTopicsFrequencySeconds()
tesSkipMessageWithNonExistTopicAndNotExistSub()
producerBuilder.enableBatching(true).batchingMaxPublishDelay(2L
testManyFailures(String
testReplicateSubscriptionTypesPolicies()
testProducerPendingQueueSizeStats()
testConsumerCreatedWhilePaused()
testAddRg.setPublishRateInBytes(MESSAGE_SIZE);
testTransactionNotEnabled()
testAdminRequestWithSuperUserToken()
testGenericObjectRemoveFiledFunction()
testFilterOutForPreInterceptFilter()
testTopicDuplicationApi2()
testGetBacklogQuotaApplied()
testAuthenticate(String
namespace_missingCluster()
testMinMaxResource(null,
test_group_messaging()
testE2EPulsarFunction(fileServer.getUrl("/pulsar-functions-api-examples.jar"));
structTypeProducerConsumerUndefinedCompatible()
testGetPartitionsMetadataForNonPersistentTopic()
handlePartitionMetadataRequestWithServiceNotReady()
testGetLastMessageIdWithError()
testConsumerBacklogEvictionWithAckTimeQuota()
hashCodeUnbatchedTest()
testEncodeAndDecode()
testWithFixedDelays()
testGetAllPartitions()
testEndTransactionOpRetry(TxnStatus
testManyFailuresInAnEnsemble(String
testReaderReconnectAndRead(Supplier<String>
testAddress(String
testCmdSinkConfigFile(testSinkConfig,
txnAckTestNoBatchAndSharedSubMemoryDeleteTest()
testCreatedPartitionedConsumerSendsCloseConsumerAfterTimeout()
testMessageAckRateMetric(String
testInvokeJVMInternals()
multiNodesClientTest()
testDeleteWithLeastMost()
testBatchListAck(boolean
testGetSchemaCompatibilityStrategy()
primitiveTypeProducerConsumerAlwaysCompatible()
openStatusRecoverTrackerTest()
testGetSetSubscriptionDispatchRateAfterTopicLoaded()
test_async_func_with_custom_logger(self):
testTimeoutOnLookup()
testDynamicBrokerPort()
testDeletionAfterLedgerClosedAndRetention()
testDeleteOffloadedPartitionedTopicExistsInBk(Supplier<String>
testPeekMessage()
testChunkingWithOrderingKey()
testTransactionBufferMetrics()
testGetProtocol()
namespace_propertyNamespaceTopic()
testGetSizeBasedBacklogQuotaApplied()
testBatchMessageOOMProducerSemaphoreRelease()
verify(response,
integerRecordSchemaTest()
test_shutdown_client(self):
testExpiringTokenWithRefreshAndProducerRestart()
testProducerCreation()
testProduceToNonPartitionedTopic()
testV27ClientSetV28BrokerRead()
testInactiveProducerRemove()
testNPE()
testInParallel()
testUpdateCursorProperties()
testValidPriorityLevel()
testGetTopicListCommand()
testLastRange()
testPrepareFormat(String
testCheckSizeBasedBacklogQuota()
testCachedReadReturnsDifferentByteBuffer()
testUseAutoConsumeWithSchemalessTopic(SchemaType.NONE);
testMultipleAddress()
testElasticSearch7SinkRawData()
testProduceConsumeUsageOnRG(String
testBinaryProtoToGetTopicsOfNamespaceNonPersistent();
testLocalNamespaces.add(NamespaceName.get(this.testTenant,
namespace_oldStyleNamespaceTenant()
testGetWebSocketConsumeUri()
testCreatePyFunctionWithPackageUrl()
testClientWithTrustCert()
testSubstituteVariables()
testInChunkedReturnFalse()
test_group_broker_client_impl()
testProducerPendingQueueSizeStats(boolean
map.put("awsCredentialPluginParam",
testDeregisterBuiltinSinkBKPackageCleanup()
testProxy()
testNewAckForResponseFlushTimeout()
testActionsNoContinueOn()
testPulsarSourceLocalRun(null,
testBatchReceiveAndRedelivery(topic,
testListenerNotInvokedAfterDeregistered()
testDeleteOffloadedTopicExistsInBk(Supplier<String>
testSetupClusterDefault(boolean
testCreateTopicWithNotTopicNsOwnedBroker()
testPublishOffloadAndConsumeDeletionLag(Supplier<String>
testKafkaSink()
testHelp()
testMap()
testReadHandlerState()
testPulsarSinkStatsNoArchive()
testPojoAsAvroAndJsonConversionToConnectData(Double.MIN_VALUE);
testAutoUnsubscribePatternConsumer()
primitiveTypeConsumerProducerAlwaysCompatible()
test_get_last_message_id(self):
testNukeExistingClusterWithBookies(true);
testGetSlowTransactions()
testActionsRetry()
testCreateInitialSubscriptionOnPartitionedTopic()
testGetLastDisconnectedTimestamp()
testNoEntryCanBeReadWhenRecovery()
booleanSchemaTest()
testCreateJobName()
testDisableNamespacePolicyTakeSnapshot()
testExclusiveSingleAckedNormalTopic(boolean
testClientWithConfig(ElasticSearchConfig
tester.get().autoRecovery.getAuditor().isRunning())
testMultipleManagersShouldBeAbleToTakeAndReleaseLock(String
testResetCursorReturnTimeoutWhenZKTimeout()
testClazzBasedReaderByGenericWriterSchema()
testPojoAsAvroAndJsonConversionToConnectData(Short.MIN_VALUE);
testBookKeeperIoThreadsConfiguration()
testConsumerBacklogEvictionWithAckSizeQuota()
testNonKeySendAndReceiveWithHashRangeAutoSplitStickyKeyConsumerSelector(
testBatchMessagePublishAndConsume(Supplier<String>
testSimple(String
ackAbortTest()
testCassandraArchiveSink()
callsCancelActionWhenTimeoutHappens()
testActionsSuccess()
hierarchicalLedgerManagerAsyncProcessLedgersTest(String
testGetReplicatorRateApplied()
newNativeAvroProducerForMessageSchemaWithBatch()
brokerCloseTopicTest(boolean
TopicName.get(BrokerTestUtil.newUniqueName("persistent://pulsar/ns/topic-"
testDisableTopicPoliciesAndSetAlwaysInCompatibleOnNamespaceLevel()
testMessage.getFixed64Field());
test_basic_auth(self):
testConsumerCleanupOnSubscribeFailure()
testSubscriptionTypesEnableWins()
testAddRg.setPublishRateInBytes(Long.valueOf(random.nextInt()));
testAsyncSendOrAckForSingleFuture()
testNoKeyValueSchema()
testResourceGroupUpdate()
namespace_emptyTenant()
testDelete()
