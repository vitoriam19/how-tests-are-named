testEquals()
testReferenceValueSnak()
readDoesNotTrimLeadingTrailingWhitespace(String
testAddOrMergeStatementsAllMatching()
doPostThrowsIfCommand_getProjectReturnsNull()
randomIdGeneration()
testGroupSnaks()
testCoalesceInvalidParams()
exportSimpleMd()
urlImportingInvalidProtocol()
testDiffString()
testNoProperties()
testConnect()
testNoMainValue()
testV2()
testWikitextEvaluation()
readWithMultiLinedQuotedData(String
testValidate()
testNow()
testPreviouslyReconciled()
importTreeDataXmlTestDeprecated(){
WbDateConstant("2018-01-02_P234"));
testLogoutFailedBecauseCredentialsExpired()
testReconciledItemCell()
testUnsupportedVersion()
testElementWithNestedTree()
testReferences()
testDbConfig.setDatabasePort(Integer.parseInt(mySqlDbPort));
testConvertNull()
testSanitizeCookieKey()
exportSampleMd()
testTimeValue()
canParseSingleLineTriple()
testTimeSinceUnixEpochToDateEvalError()
testRangeInvalidParams()
encrypt()
testToNewEntity()
testDbConfig.setDatabaseHost(mySqlDbHost);
testDbConfig.setDatabaseType(MySQLDatabaseService.DB_NAME);
testDetectLanguage()
exportTemplateInRecordMode(){
parseCellValueWithText()
File(dir);
testGroupBySubject()
testSuggestedEntityIdValueType()
testCsrfProtection()
testTimeSinceUnixEpochToDateOneParam()
testCanParseLineBreak()
readTrimsLeadingTrailingWhitespaceOnTrimStrings(String
testConnection(DatabaseConfiguration
testEvaluateBCE()
testReconciledCellWithInvalidFormat()
testExportSqlWithSingleQuote()
testReferenceNoValueSnak()
testLoadNullLanguage()
testJythonConcurrent()
testRangeValidTripleStringParams()
trimAndAutodetectDatatype(String
serializeProjectMetadata()
WbDateConstant("2018-partly
testFailingRecon()
testSerialize()
testInvalidManifestFormat()
@Test(groups
testFilePathEvaluationWithInvalidPath()
processRecordsFromComplexXmlWithTagsHavingWhitespaces()
testGetInstance()
testNumberParsing_parsableLong()
exportTemplateWithProperEscaping()
testPurge()
testUrls()
testUploadNewFile()
testAddStatements()
testGetRows()
testJsonSerialization()
testEvaluateWithPrecision()
testReconciledPropertyCell()
testDbConfig.setDatabaseUser(mySqlDbUser);
testOptionalNameDesc()
testElementsWithVaryingStructure()
readWithMultiLinedQuotedDataAndBlankLines(String
testInc()
testExportSqlNoSchema()
testMatch()
testFillDownRows()
testAddOrMergeStatementsNoMatching()
readDoesNotTrimLeadingTrailingWhitespaceOnNoTrimStrings(String
hasValidationError("Empty
testUtil.generateMySQLTestData();
testUnmatchedCell()
testNewItemCell()
testGetFunctionsAndKeyers()
testCreateWithoutSubject()
testFileNameSerialization()
testQids()
testEquality()
testMediaInfoReferringToNewItem()
mock(BasicApiConnection.class);
testWholeText()
testExportSqlWithNonZeroScaleNumericValue()
testConvertJsonArray()
testNameDesc()
testExportSqlWithSpecialCharacterInclusiveColumnNames()
testSubjectRewritten()
testNotCreatedYet()
testSubjectSkipped()
testEmptyStatements()
testParseUriInvalidParams()
showErrorDialogWhenWrongFormat()
testNewMedia()
testCSRFProtection()
testRetries()
sortArray()
deleteProjectAndSaveWorkspace()
testMatchStatements()
testElementWithMqlReadOutput()
testNullStringValue()
testEncode()
testMatched()
testParseConfigWithCW()
readQuotedData(String
{"'{a:[2,1,1,3]}'.parseJson().a.uniques().toString()",
sortJsonArray()
testMainValueSnak()
testMonolingualText()
testGetConnection()
stringLiteralToString()
testNotPreviouslyReconciled()
testSomeValue()
testConvertString()
processRecordsFromXmlWithWhiteSpacesBeforeTagsTest()
testAddStatementsNoMatching()
testInnerHtml()
testInvalidSpace()
testNGramKeyer()
testHashCode()
testConstructor()
WbDateConstant("invalid
testExponent()
testInvalidRegex()
testNoSchemaTemplate()
testImportGZipCompressedFiles()
testDbConfig.setUseSSL(false);
tests](#functional-tests).
testDeletedStatement()
tests](https://docs.openrefine.org/technical-reference/functional-tests)
testMerge()
extractSpreadSheetIdTest()
doPostCatchesExceptionFromWriter()
testSuccessfulRewrite()
testMissingVersion()
testDescriptionParamsReturns()
tests](/technical-reference/functional-tests).
testFilePathSerialization()
testDeleteStatements()
testContributeToLabel()
testToString()
testtoPhoneticInvalidParams()
testMultipleConnections()
testMergeWithPids()
testAllocateFileDeduplication()
testNullArgsMath()
processRecordsFromXMLWithDataHavingWhitespaces()
testV1()
reverseArray()
testToEntityUpdateOverridingWikitext()
testTestConnection()
testConvertInt()
testRewriteUpdateOnPreviouslyCreatedEntity()
testInvalidVersion()
testMergeNoPids()
testFacetCount()
testMatchWithPids()
testEditOneCell()
testCallInvalidParams()
importUnsupportedZipFile()
testDeleteAllStatements()
testGetAll()
testMatchNoPids()
testComplexJsonStructure()
testWriteHistoryEntry()
testUsernamePasswordLogin()
reverseJsonArray()
getContentType()
testDiffOffsetDateTime()
testNumberParsing_parsableDouble()
testEvaluateInvalidSubjectType()
testXmlText()
testOldToken()
testCall()
uniquesMixedArray()
testUnmodifiableNameDescsList()
testDetectLanguageInvalidParams()
hasValidationError("Invalid
testRewriteCreate()
testExportSqlNoContent()
testMaxlagException()
replaceEachValidParams()
testInvalidFilePathFastMode()
Assert.assertNotNull(dbService);
testGenerateValidToken()
testGenerateIssues()
testLabelSkipped()
testEditWikitext()
testInvalidFilePath()
DatabaseService.get(testDbConfig.getDatabaseType());
findRecordTestXmlDeprecated(){
testAddOrMergeStatementsMatching()
testInvalidSchemaTemplate()
testStatementSkipped()
testLoadSingleLanguage()
testSuccessfulLocalUpload()
testBuildLimitQuery()
testGetMidFromFilename()
testToEntityUpdate()
testNewItemsWithDuplicateLabelAndDescription()
testExponentialRetries()
testMergeStatements()
testDeserializeOlderFormat()
testExecuteQuery()
testContributeToAlias()
testConvertFloat()
exportSimpleHtmlTableNoHeader()
testDbConfig.setDatabasePassword(mySqlDbPassword);
testInvalidToken()
testConvertJsonObject()
Date();
testDbConfig.setDatabaseName(mySqlDbName);
testParseConfigWithCCW()
testSerializeStatements()
testGet()
testDiffInvalidParams()
testNoSchema()
testOffsetDateTimeDatePart()
setsProjectMetadata()
testImpossibleScheduling()
testUnreconciledCell()
testLoadMultiLanguages()
testExportSqlIncludeSchemaWithDropStmt()
testIncompleteSchemaWithoutName()
testMainSomeValueSnak()
testTimeSinceUnixEpochToDateTwoParam()
testQuantity()
importXmlWithVaryingStructureTestDeprecated(){
testMatching()
testAddStatementsMatching()
testDeserializeMediaInfo()
testAllowedNoMainValue()
testDecode()
testGuessTypes()
testGlobeCoordinates()
testAddFileColumn()
testSaveAndLoadFile()
testNoManifest()
testExportSqlWithNotNullColumns()
TermedStatementEntityUpdateBuilder(existingSubject).addStatement(statement1)
unwrapPyObjectTest()
testGetColumns()
testRewriteUpdateOnExistingEntity()
canThrowError()
testReconciledCellWithInvalidEntityType()
testParseUriValidParams()
testDecodeInvalidParams()
decrypt()
processRecordsFromComplexXmlStructure()
testFileNameEvaluation()
testRewritePropertyUpdateOnExistingEntity()
joinArray()
testNullExpressions()
testConvertNoField()
WikibaseSchema.reconstruct(schemaJson);
testSimpleProject()
testGetAllProperties()
testSubjectNotRewritten()
testUnmodifiableStatementGroupsList()
testSerializeDeleteStatement()
testEvaluateWrongSubjectType()
testSkipped()
testEncodeInvalidParams()
testInvalidJson()
testInvalidParams()
TermedStatementEntityEditBuilder(existingSubject).addStatement(statementUpdate1)
serializeReconMarkNewTopicsOperationWithService()
testEvaluate()
replaceEachInvalidParams()
testReconciledMediaInfoCell()
testWithSubjectId()
testGetOrAllocateColumn()
exportSimpleOds()
testWhitespace()
testJSONMinimumArray()
testJsonDatatypes()
testGetCreateSql()
testExportSimpleSql()
testSuccessfulRemoteUploadInvalidToken()
testFilePathEvaluationWithLocalPath()
testMissingCSRFToken()
readExcelDates()
testIncompleteSchema()
testSuccessfulRemoteUpload()
testContributeToDescription()
testGetters()
testInvalidArguments()
testConvertBool()
WbStringConstant(""));
testEditPage()
uniquesArray()
testDeleteStatement()
testExportSqlWithNullFields()
testFilePathEvaluationWithURL()
testMultipleBatchesMediaInfo()
testNoValue()
unwrapPyObjectTest(){
intLiteralToString()
testNullCell()
readIgnore3_Header2_Skip2_limit2(String
