shouldUrlEncodeUsernameInPollRequestBody()
shouldNotProcessOutOfScopeHistoryRecordIfOptionSet()
shouldGetContentDecoded()
shouldThrowIfDefaultScannerStrengthIsSetToDefault()
shouldNotFindParameterFromUnknownValueType()
testShouldFailWhenSameValuesInExcludeCriteria()
shouldNotSubmitSameGetTaskWithDuplicateHeaders()
shouldReturnAddedSiteModifyingVariants()
shouldExtractParametersFromEncodedPathSegments()
shouldDecodeCustomPageWithDefaultMatcherLocationIfMatcherLocationIdInvalid()
shouldSetValidAlertRef()
testStatus()
shouldExtractUrlFromRefreshHeader()
shouldDownloadBigFile()
shouldKeepHostHeaderIfValueMatch()
shouldImportContextWithScriptSessionMgmtType()
shouldNotScanDirStartNodeChildrenIfScanChildrenIsDisabled()
shouldReportAddOnsWithExtensionsWithRunningIssuesSinceLastRun()
shouldNotExtractUrlIfNoUrlHeadersPresent()
shouldHandleExceptionsThrownByFilters()
shouldConstructWithNonNullNode()
isPage500ShouldReturnTrueIfCustomPageMatches()
shouldNotSetContentEncodingsWhenSettingHttpResponseBody()
shouldSubmitTasksForDifferentSpiderResources()
shouldCheckPage500WithParent()
shouldReturnCorrectRegexForWithPathNoSlashNoParams()
shouldThrowExceptionOnTooLongAlertRef()
testAlpha2UpdatesAlpha1()
testDevBuildLaterThan1_4_1()
shouldDecodeResponseIfNeededButNotSetContentLengthIfNotPresent()
testParseCookieHeaderEmpty()
shouldIdentifyLoggedInRequestHeaderWhenLoggedInIndicatorIsSet()
shouldTraverseParentsUntilHostNodeForRegex()
shouldReturnCachedHistoryReference()
isCustomPageShouldReturnFalseWhenContextIsNull()
shouldReturnCorrectRegexForNoPathWithSlashWithParams()
shouldIncreaseModCountIfContentsChanged()
shouldNotBeEqualToDifferentHttpBodyAndEncodings()
shouldSetMessage()
shouldNotSetContentEncodingToBodyIfContentEncodingNotSupported()
shouldGetBodyString()
shouldHaveNullValuesForMissingValuesWhenRawParsing()
shouldNotFailIfGivenUnsupportedArgumentAndNotReportUnsupported()
getAllTechShouldHaveTech()
shouldPollWhenForced()
shouldHandleScriptExceptionWhenRefreshAndExecutingCachedScripts()
shouldReturnCorrectRegexForWithPathWithSlashNoParams()
isClientErrorShouldReturnTrueIfCustomPage404ButStatusCodeDoesNotMatch()
shouldHaveRootLevelSetToInfo()
@SuppressWarnings("unchecked")
shouldFindUrlsInAppletElements()
shouldUseExistingLog4jConfiguration()
shouldSetContentEncodingsWhenSettingRequestBodyString()
shouldReturnCustomVariants()
shouldAddValidView()
isCustomPageShouldReturnFalseWhenCustomPageDoesNotMatch()
shouldReturnShortPathTree()
test_zap_ajax_spider_uses_user(self):
shouldReturnCorrectNameForPostNoPathNoSlashWithParams()
shouldGenerateFormWithEscapeHtmlChars()
shouldIgnoreEmptyHost()
shouldReturnNullLeafNameWithScriptException()
shouldDecodeCustomPageWithIsRegexFalseWhenIsRegexComponentInvalid()
shouldSetDeflateEncodingToBody()
shouldHandleContentEncodingErrorsWhenEncoding()
shouldNotBeWebSocketUpgradeIfResponseMissUpgradeHeader()
shouldNotSubmitSameGetTaskWithDifferentDepthAndIgnore()
shouldUpgradeFrom2_9_0()
testNotAddonNoState()
shouldThrowIfDefaultScannerLevelIsSetToDefault()
testShouldFailWhenExcludeCriteriaWithMoreValues()
shouldSetContentWithoutEncodingIfNoContentEncoding()
shouldSetBodyStringWithHeaderCharset()
test1_4_2LaterThan1_4_1()
shouldUseMediumIfDefaultScannerLevelFromConfigIsDefault()
shouldNotCacheDisabledScripts()
shouldPollEveryFailingRequest()
shouldCheckPageAuthIssueWithContext()
shouldNotGetTokensFromInputFieldsWithNoIdNorName()
shouldImportContextWithUnknownSessionMgmtType()
isPage500ShouldReturnFalseIfNoStatusCodeOrCustomPageMatchesButCustomPage200Does()
shouldHaveAppenderInRootLevel()
testSpiderParser.addSpiderParserListener(listener);
shouldFindUrlsInObjectElements()
shouldReturnNullLeafNameWithDisabledScript()
shouldReplaceToken()
shouldHaveExpectedI18nTypeNames()
shouldInjectAndEscapeSegmentModification()
shouldNotSubmitSamePostTaskWithDifferentDepthAndIgnore()
shouldIdentifyLoggedOutRequestWithComplexRegex()
shouldGetSameDecodedContent()
shouldUseUsersOfFirstMatchedContextIfMessageApplicableToMultiple()
shouldChangePolicyNameIfModifyingUpperOrLowerCase()
shouldReturnCorrectRegexForWithPathNoSlashWithParams()
testCanLoadAddOnNotBeforeNotFrom()
shouldExecuteCachedScripts()
shouldAddSpecifiedHeaderWhenSetDirectly()
shouldHaveZapPackageSetToInfo()
shouldNotSetContentIfNull()
shouldNotQuoteFunctionHeader()
testComparitor()
shouldNotScanNodeWithScannerHistoryReference()
shouldGetContentSameAsBytesIfNoContentEncoding()
shouldReturnGetLeafNameWithOneParam()
shouldSetDataIntoBodyGzipEncoded()
test_zap_ajax_spider_raises_exception_if_not_started(self):
shouldThrowExceptionWhenSettingNullContentEncodings()
shouldScanDuplicatedChildDirNodes()
shouldScanStartNodeAndChildrenWithDifferentMethodsAndData()
shouldUpdateResponseContentLength()
shouldDecodeContent()
shouldSetShouldIgnore()
shouldHaveHostNameForUriWithJustAuthority()
shouldSkipIrrelevantQueryParametersWhenCleaningParametersIn_IGNORE_VALUE_mode()
shouldDefaultAlertRefToPluginId()
shouldContainFilteredValueAndNullReasonInToStringForNotFilteredResult()
testParseCookieHeader(String
shouldFallbackToPrintExceptionsIfLoggerHasNoAppenders()
shouldNotReplaceAnyTokensIfRefreshMessageDoesNotHaveAny()
shouldExtractParametersFromPathSegments()
shouldCreatePolicyFileIfSavingPolicy()
shouldFindUrlsInIsIndexElements()
shouldDecodeCustomPageWithEnabledFalseWhenEnabledComponentInvalid()
shouldHaveEmptyNamesForMissingNamesWhenRawParsing()
shouldFindSiteRootNodeWithUriIfPresent()
shouldHaveNotFilteredInstance()
shouldCallNetworkApiWhenObtainingRootCaCert()
test_zap_tune(self):
shouldProcessOutOfScopeHistoryRecordByDefault()
shouldOrderByTypeThenNameThenValue()
shouldHandleContentEncodingErrorsWhenDecoding()
shouldReturnCorrectRegexForNoPathNoSlashWithParams()
testEmptyFilterValuesIncludeCriteria()
testShouldFailInExcludeCriteriaWithMoreFilterValues()
shouldAddHostHeaderIfNotPresent()
shouldSetCorrectContentLengthWithAntiCsrfTokens()
shouldUpdateAndKeepOnlyOneHostHeader()
shouldImportContextWithNoAuthenticationMethod()
shouldHaveSpecificCategory()
shouldNotCreateVariantScriptsIfExtensionScriptIsDisabled()
shouldSkipIfNoEnabledActiveScripts()
shouldGetDataFromHeaderAndBody()
shouldNotSetNullSiteNodeWhenConstructing()
shouldNotSubmitSameGetTaskWithDifferentHeaderWhitespaces()
testImplementation("com.github.tomakehurst:wiremock-jre8:2.34.0")
shouldAddSpecifiedHeaderToSpecifiedHost()
shouldSetContentEncodingsWhenSettingRequestBodyByte()
shouldImportContextWithJustName()
shouldGetTokensFromInputFieldsIfIdIsAKnownToken()
shouldHandleExceptionsThrownByActiveScript2()
testIncludeCriteriaWithMoreValues()
shouldNotPrintThreadDead()
shouldOrderByTypeThenPositionThenNameThenValue()
shouldUseButtonFormMethodIfPresentGET()
shouldSetContentEncodingsWhenSettingResponseBodyString()
shouldInjectSegmentModification()
shouldThrowExceptionForNullUri()
shouldProduceDifferentHashCodeFromDifferentBodyAndEncodings()
testDailyUrl()
shouldHaveSpecificPluginId()
shouldScanStartNodeAndMatchingChildrenSiblingsIfScanChildrenIsEnabled()
shouldReturnCorrectNameForPostWithPathNoSlashNoUrlParams()
shouldDefaultToNoPersistentCallbacks()
shouldReplaceNullValueAsStringInArray()
isSuccessShouldReturnTrueIfStatusCodeMatches()
shouldNotCallScanIfScriptDoesNotApplyToHistoryType()
testIsAddon()
shouldGetJustOneTokenFromInputFieldIfNameAndIdAreAKnownToken()
shouldSetDataIntoBody()
shouldWriteReportWhenPathContainsHashSymbol(@TempDir
getTech()
shouldCreateUriFromAuthority()
shouldGetTokensFromInputFieldsIfNameIsAKnownToken()
shouldThrowExceptionWhenSettingMalformedHeader()
shouldExtractRelativeUrlFromContentLocationHeader()
shouldInitViewWhenStartingExtensionWithView()
isServerErrorShouldReturnFalseIfCustomPage200Matches()
shouldNotAddSameType()
shouldFailToExtractParametersFromUndefinedMessage()
shouldReturnDefaultVariants()
shouldHaveViewAfterInitView()
shouldOrderByTypeThenPositionThenName()
shouldNotReplaceAnyTokensIfRequestMessageDoesNotHaveAnyAntiCsrfTokens()
shouldRemoveTypeInfo()
shouldNotFindSiteRootNodeWithUriIfTreeEmpty()
shouldSetStringBodyUsingCharsetSetAndContentEncode()
shouldHaveScanJsonNullValuesDisabledByDefault()
shouldNotLogThreadDead()
shouldNotGetTokensFromInputFieldsIfIdIsNotAKnownToken()
shouldHaveHostNameForUriWithHost()
shouldReturnEmptyNameAndNullValueWhenRawParsingEmptyString()
shouldHaveHighestListenerOrder()
shouldReturnCorrectNameForPostNoPathNoSlashNoParams()
isSuccessShouldReturnTrueIfCustomPage200ButStatusCodeDoesNotMatch()
shouldUseTechSetOfFirstMatchedContextIfMessageApplicableToMultiple()
@Timeout(5)
shouldNotFindSiteLeafNodeWithUriIfTreeEmpty()
shouldNotBeEqualToDifferentEncodings()
testGuiImplementation("org.assertj:assertj-swing:3.17.1")
shouldReturnCorrectRegexForWithPathWithSlashWithParams()
shouldExtractRelativeUrlFromRefreshHeader()
shouldBuildAlertWithTwoTagsWhenOneSetAndOneAdded()
testImplementation("com.github.tomakehurst:wiremock-jre8:2.32.0")
shouldUseMediumIfDefaultScannerStrengthFromConfigIsDefault()
shouldCreateHtmlParameterWithNullValue()
testNotAddonBadStatus()
shouldReplaceUsernameInPollRequest()
shouldHaveNoDependencies()
shouldReturnPostLeafNameWithOnePostParam()
shouldNotReplacePasswordInPollRequest()
shouldRefreshCachedScriptIfChanged()
shouldGetBodyBytesIgnoringUnsupportedEncoding()
shouldKeepOriginalNameIfMalformedWhenParsing()
shouldBeBreakpointIfRequestAndBreakingOnAllRequests()
shouldRefreshAndExecuteWithScriptWrapperAndCachedScripts()
shouldIdentifyLoggedInRequestWithComplexRegex()
isPage200ShouldReturnTrueIfCustomPage200DoesNotMatchButStatusCodeDoes()
shouldSendMessageWithScanRuleIdHeaderIfEnabled()
shouldReturnLongPathTree()
shouldExtractMultipleDdnsAsParams()
testMainVersion()
shouldReturnNullTreePathWithDisabledScript()
shouldScanWithCopy()
shouldProduceSameHashCodeForEqualBodyAndEncodings()
testNotAddonBadExt()
shouldNotFindSiteRootNodeWithUriIfNotPresent()
shouldImportContextWithNoForcedUser()
isPage404ShouldReturnTrueIfCustomPageMatches()
shouldResetContentEncodingErrorsWhenSettingContentEncodings()
shouldSetBodyBytesIgnoringUnsupportedEncoding()
shouldBackupLegacyLog4jConfiguration()
shouldNotScanNullStartNodeAdded()
shouldReturnEmptyListWhenParsingNullString()
isPageAuthIssueShouldReturnFalseIfCustomPage200Matches()
shouldSubmitTasksForDifferentMethods()
shouldReplaceNullValueAsStringInObject()
isServerErrorShouldReturnFalseIfCustomPage404Matches()
isSuccessShouldReturnFalseIfNeitherCustomPage200NorStatusCodeMatch()
shouldBeBreakpointIfResponseAndBreakingOnAllResponses()
shouldReportCurrentEventPublishersAndEvents()
shouldThrowWhenSettingNullTechSet()
shouldNotThrowExceptionIfResponseIsEmpty()
shouldNotFindSiteLeafNodeWithUriIfNotPresent()
shouldHaveParametersListEmptyByDefault()
isServerErrorShouldReturnTrueIfCustomPage500Matches()
shouldHaveListenerOrderLowerThanProxyListenerOrder()
shouldCorrectlyMutateFromConnectHttpMethodWhenGenericPort()
isPage500ShouldReturnTrueIfCustomPageDoesNotMatchesButStatusCodeDoes()
shouldReturnOverridenPathTree()
shouldThrowExceptionWhenAddingViewWithoutModel()
shouldCreateConnectRequest()
testCanLoadAddOnNotFrom()
isPage500ShouldReturnFalseIfNeitherCustomPage500NorStatusCodeMatch()
shouldSetTechSetIntoPlugin()
shouldReturnCorrectNameForPostNoPathWithSlashWithParams()
shouldNotNotifyRemovedListenerOfResourceFound()
shouldExportAllAuthContextData()
shouldExtractUrlsFromLinkHeader()
isSuccessShouldReturnFalseIfCustomPage404Matches()
shouldProcessInScopeHistoryRecord()
shouldSkipPluginIfItDoesNotTargetTechSet()
shouldNotGetTokensWithoutForms()
shouldCacheEnabledScriptsAndIgnoreDisabledScriptsWhenRefreshing()
isPageAuthIssueShouldReturnFalseIfNeitherCustomPageAuthIssueNorStatusCodeMatch()
shouldNotChangeResponse()
shouldGenerateFormWithUrlDecodedParameters()
shouldSetBodyStringIgnoringUnsupportedEncoding()
isClientErrorShouldReturnFalseIfCustomPage200Matches()
shouldSetBytesBodyUsingCharsetSetAndNotContentEncode()
shouldSetContents()
testSpiderParser.notifyListenersResourceFound(message,
shouldLogError()
shouldNotScanNodeNotInScope()
shouldHaveExpectedI18nLocationNames()
shouldFindUrlsInImportElements()
shouldImportContextWithNoAuthorizationDetectionMethod()
shouldCreateAddOnLoaderFromEmptyDirectory()
shouldNotHaveContextByDefault()
shouldPropagateExceptionThrownByAppliesToHistoryTypeIfNotNoSuchMethodException()
shouldNotThrowIfExtensionScriptIsNull()
isPage200ShouldReturnFalseIfNeitherCustomPage200NorStatusCodeMatch()
shouldSetContentEncodingsAndCopyList()
shouldNotImportContextWithUnknownForcedUser()
shouldNotCacheScriptsThatDoNotImplementInterface()
testSpiderParser.notifyListenersResourceFound(resourceFound1);
shouldAddDefaultHeaderWhenSpecifiedHeaderUnsetDirectly()
shouldIdentifyRequestAsLoggedInWhenNoIndicatorIsSet()
shouldInjectEscapedSegmentModification()
shouldReplaceOnlySpecifiedTag()
shouldThrowExceptionOnInvalidAlertRef()
@SuppressWarnings("deprecation")
shouldNotBeBreakpointIfNotResponseAndBreakingOnAllResponses()
shouldReturnRunningTasks()
isPage200ShouldReturnFalseIfCustomPage404Matches()
shouldInjectParamValueMultipleTimesModificationInFileNameParam()
shouldBeEqualToExtendedHttpHeaderField()
shouldNotNotifyListenersOfMalformedProcessedUrl()
shouldNotBeBreakpointIfNotRequestAndBreakingOnAllRequests()
shouldUseFirstContextIfMessageApplicableToMultiple()
shouldSetContentEncodingsWhenSettingResponseBodyByte()
shouldChangePolicyFileNameIfModifyingPolicyName()
shouldNotIncreaseModCountIfContentsNotChanged()
shouldReturnEmptyListWhenRawParsingNullString()
shouldSkipPluginsIfNoStartNodes()
shouldSetDepth()
shouldHaveEmptyUserListByDefault()
shouldPollOnSpecifiedNumberOfRequests()
shouldReturnCorrectNameForPostNoPathNoSlashNoUrlParams()
shouldCreateAddOnLoaderFromDirectoryWithAddOnsWithIssues()
shouldOrderByTypeFirst()
shouldCheckPage200WithContext()
shouldFailToParseAnUndefinedMessage()
isClientErrorShouldReturnFalseIfCustomPage500Matches()
shouldNotSetDataWithNullMessage()
shouldReturnPostMultiPartLeafName()
shouldCorrectlyMutateToConnectHttpMethod()
shouldIdentifyLoggedOutRequestHeaderWhenLoggedInIndicatorIsSet()
shouldKeepOnlyOneHostHeader()
shouldScanStartNodesAdded()
test_zap_set_scan_user_triggers_hooks(self):
shouldFindUrlsInString()
shouldNotScanStartNodeChildrenIfScanChildrenIsDisabled()
shouldSetBodyBytesWithHeaderCharset()
shouldQuoteValueThatLooksLikeAFunctionWithWhitespaceEtc()
shouldSetEmptyHeaders()
shouldGetBodyStringIgnoringUnsupportedEncoding()
allShouldHaveMoreTech()
shouldThrowExceptionWhenGettingLeafNameWithNullMethod()
shouldBeEqualToItself()
isPage500ShouldReturnTrueIfNoCustomPageMatchButStatusCode500()
shouldCallParentWithTagAdded()
isPage404ShouldReturnFalseIfNoStatusCodeOrCustomPageMatchesButCustomPage200Does()
shouldReplaceMultipleTokens()
isPage404ShouldReturnTrueIfCustomPageDoesNotMatchAndAnalyserIndicates404()
shouldCheckPageOtherWithContext()
shouldThrowExceptionWhenAddingTagWithoutParent()
shouldReturnNullTreePathWithScriptException()
shouldNotScanStartNodeMatchingChildrenSiblingsIfScanChildrenIsDisabled()
shouldThrowExceptionForNegativeDepth()
shouldHaveAllTechSetByDefault()
shouldFindUrlsInEmbedElements()
shouldNotInitViewWhenStartingExtensionWithoutView()
shouldParseAnyMessageEvenIfAlreadyParsed()
@Timeout(25)
shouldThrowExceptionWhenAddingViewWithoutPane()
shouldCheckPage404WithParent()
shouldRefreshAndExecuteCachedScripts()
shouldScanStartNodeAndAllChildrenIfScanChildrenIsEnabled()
shouldNotAddAuthHeaderWhenNotDefined()
shouldNotAddSpecifiedHeaderWhenUnsetDirectly()
shouldNotCacheScriptsThatHaveErrors()
shouldKeepOriginalValueIfMalformedWhenParsing()
shouldNotAllowToConstructWithNullNode()
test_zap_set_scan_user_with_one_user(self):
shouldNotScanNodeWithoutHistoryReference()
shouldNotCompareIfAlertRefDifferent()
shouldCreateScriptsCache()
shouldReturnCorrectNameForPostNoPathWithSlashNoUrlParams()
isPage500ShouldReturnFalseIfCustomPage200Matches()
shouldGetEmptyDataFromNullMessage()
shouldSavePersistentCallbacks()
shouldGenerateFormWithParameters()
shouldSetContentEncodingsAndNotAllowModificationsToReturnedList()
testImplementation("com.github.tomakehurst:wiremock-jre8:2.31.0")
shouldSetHeaders()
shouldDecodeCustomPageWithDefaultTypeIfTypeIdInvalid()
shouldImportContextWithNoPollData()
shouldCreateSlashNodeIfUriEndsWithASlash()
isPage404ShouldReturnFalseIfNoStatusCodeOrCustomPageMatchesButCustomPage500Does()
shouldSetContentEncodingsToResponse()
shouldReturnCorrectRegexForNoPathNoSlashNoParams()
shouldDecodeResponseIfNeeded()
shouldImportAllAuthContextData()
shouldNotSetContentEncodingsWhenSettingHttpRequestBody()
shouldCallNetworkApiWhenGeneratingRootCaCert()
shouldBeEqualToEqualHttpBodyAndEncodings()
shouldSetMethod()
shouldProduceDifferentHashCodeFromDifferentEncodings()
shouldSetStringBodyUsingDefaultCharsetAndContentEncode()
shouldListenerOrderMaxInt()
shouldLogExceptionIfRootLoggerHasAppenders()
shouldHaveExpectedName()
isPage500ShouldReturnFalseIfNoStatusCodeOrCustomPageMatches()
testImplementation("org.mockito:mockito-junit-jupiter:4.8.0")
shouldTreatEmptyStringsAsNulls()
isClientErrorShouldReturnTrueIfCustomPage404Matches()
shouldImportContextWithHttpSessionMgmtType()
shouldNotFindSiteLeafNodeWithUriAndMethodIfMethodIsDifferent()
shouldReturnGetLeafNameWithTruncatedParam()
shouldPropagateExceptionThrownByAppliesToHistoryTypeIfNotCausedByMissingMethod()
shouldHandleScriptExceptionWhenRefreshAndExecutingWithScriptWrapperAndCachedScripts()
shouldExtractUrlFromContentLocationHeader()
shouldReturnNoSiteModifyingVariantsByDefault()
shouldThrowExceptionWhenSettingANullContentEncoding()
allShouldHaveTech()
shouldScanNonFilteredNode()
shouldGetUnsavedResourcesFromExtensionsWhileHandlingErrors()
shouldThrowExceptionForNullHeaders()
shouldSkipSessionTokensWhenCanonicalizing()
isPage500ShouldReturnFalseIfNoStatusCodeOrCustomPageMatchesButCustomPage404Does()
shouldReturnDefaultLeafNameWhenVariantRemoved()
shouldHaveAName()
testWinUrl()
isPage404ShouldReturnTrueIfNoCustomPageMatchButStatusCode404()
testSpiderParser.processURL(message,
shouldEncodeCustomPage()
shouldReturnNoVariantsWhenUnset()
shouldReturnCorrectNameForPostWithPathWithSlashWithSameUrlAndPostParams()
shouldNotSetContentEncodingsToResponseIfNoneInHeader()
shouldNotOverrideNoType()
shouldRemovePersistentCallbacks()
shouldAppendBytesBodyUsingDefaultCharsetAndNotContentEncode()
isPage404ShouldReturnFalseIfNeitherCustomPage404NorStatusCodeMatch()
shouldSetGzipEncodingToBody()
shouldUpdateHostHeaderInPlace()
shouldCheckPage404WithContext()
shouldNotSubmitSameGetTaskWithDifferentHeaderCases()
shouldGetTokensFromInputFieldsIfIdAndNameIsAKnownToken()
shouldPollOnSpecifiedNumberOfRequestsPerUser()
shouldReturnEmptyNameValuePairWhenParsingEmptyString()
shouldReturnGetLeafNameWithTwoParams()
shouldHaveAppendersInRootLevel()
shouldFindUrlsInVideoElements()
shouldNotCallScanNodeOnDisabledActiveScript2()
shouldScanStartNodeAndChildrenIfScanChildrenIsEnabled()
testImplementation("org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion")
shouldGetDataFromBody()
shouldDestroyExtensionWhenRemoved()
shouldHandleScriptExceptionWhenExecutingCachedScripts()
shouldGetActiveActionsFromExtensions()
shouldReturnCorrectNameForPostWithPathWithSlashWithParams()
shouldReturnAllVariantsWhenSet()
shouldImportContextWithUnknownAuthenticationMethod()
testId()
isPage404houldReturnFalseIfCustomPage500Matches()
shouldAppendStringBodyUsingCharsetSetAndContentEncode()
shouldSetDataIntoHeaderAndBody()
shouldBuildAlertWithOneTag()
shouldReturnOverridenLeafNameWithOneParam()
shouldAddTypeInfo()
shouldIdentifyLoggedInRequestBodyWhenLoggedOutIndicatorIsSet()
shouldLogExceptionsIfRootLoggerHasAppenders()
shouldNotFindSiteBranchNodeWithUriIfTreeEmpty()
testAppender.getLogEvents())
shouldIdentifyLoggedOutRequestBodyWhenLoggedInIndicatorIsSet()
test_zap_set_scan_user_with_bad_user(self):
shouldSetBytesBodyUsingDefaultCharsetAndNotContentEncode()
shouldGetEmptyDataWithEmptyHeader()
shouldGetBodyBytes()
shouldCorrectlyMutateFromConnectHttpMethodWhenHttpsPort()
shouldFindUrlsInInputElements()
isClientErrorShouldReturnTrueIfStatusCodeMatches()
testImplementation("org.hamcrest:hamcrest-core:2.2")
shouldAddApiElements()
shouldHaveCorrectSize()
shouldLoadPersistentCallbacks()
shouldDecodeCustomPage()
testImplementation("org.mockito:mockito-junit-jupiter:4.0.0")
shouldNotifyListenersOfProcessedUrl()
shouldIdentifyLoggedOutRequestBodyWhenLoggedOutIndicatorIsSet()
isClientErrorShouldReturnFalseIfNeitherCustomPage404NorStatusCodeMatch()
shouldOrderByTypeThenPosition()
shouldScanStartDirNodeAndChildrenIfScanChildrenIsEnabled()
shouldThrowExceptionWhenDecodingIfNotProperlyEncoded()
test1_5_1LaterThan1_4_2()
shouldBeDisabledWhenOffAndDefaultOffThresholdSet()
shouldParseParametersKeepingEmptyValueWhenAbsent()
shouldCheckPage200WithParent()
shouldReportEventPublishersAndEvents()
isPage200ShouldReturnFalseIfCustomPage500Matches()
isServerErrorShouldReturnTrueIfStatusCodeMatches()
shouldIdentifyLoggedInRequestHeaderWhenLoggedOutIndicatorIsSet()
testImplementation("com.github.tomakehurst:wiremock-jre8:2.28.0")
shouldUseTechSetAllByDefault()
testSpiderParser.notifyListenersPostResourceFound(message,
shouldReportAddOnsWithRunningIssuesSinceLastRun()
shouldThrowExceptionWhenGettingLeafNameWithNullUri()
shouldAddDefaultHeaderGivenValueForGivenSite()
shouldThrowWhenRemovingNullType()
shouldEncodeContent()
shouldNotReplaceAnyTokensIfExtensionAntiCSRFNotEnabled()
testUpdatedAddons()
@Timeout(30)
shouldStopScanningNodesWithActiveScript2WhenScanStopped()
shouldCallScriptForGetLeafName()
shouldReplaceDdnWithPayload()
isPage404ShouldReturnTrueIfCustomPage404DoesNotMatchButStatusCodeDoes()
shouldNotSubmitSameGetTaskWithDifferentHeaderOrder()
shouldQuoteValueThatLooksLikeAFunction()
testParseCookieHeaderWithOneCookie()
shouldOrderByTypeThenName()
testDailyVersion()
shouldIdentifyLoggedInRequestBodyWhenLoggedInIndicatorIsSet()
shouldUseButtonFormMethodIfPresentPOST()
shouldHaveEmptyAlertRefForManualAlerts()
testEmptyValuesInExcludeCriteria()
testAlpha2DoesNotUpdateTestyAlpha1()
testIncludeCriteriaWithMoreFilterValues()
shouldLogExceptionsAfterPrintingIfLoggerHasNowAppenders()
testSpiderParser.removeSpiderParserListener(listener2);
shouldSetDataOnlyIntoHeaderIfBodyEmpty()
shouldCheckPage500WithContext()
shouldNotFindParameterFromMalformedJsonObject()
shouldImportContextWithCookieSessionMgmtType()
shouldReturnCorrectNameForPostWithPathNoSlashWithParams()
testImplementation("org.mockito:mockito-junit-jupiter:3.5.13")
shouldGenerateFormWithCustomActionUrl()
shouldSetContentEncodings()
addRemoveTopLevelTech()
test_zap_set_scan_user_with_multiple_users(self):
shouldScanNodesWithActiveScript2()
topLevelShouldHaveTech()
shouldNotBeWebSocketUpgradeIfResponseConnectionHeaderMissUpgradeValue()
isCustomPageShouldReturnTrueWhenCustomPageMatches()
shouldNotSetNullStartSiteNode()
shouldReturnCorrectNameForPostWithPathWithSlashNoUrlParams()
shouldToStringWithContentEncodingsSet()
testIncludeCriteriaWithSameValues()
testSpiderParser.addSpiderParserListener(listener2);
shouldAppendStringBodyUsingDefaultCharsetAndContentEncode()
isPageAuthIssueShouldReturnTrueIfCustomPageMatches()
shouldIdentifyLoggedOutRequestHeaderWhenLoggedOutIndicatorIsSet()
shouldNotBeEqualToNull()
test_zap_set_scan_user_with_no_users(self):
shouldThrowWhenAddingNullType()
shouldFailScriptsThatDoNotImplementNeitherActiveScript2NorActiveScript()
shouldIgnoreEmptyHeaderType()
shouldNotUrlEncodeUsernameInPollRequestBody()
shouldSkipSessionTokensWhenCleaningParametersIn_IGNORE_VALUE_mode()
shouldHaveRootLevelSetToError()
shouldBeEqualToEqualEncodings()
testAlpha2UpdatesBeta1()
testSpiderParser.notifyListenersResourceFound(resourceFound2);
shouldNotFailToCreatePathRegexWithReservedCharsInQuery()
testLinuxUrl()
shouldGetUnsavedResourcesFromExtensions()
testSpiderParser.addSpiderParserListener(listener1);
shouldNotDecodeResponseWithContentEncodingErrors()
shouldSkipIrrelevantQueryParametersWhenCanonicalizing()
isPage500houldReturnFalseIfCustomPage404Matches()
shouldCheckAuthIssueWithParent()
shouldReplaceTokenValueEverywhere()
shouldSkipIfNoActiveScripts()
shouldBeDisabledWhenOffThresholdSet()
shouldReturnPostLeafNameWithOnePostAndOneUrlParam()
shouldStopExtensionWhenRemoved()
shouldSetDataIntoBodyAndIgnoreMalformedHeader()
test_zap_import_context_sets_users(self):
testVersion()
testShouldPassForValuesAndFilterValuesMismatchInExcludeCriteria()
shouldReturnPostLeafNameWithTruncatedParam()
shouldCreateAddOnLoaderFromDirectoryWithAddOnsWithNoIssues()
testParseCookieHeaderWithTwoCookie()
shouldThrowExceptionForNullBody()
testAlpha1DoesNotUpdateAlpha2()
shouldIgnoreChangesToSegmentName()
shouldBuildWithInterfaceErrorMessageProvider()
shouldBuildAlertWithOneTagWhenOneSetAndOneAddedOneRemoved()
shouldNotScanNullStartNodeSet()
test_zap_spider_uses_user(self):
shouldHaveParosPackageSetToInfo()
shouldParseAnyMessage()
shouldNotifyListenersOfResourceFound()
shouldNotBackupLegacyLog4jConfigurationIfBackupExists()
shouldScanStartNodeSet()
shouldSetBodyString()
isPage500ShouldReturnTrueIfCustomPage500DoesNotMatchButStatusCodeDoes()
shouldReturnToStringForContentSet()
allShouldContainTopLevel()
testImplementation("org.mockito:mockito-junit-jupiter:3.6.28")
shouldFindUrlsInTableElements()
shouldHaveCommonsHttpClientPackageSetToError()
shouldNotScanFilteredNode()
shouldUseProvidedParameterEncoder()
shouldCallScriptForGetTreePath()
testGetData()
shouldReturnCorrectRegexForNoPathWithSlashNoParams()
testNotAddonBadVersion()
test_zap_active_scan_uses_user(self):
testShouldFailWhenValuesAndFilterDataValuesMismatchIncludeCriteria()
shouldHaveJerichoSetToOff()
shouldGetDataFromBodyGzipDecoded()
shouldCacheEnabledScripts()
shouldImportContextWithUnknownAuthorizationDetectionMethod()
isServerErrorShouldReturnTrueIfCustomPage500MatchesButStatusCodeDoesNotMatch()
isSuccessShouldReturnFalseIfCustomPage500Matches()
shouldNotEqualIfAlertRefDifferent()
shouldNotFindSiteBranchNodeWithUriIfNotPresent()
shouldBuildAlertWithNoTagsWhenOneRemoved()
shouldSetDealyIntoPlugin()
testImplementation("com.github.tomakehurst:wiremock-jre8:2.27.2")
shouldSetUri()
testImplementation("org.mockito:mockito-junit-jupiter:4.4.0")
shouldNotReplaceTokenIfItHasDifferentCase()
testMacUrl()
testLots()
shouldBeDisabledWhenDefaultOffThresholdSet()
shouldFindSiteBranchNodeWithUriIfPresent()
isSuccessShouldReturnTrueIfCustomPage200Matches()
shouldNotHaveViewByDefault()
shouldLogExceptionsIfLogConfigurationHasAppendersButNotRootLogger()
shouldSetBody()
shouldNotCacheScriptsNoLongerEnabledWhenRefreshing()
test.getStatus();
testNewAddons()
shouldNotDecodeResponseIfNoContentEncodings()
shouldNotReplaceAnyTokensIfRequestMessageDoesNotHaveAnyParameters()
shouldNotifyWhenCompleted()
shouldThrowExceptionForNullHeaderField()
shouldNotUseCacheForDifferentHistoryReference()
shouldThrowExceptionWhenAddingNullView()
shouldHaveContextIfMessageIncludedInOne()
shouldNotGetTokensWithFormsButNoInputFields()
shouldCreateSourceIfNotProvided()
shouldNotDecodeNameNorValueWhenRawParsing()
shouldSetBodyBytes()
shouldAddSpecifiedHeaderWhenDefined()
test_zap_spider_raises_exception_if_not_started(self):
shouldHaveNoCachedScriptsIfNotRefreshed()
shouldSetContentAndEncode()
shouldNotHaveContentLengthHeaderByDefault()
test1_5_1LaterThan1_4_2_1()
shouldPollOnFirstRequest()
shouldCreateUriFromAuthorityWithUnderscoresInHostname()
shouldIgnoreEmptyValue()
shouldSetEmptyContentEncodings()
shouldFindUrlsInAudioElements()
isServerErrorShouldReturnFalseIfNeitherCustomPage500ButNorStatusCodeMatch()
isPage404ShouldReturnFalseIfCustomPage200Matches()
shouldThrowExceptionIfExtensionScriptIsNull()
shouldImportContextWithNoSessionMgmtType()
shouldUseButtonFormActionIfPresent()
shouldSkipIfExtensionScriptIsNull()
testImplementation("org.nanohttpd:nanohttpd-webserver:2.3.1")
shouldNotOverrideUndefinedType()
testCanLoadAddOnNotBefore()
shouldAppendBytesBodyUsingCharsetSetAndNotContentEncode()
shouldNotGetTokensFromInputFieldsIfNameIsNotAKnownToken()
isServerErrorShouldReturnFalseIfNoStatusCodeOrCustomPageMatches()
shouldGetTokensFromInputFieldsIfIdAndNameIsAKnownTokenWithDifferentCase()
shouldSetNonNullTechSet()
shouldUpdateHostHeaderIfValueMismatch()
shouldGetActiveActionsFromExtensionsWhileHandlingErrors()
shouldHaveNonNullLogger()
shouldThrowExceptionForNullMethod()
shouldUpdateRequestContentLength()
shouldAddAuthHeaderWhenDefined()
shouldThrowExceptionWhenBuildingWithoutTargetInterface()
shouldHaveScanJsonNullValuesDisabledIfConfigurationNotBoolean()
shouldNotScanStartDirNodeMatchingSiblingEvenWithScanChildrenIsEnabled()
shouldNotGetTokensFromInputFieldsWithNoValue()
shouldStopBeforeDestroyExtensionWhenRemoved()
shouldSendMessageWithoutScanRuleIdHeaderIfDisabled()
addRemoveTech()
