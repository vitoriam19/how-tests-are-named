testUncompressedDataAppendsToOut()
testResponseDisallowPartialChunks()
PerMessageDeflateEncoder(9,
testWrapWithDifferentSizes(SslProtocols.TLS_v1_1,
testHttpMessageDecoderResult()
testSoLingerZeroCausesOnlyRstOnClose(serverBootstrap,
testWriteZeroAfterRelease()
assertThrows(IllegalStateException.class,
testNotEscapeStompHeadersForConnectedCommand()
testTlsExtensionNoCompatibleProtocolsNoHandshakeFailure(JdkSSLEngineTestParam
testWriteBeforeConnect(TestInfo
testReadBytesAfterRelease8()
testCheckNotNullArrayParam()
testCancelClose()
testHeaderNameStartsWithControlChar1c()
computeMergeExtensionsHeaderValueWhenNoUserDefinedHeader()
testSimpleSendWithConnect(bootstrap,
@EnabledOnOs(OS.MAC)
testUsedDirectMemory(int
testMultipleRecordsInOneBufferBiggerThenPacketBufferSize(SSLEngineTestParam
testSimpleSendCompositeMixedByteBuf(TestInfo
testHandshakeSuccess0(boolean
testPromiseUseDifferentExecutor()
testSubAckMessageIdAsInt()
testTlsExtensionNoCompatibleProtocolsServerHandshakeFailure(JdkSSLEngineTestParam
testFallbackToDefaultContext(SslProvider
testConnectTimeout(bootstrap);
testDefaultTLS11NotAcceptedByDefaultServer()
testPkcs1AesEncryptedRsaWrongPassword()
assertThrows(IllegalReferenceCountException.class,
testWebSocketClientHandshakeException()
testHandshakeTimeout(false);
testDecodeFullHttpRequestWithInvalidCharset()
headerValueValidationMustRejectAllValuesRejectedByOldAlgorithm()
testHttpUpgradeRequest0(boolean
testExistingHeaderNameButMissingValue()
testLocalAddressAfterConnect(TestInfo
testResolveLocalhostIpv4()
testSslGreeting(sb,
testResultNoTimeoutCorrectlyEncoded()
testSessionAfterHandshake0(
testBufferMessagesUntilHandshakeCompleteWithClose()
testCheckWebSocketPathStartWithSlash()
testWithFragmentSize(provider,
headers.valueIterator(of("name"));
char[109]).replace("\0",
testNormalizeAndGetContentLengthInvalidContentLength(final
testSessionCacheTimeout()
testUnwrapBehavior(SSLEngineTestParam
testInvalidHeaders0(requestBuffer);
testSessionTickets(serverAddr,
testFileRegionNotAutoRead(serverBootstrap,
testAddContentEmptyBuffer(HttpData
mustReturnValuesInOrder()
testWrapDstBigEnough(BufferType
testFingerprintWithUnexpectedCharacters()
testHeartbeatFrame()
testCompressionOfSmallChunkOfData(ByteBuf
testSearchDomainQueryFailureCompletes(ResolvedAddressTypes.IPV4_ONLY);
testSslEcho(
EmbeddedChannel(
testSetDouble()
testServerPriority()
testNpn(SSLEngineTestParam
encode(randomBytes(maxListSize),
testShutdownOutput(serverBootstrap);
testDefaultTLS1NotAcceptedByDefault(param,
testAddressAlreadyInUse()
testHandshakeFailureCipherMissmatchTLSv13OpenSsl()
testCancellationExceptionIsThrownWhenBlockingGet()
testPkcs1Des3EncryptedRsaNoPassword()
testDecompressionOfLargeChunkOfData(ByteBuf
testSslHandlerWrapAllowsBlockingCalls()
testNoRstIfSoLingerOnClose(TestInfo
testWriteUtf8Wrapped(BufferType
normalizeAndGetContentLengthEmpty()
testCompressedDataDecodesAndAppendsToOut()
JsonObjectDecoder());
testPrivateKeyMethodFailsBecauseOfException(final
testGatheringWriteWithCompositeNotAutoRead(ServerBootstrap
testHeaderNameEndsWithControlChar1d()
connectionErrorHandlesMessage()
test(File
embeddedUdp()
testSetBytesAfterRelease7()
testReservedSkippableBeforeStreamIdentifier()
pinnedMemoryMustReflectBuffersInUseWithoutThreadLocalCaching()
testReadSliceOutOfBounds(true);
testSimpleEchoWithVoidPromiseNotAutoRead(TestInfo
testPubAckMessageIdAsInt(Integer
testSpdyEcho(serverBootstrap,
testRRNameContainsDifferentSearchDomain(Collections.<String>emptyList(),
testWithNoFingerprints()
testReserveAndWriteUtf8InvalidSubsequences(BufferType
testMutualAuthInvalidIntermediateCAFailWithOptionalClientAuth(SSLEngineTestParam
testCloseNotifySequence(SSLEngineTestParam
testStringEcho(serverBootstrap,
headerContentLengthNotMatchValidationShouldPropagateWithEndStreamTrailers()
testAddLastVarArgsSkipsNull()
testPkcs1UnencryptedDsaEmptyPassword()
testGetProperty()
testDefaultUseCorrectInstance()
testMutualAuthClientCertFail(param,
testResolveIpv6WithScopeId0(false);
testCheckNonEmptyAfterTrim()
testFixedLengthEchoNotAutoRead(TestInfo
testMultipleRecycleRacing()
fqdnAsteriskDoesNotThrowTest()
testHandshakeMTLSWithExecutorThatExecuteDirectlyJDK()
test.getBodyHttpDatas("file").get(0);
testValidHostNameForSni()
testCorrectlyCalculateSpaceForAlert(param,
testCompressionOfBatchedFlow(data);
headerMinusSignContentLengthValidationShouldPropagateWithEndStream()
@EnabledOnOs(LINUX)
newReferenceCounted();
testBufRelease(serverBootstrap,
testHeaderNameEndsWithControlChar(0x1e);
test(Socks5CommandStatus.SUCCESS,
testRemoveItselfIfNoSslHandlerPresent()
assertThrows(Http2Exception.class,
testDefaultProtocolsIncludeTLSv13(SSLEngineTestParam
testHandshakeEventsTls13JDK()
testMultipleRecordsInOneBufferWithNonZeroPositionJDKCompatabilityModeOff(SSLEngineTestParam
testWrapWithDifferentSizes(SslProtocols.SSL_v3,
testSetSupportedCiphers(SSLEngineTestParam
testSingleCompositeBufferWrite(TestInfo
headers();
testSessionCacheSize(SSLEngineTestParam
LinuxSocket.newSocketStream(false);
testCheckNonEmptyByteArrayString()
testReadGlobalTrafficShapping(TestInfo
testBindWithPortOnly()
testSetBytesOutOfBounds5()
testHeaderNameStartsWithControlChar0c()
testConnectCancellation(bootstrap);
testWrapWithDifferentSizes(SslProtocols.TLS_v1,
testAddInListenerLocal()
testWriteUtf8(BufferType
testSetChar()
testReadBytesAfterRelease9()
testSNIMatchersWithSNINameWithUnderscore(SSLEngineTestParam
testSessionLocalWhenNonMutual(SSLEngineTestParam
testLastHandlerEmptyPipeline()
testFailedNegotiation()
simpleRequestDoNotAllowPrivateNetwork()
testNonZeroReaderIndex()
testWriteUsAsciiString(BufferType
testDecodeCommand(String
testSearch(Algorithm
sliceOfCompositeBufferMustThrowISEAfterDiscardBytes()
testDecomposeReturnNonUnwrappedBuffers()
handlesRequest()
buf.asReadOnly();
testInfo.getTestMethod().map(new
testScatteringConnectedReadWithSmallBuffer(TestInfo
LocalChannel().pipeline();
testSetMaxHeaderTableSizeOverflow()
testLeakSetupHints()
testOsClassifiersPropertyExcessive()
testSliceCapacityChange(true);
cbuf.iterator();
testReservedSkippableSkipsInput()
testBindWithPortOnly(Bootstrap
testReRegisterEventLoop()
testCompressionOfLargeChunkOfData(ByteBuf
testDisableProtocols(SslProtocols.TLS_v1,
testSingleResourceInTheClassLoader()
testCloseForcibly(serverBootstrap,
testDisableProtocols(SslProtocols.TLS_v1_1,
testClientExceptionWithResponse()
testSupportedSignatureAlgorithms(SSLEngineTestParam
shouldRefreshHostsFileContentAfterRefreshInterval()
testChannelsIteratorRemoveThrows()
testAutoReadOnDataReadImmediately(serverBootstrap,
testMethodName(TestInfo
testSoLingerZeroCausesOnlyRstOnClose(TestInfo
testHalfClosureReceiveDataOnFinalWait2StateWhenSoLingerSet(ServerBootstrap
testSslGreeting(ServerBootstrap
testAlpn(SSLEngineTestParam
testNotBoringAdd()
testSimpleSendCompositeMixedByteBuf(bootstrap,
testSessionTickets(SslProvider.OPENSSL,
testSSLExceptionOpenSslTLSv12()
testPubAckMessageIdAsInt()
testResolveIp4()
assertThrows(UnsupportedOperationException.class,
testSetCharSequenceAfterRelease0(CharsetUtil.ISO_8859_1);
makeBuf(0xFF);
testWriteScheduled()
testDuplicateReadGatheringByteChannelMultipleThreads()
optionsAndAttributesMustBeAvailableOnChildChannelInit()
testInvalidDecompressedLength()
tcpV4()
Bootstrap();
testEncodeUsingBothStaticAndDynamicTable()
testHandshakeFailureCipherMissmatchTLSv13Jdk()
testConditionalWritability(serverBootstrap,
testSuspendAndResumeAccept(TestInfo
testAddContentExceedsMaxSize(final
testGetCharsetNoTrailingQuotes()
testFixedLengthEcho(serverBootstrap,
testCompletedFlagPreservedAfterRetainDuplicate(HttpData
testResolveHostNameIpv4()
testPrivateKeyMethodFailsBecauseOfNull(final
testSetCharSequenceAfterRelease0(CharsetUtil.UTF_16);
headerContentLengthNotMatchValidationShouldPropagateWithEndStreamCloseLocalTrailers()
testInvalidHeaders0(responseBuffer);
testNoTrafficShapping(TestInfo
testIteratorReadOnly(newClientHeaders());
randomOperations()
testConnectMessageNonZeroReservedBit2Mqtt311()
testReuseFd(serverBootstrap,
assumeTrue(OpenSsl.isSessionCacheSupported());
testSSLSessionId(SSLEngineTestParam
testFileRegionVoidPromise(serverBootstrap,
headersContentLengthInvalid()
testExistingHeaderNameAndValueSecondMatch()
testScatteringReadConnectedPartial(TestInfo
testUsingX509TrustManagerVerifiesHostname(param,
testFireChannelReadAfterHandshakeSuccess(SslProvider.JDK);
testWrapWithDifferentSizes(SslProtocols.TLS_v1_2,
testResolveIpv6WithScopeId()
testGetBytes(BufferType
buffer(allocate(8).asReadOnlyBuffer()).clear();
testHeaderNameStartsWithControlChar(0x1c);
zstdEncodingSingleEmptyMessage()
testMutualAuthDiffCerts(SSLEngineTestParam
testDefaultTLS11NotAcceptedByDefaultServer(SSLEngineTestParam
testObjectEchoNotAutoRead(TestInfo
testShutdownNotYetConnected(TestInfo
testGetZstdTargetContentEncoding()
testRRNameContainsDifferentSearchDomain(final
testBeginHandshakeCloseOutbound(param,
testCNAMEOnlyTriedOnAddressLookups()
testReadSliceOutOfBounds(false);
testNotBadReleaseBuffersDuringDecodingDiskFactory()
testHandshakeEventsTls13Openssl()
testBufferMessagesUntilHandshakeCompleteWithInputShutdown()
testBind(Bootstrap
HpackDynamicTable(1);
testIsTextWithInvalidIndexAndLength(BufferType
testWhitespaceInTransferEncoding01()
testConnectionCloseHeaderHandledCorrectlyForVoidPromise(
assertThrows(IndexOutOfBoundsException.class,
testUtf8BytesWithNonSurrogatesNonAscii(BufferType
testSslException(SslProvider
assertThrows(NumberFormatException.class,
testUnixResolverDnsServerAddressStreamProvider_ParseEtcResolverSearchDomainsAndOptions()
testSendRecvFd(TestInfo
testScatteringConnectedReadWithSmallBuffer(bootstrap,
testSetBytesOutOfBounds0(8,
multipleHeadersContentLengthDifferent()
zstdEncodingSingleMessage()
testFileRegionCountLargerThenFile(TestInfo
duplicatePseudoHeadersMustFailValidation()
testMissingHeaderName()
testInvalidEscapeHeadersSequence()
testConnectRefused(TestInfo
testDisableProtocols(SslProtocols.SSL_v2,
testMutualAuthInvalidClientCertSucceed(SSLEngineTestParam
testLargeEncode()
testTrustedCertificateWithSHA256Fingerprint()
testEnsureWritableIntegerOverflow()
testDefaultTLS1NotAcceptedByDefault(null,
testPkcs1UnencryptedRsaEmptyPassword()
testResolveAllHostNameIpv6()
testSpdyEchoNotAutoRead(serverBootstrap,
testServerContextWithCombinedCertAndKeyInPem(SslProvider
testNotCloseOnProtocolViolation()
@EnabledForJreRange(min
testOsClassifiersPropertyPair()
JsonObjectDecoder(6));
testAttributesCopied()
testDecodeWithOverlyLongPreamble()
testTableResize()
testHandshakeSuccessWithSslHandlerAddedLater()
testPkcs1Des3EncryptedRsa()
testDecodeCommand()
testBindWithPortOnly(bootstrap2);
testIsTextWithoutOptimization(BufferType
testHandshakeFailureCipherMissmatch(SslProvider
testSimpleEchoUnordered(serverBootstrap,
testHandshakeForHttpRequestWithoutAggregator()
testHandshake(SslProvider
testFileRegion(TestInfo
testAdvanceTime()
testCheckPositiveIntString()
optionsAndAttributesMustBeAvailableOnChannelInit()
testCorrectElementSize()
testHandshakeCompletesWithNonContiguousProtocolsTLSv1_2CipherOnly(SSLEngineTestParam
testSimpleEchoWithAdditionalExecutorAndVoidPromise(sb1,
testOrdering(int
testSniWithApnHandler(SslProvider
testHandshakeMTLSWithExecutorOpenSsl()
testSendSegmentedDatagramPacketComposite()
headersContentLength(final
testGatheringWriteNotAutoRead(TestInfo
FixedChannelPool(cb,
Http2StreamFrameToHttpObjectCodec(true));
testNoTrafficShapping(serverBootstrap,
testUnexpectedStreamIdentifier()
testDecompressionOfBatchedFlowOfData(@FromDataPoints("largeData")
testWriteUtf8InvalidSubsequences(BufferType
mustBeAbleToReadPrivateKey()
testResolveIpv6WithoutScopeId0(true);
decodingConnectionRelatedHeadersMustFailValidation()
testIdentity(EmptyArrays.EMPTY_BYTES,
testHttpUpgradeRequestNonFull()
testCheckNonEmptyTString()
HttpObjectAggregator(Integer.MAX_VALUE);
testConnectionCloseHeaderHandledCorrectly(
testWriteWithFastOpenBeforeConnect(TestInfo
Unpooled.buffer(11);
testUtf8BytesWithSurrogates(BufferType
testIncorrectSelectorsNumber()
testGatheringWriteWithCompositeNotAutoRead(serverBootstrap,
forEachByteOnNestedCompositeByteBufMustSeeEntireFlattenedContents()
testCloseNotifyNotWaitForResponse(SslProvider
testTlsExtension(JdkSSLEngineTestParam
children.get(0)).content();
testBeginHandshakeCloseOutbound(SSLEngineTestParam
testHandshakeWithExecutor(ImmediateEventExecutor.INSTANCE,
testStartTlsNotAutoRead(sb,
testToStringDoesNotThrowIndexOutOfBounds(BufferType
decodingTrailersTeHeaderMustNotFailValidation()
