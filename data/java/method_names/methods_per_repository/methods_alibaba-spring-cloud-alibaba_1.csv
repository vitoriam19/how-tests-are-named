test_compatibleWithOlderVersion()
testDefault(@PathVariable
testUri(locationUri)).hasMessage("illegal
testFailureToleranceEnabled()
@ExtendWith(SpringCloudAlibabaExtension.class)
@SpringBootTest(classes
testFailureToleranceDisabled()
testCacheIsOK()
@RunWith(SpringRunner.class)
importMultiplePropertySourceAsList()
testConfigSpecificRule()
configNotEnabled()
testCommonPropertiesHasLowerPriority()
testRefreshConfig()
testDataIdMustBeSpecified()
noImports_thenCreateProperties()
testResolveProfileSpecific(String
testConsumeAndProduce(){
testUri(String
whenCustomizeSuffix_thenOverrideDefault()
testIsResolvable_givenDisable_thenReturnFalse()
testSpecificFeignMethodRule()
testServiceDiscoveryWithFeignClientUsingSentinelCircuitBreaker()
createConsumerEndpoint()
testImportCheckEnabled()
testProperties()
importSinglePropertySource()
testConsumeAndProduce()
testFeign(@PathVariable
testServiceDiscoveryWithRestTemplate()
testSetCommonPropertiesIsOK()
testResolveProfileSpecific();
whenNoneInBootstrapContext_thenCreateNewConfigClientProperties()
testUri(locationUri))
testIsResolvable_givenCorrectPrefix_thenReturnTure()
testServiceDiscoveryActuatorEndpoint()
noSpringConfigImport()
		assertThatExceptionOfType(RuntimeException.class).isThrownBy(()
testFunction(String
whenNotSetProfile_thenDataIdIsShorter()
testUsingSmartConfigurationPropertiesRebinder()
testUsingSmartConfigurationPropertiesRebinder_whenBehaviorIsNotDefault()
testUri(locationUri)).hasMessage("dataId
importCheckNotEnabled()
testServiceDiscoveryWithFeignClient()
boostrap()
testServiceDiscovery()
testGetInstancesFailureToleranceDisabled()
testResolveProfileSpecific_givenNothing_thenReturnDefaultProfile()
@Target(ElementType.TYPE)
testParseBeanDefinition()
testImportCheckDisabled()
testUsingConfigurationPropertiesRebinder_whenBehaviorIsDefault()
testResolveProfileSpecific("default");
createDLQAnymousConsumerEndpoint()
//@EnableBinding({Processor.class,
testStartWithASlashIsOK()
testUri(locationUri);
@EnableBinding({Processor.class,
legacy()
createAnymousConsumerEndpoint()
testIsResolvable_givenIncorrectPrefix_thenReturnFalse()
testSpecificFeignRule()
testSpecificRefreshWork()
testFeignMethod(@PathVariable
testDefaultRule()
contextLoads()
imports_thenNoCreateProperties()
testInvalidDataId()
testConfigDefaultRule()
testResolveProfileSpecific()
testUri(locationUri,
test()
testGetValidField()
testUrisInLocationShouldOverridesProperty()
importMultiplePropertySource()
convertMessage2MQBlankHeaderTest()
testGetInstancesFailureToleranceEnabled()
