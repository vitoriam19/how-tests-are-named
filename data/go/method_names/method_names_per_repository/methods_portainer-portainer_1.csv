TestService_Hash(t
Test_AddAppLabels(t
TestStoreFull(t
Test_extractAPIKeyQueryParam(t
Test_CanTerminateAllJobs_ByShuttingDownScheduler(t
Test_decryptWithDifferentPassphrase_shouldProduceWrongResult(t
Test_redeployWhenChanged_DoesNothingWhenNotAGitBasedStack(t
Test_startWaitingForSignal_beforeGateGetsUnlocked(t
TestRollback(t
TestMigrateSettings(t
TestEmptyGlobalKey(t
TestUpdateSettingsToDB31(t
Test_InvalidateUserKeyCache(t
Test_stackHandler_cloneAndSaveConfig_shouldCallGitCloneAndSaveConfigOnStack(t
TestHandler_registryUpdate(t
TestService_StackByWebhookID(t
Test_waitChannelWillBeEmpty_ifGateIsUnlocked(t
Test_IsDockerEndpoint(t
Test_hideAPIKeyFields(t
Test_extractAPIKeyHeader(t
TestService_LatestCommitID_GitHub(t
Test_hasDockerEndpoint(t
Test_start_shouldFatalAfterTimeout_ifNotInitialized(t
Test_AddAppLabels_HelmApp(t
TestKubeClusterAccessService_GetKubeConfigInternal(t
Test_backupHandlerWithoutPassword_shouldCreateATarballArchive(t
Test_helmList(t
Test_stopCouldBeCalledMultipleTimes(t
Test_getEndpointTypes_failWhenEndpointDontExist(t
Test_restoreArchive_usingCombinationOfPasswords(t
Test_isAzureUrl(t
Test_CopyPath_shouldSkipWhenNotExist(t
Test_getUsername(t
Test_listRefsPrivateRepository(t
Test_backupPath_shouldCopyFile(t
Test_getUniqueElements(t
Test_StartAndStopJob(t
Test_CopyPath_shouldCopyDir(t
Test_hasDockerEndpoint_failWhenEndpointDontExist(t
Test_getEndpointTypes(t
Test_apiKeyCacheGet(t
TestLastCheckInDateIncreases(t
Test_generateKubeconfig(t
Test_ScheduledJobRuns(t
TestEmptyEdgeIdWithAgentPlatformHeader(t
Test_azureDownloader_latestCommitID(t
Test_endpointList_edgeDeviceFilter(t
Test_ExtractDocuments(t
Test_JobCanBeStopped(t
Test_enableFeaturesFromFlags(t
TestWithEndpoints(t
Test_redeployWhenChanged(t
Test_Authenticate(t
Test_FileExists_whenFileExistsShouldReturnTrue(t
Test_GetAPIKeys(t
Test_canLockAndUnlock(t
Test_restoreArchive_shouldFailIfSystemWasAlreadyInitialized(t
TestService_ClonePrivateRepository_GitHub(t
TestUpdateWithInvalidPayload(t
Test_buildTreeUrl(t
TestHandler_registryCreate(t
Test_movePath_shouldFailIfSourceDirDoesNotExist(t
TestKubeClusterAccessService_IsSecure(t
Test_start_shouldDisableInstanceAfterTimeout_ifNotInitialized(t
Test_createEnvFile(t
TestGenerateSignedToken_InvalidScope(t
Test_getIdToken(t
TestService_ClonePrivateRepository_Azure(t
TestUpdateDockerhubToDB32_with_duplicate_migrations(t
TestDeleteInvalidEdgeStack(t
Test_NamespaceAccessPoliciesDeleteNamespace_updatesPortainerConfig_whenConfigExists(t
Test_hasKubeEndpoint(t
Test_createNetworkEnvFile(t
TestUpdateStatusWithInvalidPayload(t
Test_isBinaryPresent(t
Test_GenerateApiKey(t
TestService_LatestCommitID_Azure(t
TestHandler_webhookInvoke(t
Test_waitForPodStatus(t
TestInspectInvalidEdgeID(t
TestService_ListFiles_Github_Concurrently(t
TestKubeConfigService_GetKubeConfigInternal(t
Test_CanTerminateAllJobs_ByCancellingParentContext(t
Test_helmInstall(t
Test_GetDigestUserAndKey(t
Test_AddAppLabels_PickingName_WhenLabelAndMetadataNameAreEmpty(t
Test_userGetAccessTokens(t
Test_CanStartAndTerminate(t
TestUpdateWithInvalidEdgeGroups(t
Test_encryptAndDecrypt_withEmptyPassword(t
Test_redeployWhenChanged_DoesNothingWhenNoGitChanges(t
Test_getResource(t
Test_canStopStartedMonitor(t
Test_GenerateYAML(t
Test_CanTerminateByCancellingContext(t
Test_hasKubeEndpoint_failWhenEndpointDontExist(t
TestUnzipFile(t
Test_teamList(t
TestMissingEdgeIdentifier(t
Test_listFiles_azure(t
Test_notDemoEnvironment_shouldSucceed(t
Test_generateRandomKey(t
Test_CopyDir_shouldCopyOnlyDirContents(t
Test_buildRefsUrl(t
Test_waitingMiddleware_executesImmediately_whenNotLocked(t
Test_userCreateAccessToken(t
Test_buildDownloadUrl(t
Test_NeedsEncryptionMigration(t
Test_helmShow(t
Test_backupPath_shouldCopyDir(t
TestService_ListRefs_Azure_Concurrently(t
Test_WriteFile_CanStoreContentInANewFile(t
Test_ObjectMarshallingEncrypted(t
Test_listRefs_azure(t
Test_latestCommitID(t
TestService_purgeCache_Github(t
TestService_canStopCacheCleanTimer_whenContextDone(t
Test_movePath_shouldFailIfTargetPathDoesExist(t
Test_fileSystemService_FileExists_whenFileNotExistsShouldReturnFalse(t
Test_IsKubernetesEndpoint(t
Test_mwAuthenticateFirst(t
Test_apiKeyCacheDelete(t
Test_buildRootItemUrl(t
Test_DeleteAPIKey(t
TestEdgeJobsResponse(t
Test_GetServiceAccount(t
Test_parseAzureUrl(t
TestKubeConfigService_IsSecure(t
Test_GetAPIKey(t
TestUpdateStatusAndInspect(t
Test_Filter_AgentVersion(t
Test_getStackFiles(t
TestService_HardRefresh_ListRefs_And_RemoveAllCaches_GitHub(t
TestService_HardRefresh_ListFiles_GitHub(t
Test_cloneRepository_azure(t
Test_WriteFile_CanWriteANestedPath(t
TestCreateWithInvalidPayload(t
Test_hasToBeUnlockedToLockAgain(t
Test_shouldCreateArhive(t
Test_extractBearerToken(t
TestJoinPaths(t
Test_encryptAndDecrypt_withTheSamePassword(t
TestPreviousVersions(t
TestCreateAndInspect(t
Test_teamByName(t
TestGeneratePublicSettingsWithSSO(t
Test_setComposeFile(t
TestMigrateStackEntryPoint(t
Test_UpAndDown(t
Test_ValidateStackAutoUpdate(t
Test_stopWithoutStarting(t
Test_updateUserRemovesAccessTokens(t
TestMigrateData(t
Test_deleteUserRemovesAccessTokens(t
Test_Filter_edgeDeviceFilter(t
TestService_HardRefresh_ListRefs_GitHub(t
Test_UpdateAPIKey(t
Test_addEnvFileOption(t
Test_SatisfiesAPIKeyServiceInterface(t
Test_redeployWhenChanged_FailsWhenCannotClone(t
Test_RefreshableStacks(t
TestConfigFilePaths(t
Test_getUserRegistries(t
Test_addProjectNameOption(t
Test_userList(t
TestGeneratePublicSettingsWithoutSSO(t
Test_helmRepoSearch(t
Test_endpointList(t
Test_shouldCreateArhiveXXXXX(t
TestStoreCreation(t
Test_copyFile_returnsError_whenSourceDoesNotExist(t
Test_GetNamespace(t
TestService_ListRefs_Azure(t
Test_UnMarshalObject(t
Test_GetStackFilePaths(t
TestCloneAndConvertGitRepoFile(t
Test_apiKeyLookup(t
TestKubeClient_GetNodesLimits(t
Test_createEnvFile_mergesDefultAndInplaceEnvVars(t
Test_EndpointList_AgentVersion(t
Test_apiKeyCacheLRU(t
Test_movePath_shouldFailIfOriginalPathDoesntExist(t
Test_userAccessTokenCreatePayload(t
TestBackup(t
Test_CopyPath_shouldCopyFile(t
Test_stackFilePath(t
Test_listFilesPrivateRepository(t
TestService_ListFiles_Azure_Concurrently(t
Test_copyFile_shouldMakeAbackup(t
Test_registryCreatePayload_Validate(t
Test_waitingMiddleware_mayTimeout_whenLockedForTooLong(t
Test_helmDelete(t
Test_getBackupRestoreOptions(t
Test_azureDownloader_downloadZipFromAzureDevOps(t
TestValidateLDAPSettings(t
Test_DocumentSeperator(t
Test_WriteFile_CanOverwriteExistingFile(t
Test_getOAuthToken(t
TestService_purgeCacheByTTL_Github(t
TestService_GenerateTokenForKubeconfig(t
Test_FilterByExcludeIDs(t
Test_startOrStopCouldBeCalledMultipleTimesConcurrently(t
TestMain(m
Test_movePath_shouldFailIfDestinationDirExists(t
Test_backupPath_shouldSkipWhenNotExist(t
Test_backupHandlerWithPassword_shouldCreateEncryptedATarballArchive(t
Test_CopyDir_shouldCopyAllFilesAndDirectories(t
TestDeleteAndInspect(t
Test_cloneRepository(t
Test_ToggleSystemState(t
Test_JobShouldStop_UponError(t
TestUpdateDockerhubToDB32(t
Test_ClonePublicRepository_Shallow(t
Test_MarshalObject(t
Test_waitingMiddleware_waitsForTheLockToBeReleased(t
TestRemoveWithOptions(t
TestTransport_updateDefaultGitBranch(t
Test_optionalFeature(t
TestService_ListFiles_GitHub(t
TestService_ListRefs_GitHub(t
TestService_ClonePublicRepository_Azure(t
Test_userRemoveAccessToken(t
TestEdgeStackStatus(t
TestUpdateAndInspect(t
TestCreateBackupFolders(t
Test_redeployWhenChanged_FailsWhenCannotFindStack(t
Test_MarshalObjectUnencrypted(t
Test_fileSystemService_FileExists_whenFileExistsShouldReturnTrue(t
Test_ClonePublicRepository_NoGitDirectory(t
Test_getCertificateAuthorityData(t
TestDeleteStatus(t
Test_startWaitingForSignal_afterGateGetsUnlocked(t
Test_GetKubeConfig(t
Test_UnMarshalObjectUnencrypted(t
Test_demoEnvironment_shouldFail(t
Test_apiKeyCacheInvalidateUserKeyCache(t
Test_StartJobEvery_Concurrently(t
TestService_ListFiles_Azure(t
TestGenerateSignedToken(t
Test_IsAgentEndpoint(t
TestService_ListRefs_Github_Concurrently(t
Test_movePath_successWhenSourceExistsAndDestinationIsMissing(t
TestSidebarProvider({
Test_apiKeyCacheSet(t
TestStrengthCheck(t
Test_movePath_success(t
Test_FileExists_whenFileNotExistsShouldReturnFalse(t
Test_updateEndpointRelation_successfulRuns(t
Test_AddAppLabels_PickingName_WhenLabelNameIsEmpty(t
Test_copyDir_shouldCopyAllFilesAndDirectories(t
