test.ViewPosition.TotalNumberOfLines.Should().Be(4);
ClearAsync_removes_all_images_from_cache()
RunCommandBasedOnArgument_fileeditor()
FindWindowScreen_should_return_empty_rect_if_no_screen_supplied()
FindPrevNode_should_return_null_if_model_does_not_have_row()
RepoObjectTree_should_show_Sort_menu_before_Expand_menus()
Add_should_add_new_definition_to_the_lowest_level_level2()
NonExistingPathsTest()
test.ViewPosition.FirstVisibleLine.Should().Be(22);
Get_return_image_name()
[TestCase(true)]
Error_raised_via_event_and_not_marked_as_handled_faults_task()
PublishTypes_for_Version2_15_has_expected_list_of_values()
RunCommandBasedOnArgument_stash()
Generate_should_not_quote_already_quoted_pathname()
Should_not_filter_running_builds_When_only_one_returned()
Can_load_1_layers_of_settings()
GetLaneInfo_for_artificial_commit_should_not_add_guid_and_mark_if_at_node()
LParam_to_point_in_ICSharpCode_restores_original_point(
RevParse_should_query_git_and_return_ObjectId_if_get_valid_hash()
ParseSingle_should_return_null_if_input_shorter_than_required()
ToggleBetweenArtificialAndHeadCommits_no_index_change([Values(false,
RestoreExpandedNodesState_should_restore_all_nodes()
Check_that_application_toolkey_is_same_as_test_constant()
RenderPlain_with_spaces()
SettingsAreModified_should_reflect_ThemeId_change()
RemoteDelete_should_replace_matching_oldRemoteUrl()
RunCommandBasedOnArgument_should_throw_on_null_args()
FilterInfo_ByPathFilter_expected()
Should_create_nullable_byte_setting()
GetLink_should_return_uri_if_uri_contains_hash()
BeforeTest(ITest
GetAllTagNames_must_return_branches_names()
AmendState_true_should_write_true_to_file()
Next_throws_if_disposed()
GetInitialsAndHashCode_return_the_initial_of_a_user_based_on_its_email()
[TestCase("bad_parentid",
Resolve_should_return_resolved_full_path_from_git_file_if_present_Mono()
GetSortedTags_should_throw_on_git_warning()
GetInitialsAndHashCode_return_question_mark_when_no_data_provided()
Default_values_are_defined_in_AppColorDefaults()
Should_throw_ThemeException_if_file_does_not_exist()
RemoteDelete_should_not_throw_or_mutate_list_of_remotes_if_oldRemoteUrl_not_in_list()
DiffKindRevisionTests_AL_3()
Should_take_whatever_build_When_multiple_not_yet_started_builds_on_same_commit()
RestoreExpandedNodesState_should_restore_one_node()
ShowFirstParentChecked_should_behave_expected()
GetAvatarAsync_should_create_image_from_stream()
DisplayAheadBehindInformation_should_display_warning_state_when_in_ahead_and_behind_state()
CanGetMinusLines()
Render_with_spaces_no_links()
GetRemoteName()
Deserialize_remote_repositories_without_ns()
MergeOrCommitMessage_should_write_commit_message_if_exists_and_no_merge_message()
MergeOrCommitMessage_should_write_commit_message_if_no_file_exists()
Themable_system_colors_should_not_contain_these_colors(
PngResources_ShouldNotContainDPIInformation()
GetFullBranchName()
GetAvatarAsync_return_backup_image_if_inner_throws()
MergeOrCommitMessage_should_return_merge_message_if_exists()
Submodule_status_changes_for_top_module_with_first_nested_module_commit()
ConfigureRemotes_Should_not_update_localHead_if_remoteHead_is_Tag()
GetLaneInfo_should_display_the_merged_branch()
GetLink_should_return_uri_if_at_link()
GetDefaultImageType_should_throw_if_requested_type_null()
GetNodeBrush_should_return_black_brush_if_colors_cache_not_primed()
ApplyMailboxPatchCmd()
Validate_should_throw_if_tag_revision_invalid()
IsTrackingRemote_should_return_false_when_tracking_another_remote_branch()
Command_with_custom_config_item_quoted()
RunScript_with_arguments_without_options_shall_succeed()
UnstagedId_is_artificial()
test.ViewPosition.TotalNumberOfLines.Should().Be(36);
[TestCaseSource(nameof(TestCases))]
GetAvatarAsync_should_generate_avatar_if_none_found()
CleanUpCmd()
IsTrackingRemote_should_return_false_when_tracking_another_remote()
GetLaneInfo_should_prefer_the_branch_from_merge_to_a_GitRef__at_inner_node()
LoadChildren_should_return_if_gitmodule_not_supplied()
GetData_should_return_ahead_and_behind_for_all_branches()
Should_return_no_build_Info_When_Api_Json_is_empty()
Should_handle_well_commit_message_in_commit_message_menu()
RepoDistributed_settings_should_return_expected()
Clear_should_remove_all()
GetDisplayPath()
testDriver(GetRemoteNode(form));
FilterInfo_ShowFirstParent_expected()
GetSortedRefs_should_remove_duplicate_refs()
Find_should_return_GIT_SSH_environment_variable_if_set()
ShowBranches_ShowFiltered_should_invoke_ShowFilteredBranches()
Contains_should_throw_if_option_null()
ParseGoToBranchLinkWithHash()
StashSaveCmd()
GetData_should_return_ahead_for_a_branch()
FilterOutConsoleCommandLine_NoFlush()
GetLaneInfo_should_return_empty_if_node_null()
RunCommandBasedOnArgument_openrepo()
ControlDisposedBeforeSwitchOnMainThread()
Restore_should_restore_current_position()
Save_should_throw_if_repositories_null()
GitVersion_is_old_but_supported()
Parse_should_return_unmodified_arguments_if_no_options_matched()
RemoveAvatarAsync_should_invoke_cache_remove()
Should_validate_full_sha1_correctly()
MergeOrCommitMessage_should_not_write_merge_message_if_exist_if_it_is_the_overridding_commitmessage_exists()
GetSortedRefs_should_load_ref_with_extra_spaces()
Build_given_a_set_of_values_builds_expected_command()
ParseGithubIssueForOriginLink()
BrowseDiff_OpenRevisionFile_DisplayOnly()
[TestCase("Hallo
Capture_should_capture_current_position_and_calculate_active_line_if_ShowLineNumbers_false_with_line_margin()
RepoObjectTree_moving_node_across_hidden_trees_skips_them()
Parse_lines_should_return_empty_list_if_null()
LocalExists_should_should_return_false_if_items_null()
RepoObjectTree_should_order_should_display_inactive_after_active_nodes()
GetSortedTags_should_split_output_if_no_warning()
RunCommandBasedOnArgument_blame_line()
AmendState_should_be_false_if_file_is_missing()
BuildBlameContents_WithDateButNotTime()
Submodule_status_changes_for_top_module_with_first_nested_module_change_commit()
DeleteImage_should_raise_invalidate()
test.ViewPosition.FirstLine.Should().Be("a");
RemoveRemote()
GetFullBranchNameTest()
testHelper.CreateRepoFile(".git",
Serialize_must_fail_as_not_supported()
Should_apply_colorblind_overrides_to_app_colors(
RevParse_should_return_null_if_revisionExpression_exceeds_260_symbols()
GetExpandedNodesState_should_return_all_expanded_nodes()
Should_stage_only_filtered_on_StageAll()
LoadChildren_should_return_shallow_tree_for_GitItem_with_updated_FileName()
AdjustWidthToSize_should_throw_if_table_has_no_columns()
DeleteImage_should_return_if_folder_absent()
LoadRemotes_should_not_throw_if_module_is_null()
[ExpectedException(typeof
ResetTheme_resets_colors_to_default_theme()
testform.UnstageAllToolItem.PerformClick();
BlameControlShouldStayOnLineIfInputOtherThanFileIsChanged()
RunCommandBasedOnArgument_branch()
GetFullNamePath_should_return_node_names_if_set()
Capture_should_capture_current_position_if_ShowLineNumbers_true_scrolled()
UpdateJunctionColors_should_prime_two_colors_for_two_junctions()
Command_with_custom_config_item_defined_after_argument()
Command_with_default_and_custom_config_items()
Equivalent_ids_are_equal()
[Platform(Exclude
HasChangedToNone_valid_result()
AddAsMostRecentAsync_should_not_move_if_path_already_as_top_entry()
Should_override_imported_color_When_current_theme_redefines_it(
Filters_should_behave_as_expected()
DiffKindRevisionTests_error()
Should_preserve_encoding_utf8_bom()
[TestCase(char.MinValue)]
GetAllChangedFilesCmd()
ShouldBeAbleToGetLaneCount()
GetLaneInfo_should_prefer_the_branch_from_merge_to_a_GitRef__at_junction_node()
If_Remote_is_not_prefix_of_Name_then_LocalName_should_return_Name()
Should_return_a_build_Info_When_Json_content_is_the_one_of_a_pull_request_build()
ShowBranches_ShowCurrent_should_invoke_ShowCurrentBranchOnly()
Should_update_committer_info_on_form_activated()
RunScript_with_arguments_with_s_option_with_RevisionGrid_without_selection_shall_display_error_and_return_false()
MergeOrCommitMessage_should_write_empty_message_if_null()
Submodule_status_changes_for_first_nested_module_with_second_nested_module_commit()
Resolve_should_return_resolved_full_path_from_git_file_if_present()
RunCommandBasedOnArgument_about()
Load_should_return_empty_collection_if_failed_to_deserialise()
ScriptOptionsParser_resolve_sRemotePathFromUrl_selectedRemotes_empty()
RunCommandBasedOnArgument_history(
ctor_must_throw_if_revision_ref_null()
ctor_should_throw_if_branches_is_null()
MigrateAsync_should_throw_if_currentHistory_null()
RevParse_should_query_git_and_return_null_if_invalid_response()
ctor_should_throw_if_branches_is_empty()
Trace.WriteLine("Test
RenderPlain_should_not_render_committer_info_if_same_as_author_info()
RevertCmd()
TestCombinedDiff()
ClearCacheAsync_should_return_if_folder_absent()
FileAndForgetReportsThreadException()
IsHighlighted_should_return_false_if_revision_is_null()
[TestCase("WorkTree1",
[Values(true,
testform.StagedList.SetFilter("");
GetImage_return_null_if_file_absent()
GetAvatarAsync_uses_inner_if_file_expired()
GetData_should_return_null_if_git_output_empty()
testHelper.Module.LocalConfigFile.Save();
NullReferenceException($"Test
ReturnsIconCleanWhenThereIsNoChangedFiles()
IndexId_is_artificial()
RunCommandBasedOnArgument_fileeditor_throws()
FilterInfo_ShowReflogReferences_expected()
RunCommandBasedOnArgument_commit()
GetEnvironmentValidPaths()
Should_resolve_to_user_defined_themes_directory_When_url_starts_with_macro()
AddImage_throws_if_stream_null()
FilteredGitRefsProviderTest()
BuildServerType_should_contain_discovered_build_server_plugins()
AddAsMostRecentAsync_should_move_existing_path_as_top_entry()
ConfigureRemotes_Should_not_update_localHead_if_remoteHead_is_local()
FilterInfo_Apply_ByMessage_Then_By_DiffContent()
Should_tolerate_css_comment(
CompletedOrDefaultThrowsIfFaulted()
LoadLegacy_should_return_empty_collection_if_failed_to_deserialise()
GetRemoteNames()
GetSortedTags_should_load_ref_with_extra_spaces()
FilterInfo_ByCommitsLimit_expected()
LoadLegacy_should_return_empty_collection_if_settings_value_null()
GetLaneInfo_should_display_the_subject_if_singleline_body_null()
LoadItemsInTreeView_should_add_all_none_GitItem_items_with_1st_level_nodes()
GetSubstringHashCode()
CreateTagWithMessageWritesTagMessageFile()
OpenGitRepository_should_return_null_if_directory_not_exist()
[TestCase(byte.MinValue)]
LoadFavouriteHistoryAsync_should_migrate_old_categorised_repositories()
[TestCase(float.MinValue,
ReturnsIconMixedWhenThereAreStagedAndUnstagedFiles()
DiffKindRevisionTests_AB_1h()
GetDisabledRemotes_returns_disabled_remotes_only()
GetCurrentRevision_should_return_expected_if_scriptHostControl_set_current_revision_has_no_refs()
ScriptOptionsParser_resolve_cDefaultRemotePathFromUrl_currentRemote_set()
RunCommandBasedOnArgument_difftool()
Adds_conditional_enumerable_parameters()
Deserialize_should_load_legacy_categorised_repositories()
testAccessor.ViewPatch("binaryfile.bin",
Remove_should_add_definition_to_collection()
testDriver(formCommit);
test.TextEditor.ActiveTextAreaControl.TextArea.Caret.Line.Should().Be(0);
RegisteredTemplates_should_be_immutable()
ResetColor_reverts_to_current_theme()
RunCommandBasedOnArgument_tag()
GetColor_should_return_empty_color_for_non_highlighted_if_HighlightSelected()
CanGetLineNumbersForCombinedDiff()
testPatch.AppendDiffLine("-ąśdkjaldskjlaksd",
PushAllCmd()
UpdateSubmoduleStatus_valid_result_for_first_nested_submodule()
Should_display_branch_and_no_remote_info_in_statusbar()
Serialize_recent_repositories()
UnescapeOctalCodePoints_handles_octal_codes()
ControlSwitchToMainThreadOnBackgroundThread()
Generate_should_include_suplied_branch_without_braces()
SaveRemote_should_throw_if_remoteName_is_null()
SelectFileOrFolder_should_not_select_an_inexisting_folder()
Change_notifications_occur_when_sort_is_changed()
TokenCancelledAfterSwitchOnBackgroundThread()
GetImage_cleans_oldest_images()
Matches_should_not_throw_if_revsion_null()
GetImage_calls_inner_the_first_time()
GetAvatarAsync_should_create_if_folder_absent()
Capture_should_capture_current_position_if_ShowLineNumbers_true_start()
GetLink_should_return_uri_if_without_link_text()
Get_should_throw_if_module_is_not_provided()
RemoveRecentAsync_should_remove_if_exists()
ContinueBisectCmd()
RepoObjectTree_should_order_should_not_display_inactive_if_none()
When_using_initial_theme_SetColor_does_not_affect_result()
TryParseRevisionshould_return_false_if_argument_is_invalid()
GitCreateTagArgs(TagName,
Subsequence()
[ExpectedException(typeof(ArgumentNullException))]
FindDescendantsOfType()
Deserialize_remote_repositories()
RemoveInvalidRepositoriesAsync_should_remove_recent_by_predicate()
ConfiguredMergeTool_should_return_value_in_config_file()
AddAsMostRecentAsync_should_move_only_first_existing_path_as_top_entry()
Submodule_status_changes_for_top_module_with_second_nested_module_commit()
GitDescribeProvider_returns_precedingTag_and_commitCount()
Dispose_is_idempotent()
Themable_system_colors_should_contain_these_colors(
RunCommandBasedOnArgument_push()
Should_display_detached_head_info_in_statusbar()
RunCommandBasedOnArgument_gitbash()
ApplyDiffPatchCmd()
testDriverAsync(formCommit);
Should_create_nullable_int_setting()
UserRoaming_settings_should_return_expected()
IndexOf()
UpdateJunctionColors_should_reset_between_calls()
[TestCase(int.MinValue)]
Parse_should_parse_c_arguments()
Should_return_null_When_body_is_null()
RemoveCmd()
GetRemoteBranch()
Render_should_render_body_with_links()
BuildServerType_should_contain_only_None_if_not_build_server_plugins_found()
CompletedResultReturnsResultIfCompleted()
Nulls_are_handled()
BrowseDiff_OpenRevisionFile_Index()
Should_get_link_definitions_When_no_remote_url_provided()
RunCommandBasedOnArgument_gitignore()
Render_should_render_body_without_links()
testPatch.AppendDiffLine("+changed
Render_should_render_committer_if_different_from_author()
GetRenameableLocalBranches_must_return_branches_names()
FilterInfo_ByMessage_expected()
ScriptOptionsParser_resolve_RepoName()
FilterInfo_ShowSimplifyByDecoration_expected()
Returns_the_same_image_as_the_wrapped_provider()
GetLink_should_return_uri_if_link_at_line_end()
testAccessor.SetTreeVisibleByIndex(2,
testAccessor.ReorderTreeNode(currNodes[1],
RepoObjectTree_moving_first_up_and_last_down_does_nothing()
RunCommandBasedOnArgument_cherry()
MergeOrCommitMessage_should_not_write_if_dir_no_longer_exists()
When_current_theme_is_default_SettingsAreModified_should_ignore_ThemeVariations_change()
Ignore_date_uncheck_enables_all_options_but_autosquash_if_interactive_not_checked()
AsReadOnlyList_returns_object_unchanged_when_has_required_interface()
IsTrackingRemote_should_return_false_when_supposedly_remote_branch_is_a_local_ref()
AdjustWidthToSize_should_throw_if_table_null()
GetAvatarAsync_calls_inner_the_first_time()
DiffKindRevisionTests_AB_null()
View_refect_reset_branch_filter()
RunScript_with_arguments_with_s_option_with_RevisionGrid_with_selection_shall_succeed()
DeleteWithExtremePrejudice_should_return_true_if_delete_successful()
IndexId_has_expected_value()
GetDeletableRefs_must_return_branches_names()
BrowseDiff_SuppressDiffToLocalWhenNoLocalExists()
test.ViewPosition.FirstVisibleLine.Should().Be(0);
(runTest
RestorePosition_should_not_restore_position_if_not_persisted()
ResetCommitMessage()
TryGetExactPathName_Should_handle_network_path()
MessageEdit_remembers_geometry()
IsTrackingRemote_should_return_false_when_supposedly_local_branch_is_a_remote_ref()
GetFileExtension()
GetCurrentRevision_should_return_expected_if_scriptHostControl_unset_unmatched_ref()
Should_take_only_a_started_running_builds_When_multiple_builds_on_same_commit()
LoadRemoteRepoBranches_GitError()
GetImageAsync_returns_null_for_unknown_image()
ResizeDropDownWidth_ToolStripComboBox_should_throw_if_combo_null()
Interactive_uncheck_disables_autosquash()
FindNextAsync_pressing_f3_outside_of_scan_region_should_clear_it()
LoadRemotes_should_not_populate_remotes_if_those_are_null_or_whitespace()
RestorePosition_should_position_window_with_Owner_set_and_CenterParent()
TestGetPlinkCompatibleUrl_Compatible()
GetLink_should_return_uri_if_begins_with_link()
Should_load_any_themable_system_color(
When_current_theme_is_default_choosing_theme_variation_should_be_enabled()
BlameControlShouldStayOnLineIfNullLineInput()
test.Properties[nameof(ApartmentState)];
RememberFile_GetGitCommit_Index_Tree()
SaveRemote_null_remote_should_invoke_AddRemote_and_require_update()
LoadLegacy_should_return_collection()
ConfigureRemotes_Should_not_update_localHead_if_localHead_is_remote()
SelectMessageFromHistory()
test.ViewPosition.FirstLine.Should().Be("diff
Should_return_file_text()
testAccessor.ViewPatch("FileViewerInternal.cs",
Clear_should_return_if_folder_absent()
RunCommandBasedOnArgument_history_throws(
Render_should_render_commit_children()
GetAvatarAsync_calls_inner_when_not_present_in_cache()
RemoveTrailingPathSeparatorTest()
Submodule_status_changes_for_second_nested_module_with_second_nested_module_changes()
WithRemoteBranch_HasAllMenuItems()
GetLink_should_return_uri_if_text_and_uri_contain_hash()
GetEnvironmentPathsQuotedTest()
Cancel_during_load_means_callback_not_fired()
TestToString()
CalculateBlameGutterData_When_date_is_DateMin_Then_it_falls_in_a_first_age_bucket()
AdjustWidthToSize_should_throw_if_no_widths_given()
RemoveFavouriteAsync_should_not_crash_if_not_exists()
Submodule_status_changes_for_second_nested_module_with_first_nested_module_precommit()
Serialize_remote_repositories()
Ignore_date_uncheck_enables_all_options_if_interactive_checked()
GetSortedRefs_should_throw_on_git_warning()
ControlSwitchToMainThreadOnMainThreadCompletesSynchronously()
GetLink_should_return_uri_if_comma_after_link()
FileViewer_ShowSyntaxHighlightingInDiff_enabled_use_highlighting()
SquareBracketInSectionName()
FileAndForgetFilterCanIgnoreExceptions()
GetCurrentRevision_should_return_null_if_scriptHostControl_set_current_revision_null()
Interactive_check_enables_autosquash()
[TestCase(false)]
When_current_theme_is_non_default_SettingsAreModified_should_reflect_ThemeVariations_change()
SaveRemote_populated_remote_should_invoke_RenameRemote_if_remoteName_mismatch_no_update_required()
[TestCase(IgnoreWhitespaceKind.None,
MigrateSettings_should_migrate_old_categorised_settings()
GetImage_return_null_if_file_expired()
ShouldCorrectlyIdentifyPngSections()
ScriptOptionsParser_resolve_StringWithDoubleQuotes()
testform.UnstagedList.SetFilter("file1");
GetImage_returns_known_image()
BranchCmd()
BrowseDiff_DeleteFile_WorkTree()
BlameControlShouldGoToFirstLineIfFileNameIsChanged()
Parse_line_should_return_null_non_matching_line()
RunCommandBasedOnArgument_clone()
AdjustWidthToFitContent_should_throw_if_combo_null()
CombinedDiffId_has_expected_value()
test.ViewPosition.CaretVisible.Should().BeFalse();
Should_show_add_required_shortcuts()
LoadItemsInTreeView_should_add_icon_for_file_extension_only_once()
MergeOrCommitMessage_should_return_overridden_if_exist_and_if_no_file_exists()
test(s)
GitDescribeProvider_returns_null_commitCount_at_tag()
Construction_with_null_parameters_is_permitted()
RunCommandBasedOnArgument_synchronize()
GetData_should_return_ahead_and_behind_for_a_branch()
[TestCase(AutoCRLFType.@true,
GetLaneInfo_should_return_no_info_if_node_revision_null()
FilterInfo_Apply_ByCommitter()
GetLaneInfo_for_non_artificial_commit_should_contain_guid_and_no_mark_if_not_at_node()
GetOutput_with_cache_miss()
GetCurrentRevision_should_return_null_if_scriptHostControl_unset_bare_or_empty_repo()
Should_preserve_encoding_utf8()
RunCommandBasedOnArgument_browse()
RepoObjectTree_should_show_all_submodules()
TokenCancelledBeforeSwitchOnBackgroundThread()
Submodule_status_changes_for_first_nested_module_with_second_nested_module_changes()
ParseGithubIssueForAllRemotesLink()
ReturnsIconUntrackedOnlyWhenThereAreUntrackedFilesOnly()
RememberFile_GetGitCommit_null()
UnlockIndex_should_only_delete_working_folder_lock_if_requested()
FileViewer_ShowSyntaxHighlightingInDiff_disabled_do_not_use_highlighting()
RunCommandBasedOnArgument_should_throw_on_empty_args()
MergeBranchCmd()
RunScript_with_arguments_with_s_option_without_RevisionGrid_shall_display_error_and_return_false()
AddRecentRepositories_should_add_new_item()
ToggleBetweenArtificialAndHeadCommits_no_change([Values(false,
Add_expires_last_used_entry_when_at_capacity()
GetLink_should_return_null_if_left_of_link()
PreserveCommitMessageOnReopen()
Remove_should_remove_definition_from_collection()
AllFirstAreParentsToSelected_should_return_false_if_no_parents_contains_any_of_selected_items()
GetEnabledRemotesNameWithoutBranches_returns_enabled_remotes_without_branches_only()
ReloadCommitInfo_should_handle_ShowAll_tags_correctly()
Error_raised_via_event_when_no_error_handler_installed_does_not_fault_task()
testAccessor.ReorderTreeNode(currNodes[3],
FindAndReplaceForm_scan_region_clears_if_new_text_was_set()
GetEnvironmentPathsTest()
FileViewer_given_non_text_use_default_highlighting()
LoadRecentHistoryAsync_should_trim_history_per_settings()
GetLaneInfo_should_display_only_the_branch_from_detected_merge_node_in_a_tree()
CacheEmptyGraph()
IsTrackingRemote_should_return_false_when_remote_is_null()
Serialize_should_throw_if_null()
CalculateBlameGutterData_When_date_is_older_than_artificial_old_boundary_Then_it_defines_first_age_bucket_and_so_falls_into_it()
[TestCase(char.MinValue,
Committer_date_uncheck_enables_all_options_but_autosquash_if_interactive_not_checked()
ReturnsIconDirtySubmodulesWhenThereAreOnlyUnstagedSubmodules()
GetColor_should_return_predefined_color_if_junction_color_has_been_calcualed()
Submodule_status_changes_for_top_module_with_no_forced_changes()
[TestCase(false,
RunCommandBasedOnArgument_formatpatch()
SaveHistoryAsync_should_trim_history_size()
CalculateBlameGutterData_When_date_is_newer_than_artificial_old_boundary_Then_it_falls_in_a_later_age_bucket()
BuildServerType_should_toggle_plugin_settings_controls()
BrowseDiff_ShowContextDiffToolForUnstaged()
Adds_enumerable_parameters()
Should_do_ellipsis_When_too_long_lines()
Append()
ScriptOptionsParser_resolve_RepoName_null()
DiffKindRevisionTests_BL_1()
UpdateJunctionColors_should_prime_only_two_colors_for_three_or_more_junctions()
GitVersion_is_good()
ClearCacheAsync_removes_all_images_from_cache()
ToggleBetweenArtificialAndHeadCommits_no_empty([Values(false,
BuildArguments_should_be_NUL_terminated()
FindPrevNode_should_return_null_if_there_is_no_lane_info()
GetData_should_return_empty_string_for_unknown()
RestoreExpandedNodesState_should_restore_no_nodes()
Command_with_config_item_that_overrides_default()
GetLink_should_return_uri_if_ends_with_link_without_link_text()
BrowseDiff_MainMenus_NoSelection()
Load_should_return_collection()
testform.StagedList.AllItems.Where(i
Cancel_is_idempotent()
TestCorrectlyLoadReversePatch()
Constructor_WithNullInput_Throws()
ReturnsIconDirtyWhenThereAreUnstagedChanges()
ParseScriptArguments_resolves_cDefaultRemotePathFromUrl_currentRemote_unset()
RevisionGridFilter_should_throw_if_unbound()
RunScript_without_arguments_shall_succeed()
Add_should_add_definition_present_in_lower_level_to_higher_level()
Parse_should_throw_if_module_null()
BlameControlShouldGotoRequestedLineAtStartAndIfReloaded()
GetImage_returns_null_for_unknown_image()
CompletedResultThrowsIfCancelled()
GetRepositoryNameTest()
DisplayAheadBehindInformation_should_display_nothing_when_disabled()
AdjustWidthToSize_should_throw_if_no_widths_given1()
Find_on_gitBinDir_having_ssh_exe_in_parent_directory_childrens_should_return_first_ssh_exe_found()
Can_save_settings()
Handles_all_enum_members()
Ignore_empty_gitmodules_path()
StashPushCmd_should_not_add_null_or_empty_filenames()
CommitMessagePath()
SaveFavouriteHistoryAsync_should_throw_if_repositories_null()
CopyText_should_format_text()
Resolve_should_return_path_from_git_file_if_present()
Capture_should_capture_current_position_if_ShowLineNumbers_false_without_margin()
GetImageAsync_returns_known_image()
BuildBlameContents_WithDateAndTime()
ShowBranches_ShowAll_should_invoke_ShowAllBranches()
RunCommandBasedOnArgument_cleanup()
CompletedOrDefaultReturnsResultIfCompleted()
GetImageAsync_cleans_oldest_images()
GetDefaultImageType_should_return_corresponding_enum()
UnlockIndex_should_throw_if_delete_fails()
ScriptOptionsParser_resolve_cRemoteBranch(
GetData_should_return_null_if_detached_head()
Should_should_show_nothing_if_no_revision_supplied()
CanGetHeaders()
CheckoutCmd()
Deserialize_recent_repositories()
WithActiveBranch_HasFilteredItems()
Render_should_render_commit_date_if_different_from_author_date()
Should_not_trigger_updated_event_for_struct_setting()
SetRemoteState_should_do_nothing_if_section_not_found()
Resolve_should_return_original_path_if_git_file_or_folder_absent()
ContinueMergeCmd()
RunCommandBasedOnArgument_blame_throws()
AnalyzeHashFunctionDistribution()
AddImage_should_exit_if_stream_null()
test.ViewPosition.TotalNumberOfLines.Should().Be(23);
StashPushCmd_should_add_message_if_provided_partial_stash()
Build_should_throw_ANE_if_exception_null()
RememberFile_GetGitCommit_FirstWorkTree()
Should_show_info_if_commit_has_defined_tags()
FilterInfo_ByDiffContent_expected()
[TestCase(int.MinValue,
CalculateBlameGutterData_When_all_dates_are_DateMin_Then_they_falls_in_a_first_age_bucket()
DiffKindRevisionTests_AB_2()
Equals_using_operator()
LoadGitCommitTemplate_real_filsystem()
Verify_backwards_compatibility_of_object_graph()
ShouldBeAbleToHighlightBranch()
AdjustWidthToSize_should_throw_if_index_outside_table_columns_count()
LoadRemotes_should_populate_remotes_if_any()
Should_show_supplied_path()
RemoveInvalidRepositoriesAsync_should_remove_favourite_by_predicate()
GetColor_should_return_empty_color_for_non_relative_if_DrawNonRelativesGray()
Adds_conditional_if_else_parameters()
ConfiguredDiffTool_should_return_value_in_config_file()
LoadRemoteRepoBranches_NoUrl([Values(null,
ConfiguredMergeTool_should_return_null_if_config_file_unset()
RemoveRemote_success()
Should_display_branch_and_remote_info_in_statusbar()
testAccessor.FileViewerInternal.GetTestAccessor().TextEditor.Document.HighlightingStrategy.Should().Be(HighlightingManager.Manager.DefaultHighlighting);
Should_throw_When_css_syntax_error()
SettingsAreModified_should_return_false_initially()
Should_create_nullable_bool_setting()
ApplyBranchFilter_should_invoke_RevisionGridFilter_with_no_branches()
LinkFactoryNull()
GetImage_return_null_if_filename_not_supplied()
Resolve_should_throw_if_path_is_null()
testform.StagedList.ClearSelected();
[Apartment(ApartmentState.MTA)]
Find_on_null_should_return_empty_string_if_no_GIT_SSH_is_set()
Deserialize_should_throw_if_null()
AbortMergeCmd()
Add_should_add_new_definition_to_the_lowest_level_level3()
SetRemoteState_should_throw_if_remote_is_null()
GitVersion_is_not_supported()
ConfigureDiffMergeTool_should_return_if_file_unset()
GetTabStops_should_get_stops_from_style_provider()
Next_cancels_previous_token()
ctor_must_throw_if_revision_null()
FindPrevNode_should_return_null_if_lane_negative()
Command_with_config_item_that_overrides_default_different_case()
Dispose_cancels_previous_token()
Committer_date_uncheck_enables_all_options_if_interactive_is_checked()
Test_StoreFilter_invalid()
FetchCmd()
Should_show_current_GitModuleWorkingDir_if_supplied_path_null()
GetAllBranchNames_must_return_branches_names()
RememberFile_GetGitCommit_Index_GetBlob()
testPatch.AppendHeaderLine("---
RunCommandBasedOnArgument_rebase()
BranchComparer([Values(null,
testAccessor.ReorderTreeNode(currNodes[first],
Find_on_gitBinDir_having_no_parent_should_return_empty_string_if_no_GIT_SSH_is_set()
ResizeDropDownWidth_ComboBox_should_throw_if_combo_null()
AdjustWidthToSize_should_set_width_to_largest_value()
AssignCategoryAsync_should_throw_if_key_null()
test.TextEditor.ActiveTextAreaControl.TextArea.Caret.Position.Should().Be(existingViewPosition.CaretPosition);
HasStatusChanges_valid_result()
RenameBranch()
DiffKindRevisionTests_AL_1()
Should_return_a_build_Info_When_Json_content_is_the_one_of_a_master_build()
Length()
Should_fail_in_parsing_invalid_url()
DeleteImage_should_delete()
ClearCacheAsync_should_ignore_errors()
test.ViewPosition.CaretVisible.Should().BeTrue();
Clear_should_ignore_errors()
ReplacementToken_cant_be_multichar()
ShowLatestStash_starting_disabled_should_filter_as_expected()
IsRemoteHead()
FilterInfo_ByDateFrom_expected()
TwoSections_ValueInBoth()
ShouldExtractOldVersionOfDetachedHeadOutput()
LoadRemoteRepoBranches_GitWarnings()
RunCommandBasedOnArgument_checkoutrevision()
Handle_artificial_objectid()
testDriver(contextMenu);
TwoSections_ValueInTheLast()
TryGetValue_renews_lifespan_of_entry()
test.ViewPosition.ActiveLineNum.RightLineNumber.Should().Be(-1);
WriteCommitMessageToFile_should_write_COMMITMESSAGE()
DiffKindRevisionTests_BL_2()
All_MergeTools()
Resized_images_are_cached_and_same_instance_is_returned_on_second_call()
GetAvatarAsync_returns_correct_image()
GetAvatarAsync_returns_image_from_inner()
GetLaneInfo_for_artificial_commit_should_not_add_guid_and_mark_if_not_at_node()
TokenCancelledAfterSwitchOnMainThread()
FilterInfo_ByDateTo_expected()
Equals_with_string()
Add_ResetMode_ensure_all_switches_are_handled()
DisabledRemoteExists_returns_true_for_disabled_remotes_only()
Submodule_status_changes_for_second_nested_module_with_second_nested_module_commit()
Should_save_nullable_struct_setting()
ParseGithubIssueForUpstreamAndOriginLink()
[TestCase(TestEnum.First,
LoadChildren_should_return_shallow_tree_for_non_GitItem()
DeleteImageAsync_removes_specific_image_from_cache()
[TestCaseSource(nameof(CreateCases))]
testform.StagedList.SetFilter("file1");
GetFont_should_get_font_from_style_provider()
RestorePosition_should_not_restore_position_if_not_required()
ParseGithubIssueForUpstreamLink()
SaveRecentHistoryAsync_should_trim_history_size()
[TestCase(DiffListSortType.FilePath)]
Load_performed_on_thread_pool_and_result_handled_via_callers_context()
ControlDisposedAfterSwitchOnBackgroundThread()
Submodule_status_changes_for_top_module()
GetThemePath_should_return_path_inside_app_install_When_theme_is_builtin()
testform.UnstagedList.ClearSelected();
EqualsAtIndex()
Add_IgnoreSubmodulesMode_ensure_all_switches_are_handled()
Command_with_one_argument()
UpdateSubmoduleStructure_valid_result_for_top_module()
Assert_default_filter_related_settings()
[TestCase(null,
Construction_without_parameter_is_allowed_and_returns_null()
LoadItemsInTreeView_should_add_IsCommit_as_submodue()
UpdateSubmoduleStatus_valid_result_for_top_module()
DependsOnSelectedRevision_should_throw_if_option_null()
SaveRemote_populated_remote_should_require_update_if_remoteUrl_mismatch()
RenameRemote()
testPatch.AppendDiffLine("@@
GetLaneInfo_should_not_display_a_branch_if_none_to_detect()
GetExpandedNodesState_should_return_one_expanded_node()
MergeOrCommitMessage_should_return_overridden_message_if_set()
IsValidPathTest()
When_current_theme_is_default_choosing_visual_style_or_theme_variation_should_be_disabled()
RemoteDelete_should_remove_remotes_matching_oldRemoteUrl()
CalculateBlameGutterData_When_dates_just_after_age_bucket_limit_Then_One_date_in_each_age_bucket()
SaveRemote_null_remote_should_set_settings()
GetSortedTags_should_load_ref_different_in_case()
Register_should_not_add_duplicates()
StashSaveCmd_should_add_message_if_provided_full_stash()
Should_create_struct_setting()
ParseGoToBranchLink()
Clear_removes_all_entries()
Command_with_default_config_item()
AllFirstAreParentsToSelected_should_return_false_if_parents_null()
CanFindDeletedLines()
GetTreeRefs()
test.ViewPosition.CaretPosition.Should().Be(new
(ArgumentNullException))]
RunCommandBasedOnArgument_blame()
ShouldBeAbleToCacheGraphTo()
Submodule_status_changes_for_top_module_with_second_nested_module_change()
DiffKindRevisionTests_AL_2()
Render_should_render_commit_parents()
testAccessor.ReorderTreeNode(currNodes[last],
TryParseAsciiHexBytes_returns_false_when_array_null()
Submodule_status_changes_for_first_nested_module_with_top_module_changes()
TryRemove_returns_false_for_unknown_entry()
testAccessor.SetTreeVisibleByIndex(1,
GetLink_should_return_uri_if_link_at_line_begin()
ScriptOptionsParser_resolve_QuotedWithBackslashAtEnd()
Submodule_status_changes_for_second_nested_module_with_first_nested_module_prechanges()
RevParse_should_return_ObjectId_if_revisionExpression_is_valid_hash()
GetToolSetting_should_return_empty_if_toolName_is_empty()
ConfigureRemotes_Should_update_localHead_if_remoteHead_is_the_remote_origin_of_the_localHead()
Returns_null_if_no_provider_is_set()
Add_GitBisectOption_ensure_all_switches_are_handled()
RunCommandBasedOnArgument_settings()
CanGetContextLines()
LoadItemsInTreeView_should_not_add_icons_for_file_if_none_provided()
ToggleRemoteState_should_not_fail_if_activate_repeatedly()
SelectedDiff_remembers_geometry()
RunCommandBasedOnArgument_history_returns_false(
LoadDiffMergeToolConfig_should_create_tool_config_with_userSuppliedPath_if_tool_unregistered()
CompletedResultThrowsIfFaulted()
[TestCase(TestEnum.First)]
RenderPlain_should_render_commit_date_if_different_from_author_date()
SplitterPositionsShouldBeRestored([Values(true,
TestGetPlinkCompatibleUrl_NoPlink()
RunCommandBasedOnArgument_init()
ConfiguredDiffTool_should_return_null_if_config_file_unset()
Adds_conditional_parameters()
[TestCase(float.MinValue)]
CombinedDiffId_is_artificial()
ApplyRevisionFilter_should_reset_filer_if_RevisionGridFilter_throws_IOE()
ScriptOptionsParser_resolve_sRemoteBranch(
DiffKindRevisionTests_BpL_1()
LParam_to_Point_restores_original_point(
RunCommandBasedOnArgument_searchfile()
FilterInfo_IgnoreCase_expected()
GetImage_throws_if_filename_not_supplied()
FileAndForgetFilterCanAllowExceptions()
TwoSections_ValueInBoth_GetValues()
TestMergedBranchesCmd([Values(true,
SaveImpl_should_create_folder_if_absent()
Equivalent_ids_have_equal_hash_codes()
AddImage_should_raise_invalidate()
ShowFirstParent_should_invoke_ToggleShowFirstParent()
LoadChildren_should_throw_if_null()
RunScript_without_scriptKey_shall_return_false([Values(null,
[TestCase(byte.MinValue,
Dispose_during_load_means_callback_not_fired()
RemoveFromHistoryAsync_should_not_crash_if_not_exists()
GetData_should_return_behind_for_a_branch()
ScriptOptionsParser_resolve_sRemotePathFromUrl_currentRemote_set()
RememberFile_GetGitCommit_SecondWorkTree()
AllTags_must_return_all_revision_tags()
ShowReflogs_should_invoke_ToggleShowReflogReferences()
GetSubmoduleNamesFromDiffTest()
LoadItemsInTreeView_should_add_IsBlob_as_file()
RemoveFromHistoryAsync_should_remove_if_exists()
ParseRemotes()
GitVersion_is_unknown_then_return_all_data()
MergeMessagePath()
Should_load_any_app_color(
UnstagedList_remembers_geometry()
ApplyBranchFilter_should_invoke_RevisionGridFilter_with_NoResultsFound()
Submodule_status_changes_for_top_module_with_top_module_changes()
FilterInfo_Apply_ByAuthor()
Should_correctly_setup_form_title_for_rebase_action()
GetInitialsAndHashCode_return_the_initial_of_a_user_based_on_its_name()
testPatch.AppendHeaderLine(testPatch.Patch.PatchHeader);
GetAvatarAsync_should_not_call_gravatar_if_exist_in_cache()
RemoveInvalidRepositoriesAsync_should_apply_predicate()
Command_with_no_arguments()
RunScript_with_arguments_with_c_option_shall_succeed()
Should_create_nullable_float_setting()
TestGetStatusChangedFilesFromString()
GetModule_should_throw_if_unbound()
RefsNull()
RunCommandBasedOnArgument_remotes()
Load_should_return_empty_collection_if_settings_value_null()
LocalExists_should_return_false_if_none_of_locally_tracked_items_have_files()
GetImageAsync_throws_if_filename_not_supplied()
DiffKindRevisionTests_AB_1p()
AddAsMostRecentAsync_should_add_new_path_as_top_entry()
GetLaneBrush_should_set_black_color_for_empty_junction_list()
ShouldReorderInTopoOrder()
Submodule_status_changes_for_second_nested_module_with_prechanges_noupdate()
RunCommandBasedOnArgument_pull()
ToString_When_Not_Null_Returns_Output()
RepoObjectTree_should_order_inactive_remotes_alphabetically()
test.TextEditor.ActiveTextAreaControl.TextArea.ScrollToCaret();
BrowseDiff_DifftoolMenu_Default()
testDriver(bounds1,
Ignore_date_check_disables_all_other_options()
TryGetExactPathName()
UpdateSubmoduleStatus_valid_result_for_second_nested_submodule()
[ExpectedException(typeof(NotSupportedException))]
GetLaneInfo_should_display_only_the_branch_from_next_merge_node()
MergeOrCommitMessage_should_return_commit_message_if_exists_and_no_merge_message()
Cancel_does_not_throw_if_no_token_yet_issued()
OpenGitRepository_should_not_throw_if_path_not_end_with_slash()
Should_unstage_only_filtered_on_UnstageAll()
DeleteImage_should_ignore_errors()
ChangeWorkingDir_should_promt_user_to_delete_invalid_repo()
FilterInfo_ShowCurrentBranchOnly_expected()
UpdateSubmoduleStructure_valid_result_for_second_nested_submodule()
RunScript_without_command_shall_return_false([Values(null,
GetExpandedNodesState_should_return_no_expanded_nodes()
Should_do_ellipsis_When_too_many_lines()
CommitCmd()
LocalExists_should_return_true_if_file_exists()
ShowBranches_Reflog_should_invoke_ToggleShowReflogReferences()
TestPatchManagerInstanceNotNull()
LoadChildren_should_throw_if_ObjectId_is_null()
test.ViewPosition.ActiveLineNum.Should().NotBeNull();
test.ViewPosition.ActiveLineNum.LineNumInDiff.Should().Be(20);
RebaseRangeCmd()
testDriver(form.GetTestAccessor().RepoObjectsTree);
AddSubmoduleCmd()
GetEnabledRemoteNames_returns_enabled_remotes_only()
RebaseCmd()
Using_load_or_cancel_after_dispose_throws()
testPatch.AppendHeaderLine("+++
Dialog_remembers_window_geometry()
IsTrackingRemote_should_return_true_when_tracking_remote()
OpenGitRepository_should_return_null_if_not_valid_git_repo()
DetachedSingleRevision()
Should_resolve_to_preinstalled_themes_directory_by_default()
TestFetchArguments()
ForNoFixedPanel_WhenWidthChanges_DistanceChangesEvenly()
RunScript_with_arguments_with_c_option_without_revision_shall_display_error_and_return_false()
FilterInfo_ByAuthor_expected()
ApplyBranchFilter_should_invoke_RevisionGridFilter_with_branches()
Should_show_committer_info_on_open()
Parse_lines_should_parse_correctly()
GetAvatarAsync_cleans_oldest_images()
AddRemote()
RepoObjectTree_moving_node_legally_moves_it()
ParseSingle_should_return_null_for_null()
SelectFileOrFolder_should_select_a_file_in_complex_filetree()
test.ViewPosition.FirstVisibleLine.Should().Be(18);
GetParents_calls_correct_command_and_parses_response()
PopulateFavouriteRepositoriesMenu_should_order_favourites_alphabetically()
Should_apply_colorblind_overrides_to_system_colors(
FilterInfo_ctor_expected()
GetNodeBrush_should_return_LinearGradientBrush_if_mutiple_colors_primed()
RemoveInvalidRepositoriesAsync_should_not_apply_predicate()
testHelper.CreateRepoFile(@".git\config",
testAccessor.ReorderTreeNode(currNodes[0],
Test_FilterWatermarkLabelVisibility_on_FilterVisibleChange(
RunCommandBasedOnArgument_viewdiff()
GetSortedRefs_should_split_output_if_no_warning()
Resolve_should_return_path_to_git_folder_if_present()
Find_on_gitBinDir_parent_throwing_should_return_empty_string()
Parse_should_return_empty_if_null()
CloneCmd()
test.TextEditor.ActiveTextAreaControl.TextArea.Caret.Column.Should().Be(0);
GetCurrentCheckout_should_query_git_and_return_sha_for_HEAD()
IsEmpty()
FilterInfo_ctor_with_Raw_expected()
AllFirstAreParentsToSelected_should_return_true_if_all_parents_contains_all_of_selected_items()
GetLaneInfo_should_display_branch_and_source_from_merge_node()
GetInitialDirectory_CalculateInitialDirectory_should_return_directory_for_supplied_path()
RestorePosition_should_not_restore_position_if_minimised()
Should_should_show_info_for_multiple_commits()
UpdateJunctionColors_should_prime_one_color_for_one_junction()
GetNodeBrush_should_return_SolidBrush_with_first_primed_color_if_highlighted()
Add_CleanMode_ensure_all_switches_are_handled()
ControlDisposedAndTokenCancelledBeforeSwitchOnMainThread()
LaneColorTest()
CompletedOrDefaultThrowsIfCancelled()
Should_throw_When_cyclic_css_imports()
LoadItemsInTreeView_should_not_add_nods_if_no_children()
Should_correctly_setup_form_title_for_merge_action()
Get_should_throw_if_data_null()
GetLaneInfo_should_not_display_a_branch_if_none_at_first_children()
CreateTagUsesGivenArgs()
MergeOrCommitMessage_should_return_empty_if_no_file_exists()
RenderPlain_with_tabs()
Command_with_custom_config_item_and_argument()
AsReadOnlyList_returns_singleton_empty()
ParseLinkWithEmptyRemotePart()
Should_not_trigger_updated_event_for_nullable_struct_setting()
ShowLatestStash_starting_enabled_should_filter_as_expected()
Should_save_struct_setting()
Should_show_load_exception_info_correctly()
LoadGitCommitTemplate_real_filesystem()
RemoveRemote_should_throw_if_remote_is_null()
When_current_theme_is_non_default_SettingsAreModified_should_reflect_UseSystemVisualStyle_change()
testAccessor.ViewPatch(null,
Uses_initial_theme_by_default()
RepoObjectTree_should_load_active_remotes()
GetSuperprojectCurrentCheckout()
ParseGitBlame()
Command_with_custom_config_item()
TestGetPlinkCompatibleUrl_Invalid()
DisplayAheadBehindInformation_should_display_normal_state_when_no_data_returned()
ReloadCommitInfo_should_render_links_correctly()
GitDescribeProvider_returns_nulls_if_no_preceding_tag()
Command_with_default_and_custom_config_items_and_argument()
DisplayAheadBehindInformation_should_display_normal_state_when_in_ahead_state()
SelectFileOrFolder_should_select_a_folder()
test.ViewPosition.Should().Be(existingViewPosition);
ScriptOptionsParser_resolve_sRemoteBranchName(
AsReadOnlyList_copies_to_new_list_if_required()
FindWindowScreen_should_not_crash_if_point_in_dead_middle_between_monitors()
PublishTypes_for_OlderVersion_has_expected_list_of_values()
ReturnsIconUnknownWhenNull()
[TestCase("Too_many_lines")]
DisplayAheadBehindInformation_should_display_warning_state_when_in_behind_state()
AddImage_stores_image()
FileAndForgetIgnoresCancellationExceptions()
RepoObjectTree_should_order_active_remotes_alphabetically()
GetNodeBrush_should_return_SolidBrush_with_NonRelativeColor_if_not_highlighted()
WithInactiveLocalBranch_HasAllMenuItems()
PassesCreatedArgsAndWindowToCommands()
Build_should_serialize_exception_into_url()
WriteCommitMessageToFile_should_write_MERGE_MSG()
EnabledRemoteExists_returns_true_for_enabled_remotes_only()
LoadItemsInTreeView_should_not_load_icons_for_file_without_extension()
Should_show_info_if_commit_has_defined_branches()
Generate_should_include_build_suffix()
Resolve_submodule_real_filsystem()
FindDescendantsOfTypeWithPredicate()
RemoveFavouriteAsync_should_remove_if_exists()
When_using_initial_theme_SetTheme_does_not_affect_result()
ReloadCommitInfo_should_handle_ShowAll_branches_correctly()
GetLaneInfo_for_non_artificial_commit_should_contain_guid_and_mark_if_at_node()
FindPrevNode_should_return_the_parent_node_of_the_first_segment_and_throw_in_debug_build()
Should_correctly_setup_form_title_for_fetch_action()
AddImage_should_create_if_folder_absent()
GitDescribeProvider_returns_nulls_for_invalid_revision()
testform.StageAllToolItem.PerformClick();
Clear_should_raise_invalidate()
Find_on_gitBinDir_having_no_ssh_exe_in_parent_directory_childrens_should_return_empty_string()
ConfigureRemotes_Should_not_update_localHead_if_remoteHead_is_not_the_remote_origin_of_the_localHead()
Should_honor_css_import_directive(
MoveLanesRight_should_do_nothing_if_empty([Values(-1,
Load_should_execute_async_operation_and_callback()
testPatch.AppendHeaderLine(testPatch.Patch.PatchIndex);
FindPrevNode_should_return_null_if_lane_exceeds_lane_count_and_lane_is_not_the_node_lane()
Generate_should_include_supplied_pathname()
ToggleRemoteState_should_not_fail_if_deactivate_repeatedly()
Should_show_all_sort_options()
GetThemePath_should_return_path_inside_app_data_When_theme_is_not_builtin()
LoadRemotes_should_not_populate_remotes_if_none()
FilterInfo_ByBranchFilter_expected()
AddImage_should_create_image_from_stream()
PushTagCmd()
Adds_simple_parameters()
ParseSingle_should_return_GitItem()
AmendState_true_should_delete_file_if_not_RememberAmendCommitState()
CompletedOrDefaultReturnsDefaultIfNotCompleted()
AmendState_should_be_false_if_not_RememberAmendCommitState()
CRLFInOutput()
GetLaneInfo_should_display_only_the_branch_from_inner_node_in_a_tree()
BrowseDiff_ResetMenu_Default()
GetColor_should_return_user_configured_color_if_not_MulticolorBranches()
Should_create_nullable_enum_setting()
test.ViewPosition.ActiveLineNum.Should().BeNull();
Should_trigger_updated_event_for_struct_setting()
FilterInfo_Apply_ByDiffContent()
LoadItemsInTreeView_should_add_IsTree_as_folders()
ScriptOptionsParser_resolve_cRemoteBranchName(
FilterOutConsoleCommandLine_Flush()
CanFindAddedLines()
Resolve_submodule_real_filsystem_Mono()
Parse_should_return_the_list()
GetEnvironmentValidPaths_quoted()
ResetAllColors_reverts_to_current_theme()
GetLink_should_return_null_if_right_of_link()
TryRemove_removes_existing_entries()
DisplayAheadBehindInformation_should_not_display_anything_if_does_not_support_ahead_behind()
ControlSwitchToMainThreadOnMainThread()
LimitExceeded([Values(true,
FileAndForgetFilterIgnoresCancellationExceptions()
Generate_should_return_default_title_if_not_valid_working_directory()
Committer_date_check_disables_all_other_options()
Intern()
Parse_should_parse_s_arguments()
GetImage_return_null_if_exception()
WithTagNode_HasAllMenuItems()
ShouldBeAbleToClear()
Command_with_custom_config_item_already_quoted()
ThrowIfOnUIThread()
FindPrevNode_should_return_the_node_if_it_is_at_the_node_lane_although_lane_count_is_0()
BrowseDiff_MainMenus_Default()
ClearCacheAsync_should_remove_all()
ParseHtttpLinkWithHash()
All_DiffTools()
ShowFirstParentChecked_should_reflect_button_state()
ToString_When_Null_Returns_Input()
ParseInternalScheme_Null()
SaveFavouriteHistoryAsync_should_save()
Remote_Should_prefix_LocalName_for_Name()
LoadDiffMergeToolConfig_should_load_tool_config_if_tool_registered()
DiffKindRevisionTests_ApL_1()
AddImage_calls_inner()
LocalExists_should_return_true_if_any_items_not_tracked()
testDriver(form);
ResetAuthor_depends_on_amend()
ToLine_should_throw_if_operation_not_supported()
Add_ForcePushOptions_ensure_all_switches_are_handled()
Render_should_not_render_committer_info_if_same_as_author_info()
testPatch.AppendDiffLine("
Should_not_filter_running_builds_When_builds_are_on_different_commits()
GetOutput_with_cache_hit()
Resolve_non_bare_repository_real_filsystem()
SelectFileOrFolder_should_select_a_file()
Cancel_cancels_previous_token()
OpenGitRepository_should_return_module_For_valid_git_repo()
FilterInfo_HasCommitsLimit_expected()
Different_ids_have_different_hash_codes()
UnescapeOctalCodePoints_returns_same_string_if_nothing_to_escape()
RenderPlain_should_render_committer_if_different_from_author()
UserThemesDirectory_should_be_inside_AppData()
ControlDisposedBeforeSwitchOnBackgroundThread()
Render_with_spaces_with_links()
[SuppressMessage("ReSharper",
FileViewer_highlight_selected_text_when_enabled()
GetLink_should_return_null_if_index_is_invalid()
LoadDiffMergeToolConfig_should_create_tool_config_if_tool_unregistered_but_exists_path()
CreateTagWithMessageAssignsTagMessageFile()
GetCommitInfo_should_provide_information_without_revisions()
Can_load_2_layers_of_settings()
Remove_should_save_definition_to_lowest_settings()
PercentageOutput()
ReturnsIconStagedWhenThereAreOnlyStagedFiles()
Cancel_during_delay_means_load_not_fired()
SubmoduleSyncCmd()
UnlockIndex_should_only_delete_lock_if_exists()
GetData_should_return_empty_result_if_unable_match_branch()
ControlDisposedAfterSwitchOnMainThread()
DiffKindRevisionTests_ApL_2()
