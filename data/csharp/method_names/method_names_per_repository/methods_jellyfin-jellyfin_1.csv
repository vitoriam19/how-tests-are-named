HoneybeeTest()
StreamContent(File.OpenRead(Path.Combine("Test
File.OpenRead("Test
Should_Return_The_First_When_NoLanguage()
UK_DataTest_ChannelsTest()
File.ReadAllText("Test
Should_Return_The_First_Matching_With_No_Language()
testFilename.ToString();
testFilename.StartsWith("-",
[InlineData("Test
ShouldHandleDateWithOffset()
TestFormat5()
ReportStringUsage()
Should_Return_The_First_When_NoMatchFound()
testFilename[0].Equals('_')
ShouldHandlePartDates()
UK_DataTest_MultipleTitles_SameLanguage_Should_ReturnFirstValue()
ds.GetFilePaths(It.IsRegex(@"Test
testFilename[folderName.Length..].Trim();
Assert.Equal("Test
testFilename[0].Equals('-')
Should_Return_The_First_Matching_With_Empty_Language()
User("Test
Path.Combine("FfProbe/Test
TestFormat6()
TestFormat2()
Should_Return_All_Languages()
TestFormat3()
ShouldHandleSpaces()
TestFormat4()
Should_Return_The_First_Matching_Language_EN()
StreamContent(File.OpenRead("Test
testFilename[0].Equals(
TestFormat1()
ShouldHandlePartDatesWithOffset()
(underTest
ShouldHandleSpaces2()
UK_DataTest_MultipleTitles_NoLanguage_Should_ReturnFirstValue()
Should_Return_The_First_Matching_Language_ES()
ReportUnusedStrings()
ES_MultiLanguageDataTest()
File.ReadAllBytes("Test
UK_DataTest_GeneralTest()
test.Query.First();
testFilename.Substring(folderName.Length).Trim();
testFilename.StartsWith("-")
Test1()
Path.Join("Test
