no_operations()
[Description("Test
testField.Arguments.Find("intOptional").ShouldNotBeNull();
test.FromJson<TestClass1>();
can_query_without_query_name()
test_parsevalue_string()
float_into_id()
float_into_string()
all_variables_deeply_defined()
prints_string_field_with_multiple_args()
if_false_omits_inline_fragment()
testData.FromJsonAsync<TestClass1>();
partial_object_including_required()
properly_parses_single_value_to_list()
allows_querying_schema_for_possibleTypes_of_an_interface()
test('./src/GraphQL.DataLoader.Tests'),
argument_converts_long_to_int()
throw_error_on_non_graphtype_with_register_types()
testDbInput(arg:$arg)
executes_with_complex_input()
getting_specified_argument_in_resolver_overrides_default_value()
unquoted_into_id()
ExecutionError("Test
prints_string_field_with_multiple_args_third_has_default()
test_fieldtype_type()
allows_nullable_inputs_to_be_ommited()
allows_fragment_conditions_to_be_abstract_types()
getting_unspecified_argument_in_resolver_yields_default_value()
test.DeprecationReason.ShouldBe("Test
allows_querying_schema_for_an_interface_kind()
allows_querying_field_args()
testData.ReadByte());
coerces_0_to_false()
anon_operation_with_subscription()
full_schema_query()
prints_string_field_with_multiple_args_first_has_default()
can_define_simple_connection_with_resolver()
something()
test.FromJson<TestClass2>();
can_get_nullable_argument_with_null_value()
testData.ReadByte().ShouldBe(-1);
test(arg:{_maxNumber})
no_args_on_multiple_optional()
result.ShouldBeSimilarTo(@"{""errors"":[{""message"":""Test
testInputString(arg:\"hello\")
allows_querying_the_schema()
throw_error_if_argument_doesnt_exist()
testInputs.Select(x
getting_unspecified_argument_in_resolver_yields_null()
testType.ResolvedInterfaces.ShouldContain(if2Type);
test.FromJson<TestClass3>();
result.Result.ShouldBe("Test
partial_object_unknown_field_arg()
coerces_string_True()
graphType.Description.ShouldBe("Test
trims_nonnull_bang()
allows_nullable_inputs_to_be_ommited_in_an_unlisted_variable()
InvalidOperationException("Test
testExecution();
if_false_omits_on_scalar()
graphType.DeprecationReason.ShouldBe("Test
console.log('Test
testExecution().ConfigureAwait(false);
if_true_includes_fragment_spread()
test_parseliteral_string()
prints_string_field_with_int_arg()
multiple_operations_of_different_types()
anon_operation_with_mutation()
prints_object_field()
single_variable_in_fragment_not_defined_by_multiple_operations()
good_enum_value()
mutation_input_from_variables()
testNonNullInput(arg:$arg)
provides_typename()
test_field_name(string
testType.ResolvedInterfaces.ShouldContain(if1Type);
testData.FromJson<TestClass1>();
can_access_object()
throws_exception_with_null_type()
coerces_invalid_string_to_null()
coerces_1_to_true()
argument_returns_long()
prints_custom_scalar()
multiple_variables_not_defined()
test.Name.ShouldBe("EnumTest");
prints_unions()
test(settings,
query_can_get_long_inline()
int_into_enum()
can_get_enum_argument_with_overriden_default_value()
test_loopback_with_null()
second_arg_on_multiple_optional()
variables_in_fragment_not_defined_by_multiple_operations()
can_query_for_friends_of_humans()
prints_non_null_list_of_string_field()
coerces_string_true()
registers_only_root_types()
long_into_float()
testInput(arg:
throws_error_when_trying_to_register_field_of_incompatible_type()
when_nullable_variable_provided()
nullable_boolean_to_nullable_boolean_in_directive()
query_can_get_long_variable()
nonnull_boolean_to_boolean()
multiple_reqs_on_mixed()
test_outputs()
registers_additional_types()
test(target,
int_into_boolean()
boolean_to_boolean_within_fragment()
converts_string_to_string_value()
coerces_string_to_identifier()
prints_string_list_field()
scalar_selection_not_allowed_with_directives()
converts_int_to_int_value()
testDotnet(settings)
variable_within_single_fragment_defined_in_multiple_operations()
prints_string_field()
test_parallel()
Exception("Test
boolean_into_enum()
string_into_int_value()
variable_within_fragments_defined_in_operations()
boolean_to_nullable_boolean_in_directive_with_default()
converts_small_numbers_to_int()
errors_on_incorrect_type()
test_parsevalue_structured()
test.Description.ShouldBe("Test
throws_exception_with_invalid_type()
does_not_allow_non_nullable_inputs_to_be_omitted_in_a_variable()
can_be_defined_of_graphtype()
throws_error_when_trying_to_register_type_with_same_name()
testInputString(arg:$arg)
valid_scalar_selection_with_args()
multiple_operations_of_same_name_of_diferent_types_mutation()
registers_argument_input_objects()
can_convert_json_to_array()
test_loopback_with_value()
argument_returns_enum_from_string()
test(inputs:
argument_returns_boxed_string_uncast()
one_arg_on_multiple_optional()
converts_bool_to_boolean_value()
query_can_get_enum_argument()
multiple_operations()
list_value_single_value_of_incorrect_type()
test(arg:{double.MinValue:0}0.0)
cancellation_is_propagated()
cancellation_token_in_context()
different_case_enum_value_into_enum()
one_anon_with_fragment()
allows_nullable_inputs_to_be_ommited_in_a_variable()
nonnullable_fields_without_values_do_complain()
nonnullable_fields_with_values_never_complain()
when_argument_provided_cannot_be_parsed()
coerces_double_to_value()
allows_nullable_inputs_to_be_set_to_a_value_in_a_variable()
object_type_missing_selection()
all_variables_defined()
testData.Dispose();
unquoted_string_into_int()
incorrect_value_and_missing_argument()
testInput(arg:123)
prints_ast()
both_is_happy()
trims_array()
nonnull_boolean_to_boolean_within_fragment()
testField.Arguments.Find("intRequired").ShouldNotBeNull();
int_to_nonnull_int_within_nested_fragment()
scalar_selection_not_allowed_on_enum()
trims_combo()
does_not_throw_with_valid_type()
int_to_nonnull_int_within_fragment()
all_reqs_and_opts_on_mixed()
skip_true_omits_fragment()
can_determine_whether_argument_exists_in_resolver()
skip_false_includes_fragment_spread()
testField.Arguments.Find("strRequired").ShouldNotBeNull();
can_query_for_humans()
list_value_incorrect_item_type()
test('./src/GraphQL.Tests'),
test_output()
does_not_allow_non_nullable_inputs_to_be_set_to_null_in_a_variable()
converts_null_to_string_value()
test()
scalar_selection_not_allowed_on_boolean()
variable_in_fragment_used_by_other_operation()
complexinput_to_complexinput()
prints_variables()
test(arg:
argument_returns_enum()
prints_string_field_with_non_null_int_arg()
executes_with_complex_scalar_input()
one_named_operation()
testDbInput(arg:\"123\")
partial_object_required_field_can_be_falsey()
boolean_to_nonnull_boolean_in_directive()
string_over_boolean()
query_can_get_int_variable()
uses_default_value_when_not_provided()
recursively_registers_children()
allows_nullable_inputs_to_be_set_to_null_in_a_variable()
skip_true_omits_fragment_spread()
test.Values.FindByName("CUSTOM_NAME").ShouldNotBeNull();
string_into_enum()
complexinput_to_complexinput_in_field_position()
test_nonnull_constructor()
allows_querying_the_schema_for_documentation()
converts_double_to_float_value()
argument_returns_enum_from_number()
registers_interfaces_when_not_used_in_fields()
prints_non_null_list_of_non_null_string_field()
testWithInitialError(custom:
if_true_includes_inline_fragment()
multiple_variables_in_fragments_not_defined()
testContext.Complete("bar");
getting_unspecified_argument_in_resolver_yields_overridden_default_value()
testInput(arg:$arg)
one_anon_operation()
coerces_iso8601_formatted_string_to_date()
int_into_float()
big_int_into_int()
executes_using_union_types()
can_query_for_droids()
test('./src/GraphQL.Tests')
if_true_includes_fragment()
coerces_iso8601_string_with_tzone_to_date()
should_have_field_information()
only_nullable_is_happy()
skip_false_includes_inline_fragment()
int_to_nonnull_int()
incorrect_value_type()
can_convert_json_to_input_object_with_enum_string()
allows_nullable_inputs_to_be_set_to_a_value_directly()
test.Values.FindByName("ENUM_2").ShouldNotBeNull();
works_without_directives()
prints_int_value()
valid_scalar_selection()
multiple_undefined_variables_produce_multiple_errors()
partial_object_missing_required()
no_arg_on_optional_arg()
testValue(arg:
test_default()
test").ShouldBeCrossPlat("\"\"\"\nThis
prints_interface()
should_have_name_and_description()
log(chalk.yellow('Test
Observer.ShouldHaveResult().ShouldBeSimilarTo(@"{""errors"":[{""message"":""Test
prints_string_field_with_multiple_args_second_has_default()
test(settings.target,
converts_long_to_long_value()
multiple_reqs_and_one_opt_on_mixed()
only_nonnullable_is_happy()
good_float_value()
result.ShouldBe("Test
should_derive_name()
interface_type_missing_selection()
can_register_field_of_compatible_type()
float_into_enum()
int_into_id()
errors_on_addition_of_unknown_input_field()
test('Debug',
float_into_boolean()
does_not_use_incorrect_value()
can_convert_json_to_input_object_with_child_object_list()
long_into_id()
scalar_selection_not_allowed_with_directives_and_args()
coerces_string_False()
fieldType.DeprecationReason.ShouldBe("Test
boolean_to_boolean()
executes_with_injected_input_variables()
full_object()
allows_query_schema_for_an_object_kind()
multiple_operations_of_same_name()
good_int_value()
variable_not_defined_by_unnamed_query()
coerces_quoted_string_to_identifier()
can_convert_json_to_input_object_with_nullable_int()
unknown_enum_value_into_enum()
should_have_optional_description()
test(arg:{_minNumber})
all_variables_deeply_in_inline_fragments_defined()
testField.Arguments.Find("strOptional").ShouldNotBeNull();
if_false_omits_fragment()
multiple_operations_of_same_name_of_diferent_types_subscription()
Task.FromResult<object>("Test
testNonNullInput(arg:123)
full_object_with_fields_in_different_order()
variable_within_recursive_fragment_defined()
errors_on_omission_of_nested_non_null()
registers_union_types()
registers_type_when_list()
console.log(chalk.yellow('Test
good_string_value()
testField.Type.ShouldBe(typeof(NonNullGraphType<GraphQLClrOutputTypeReference<string>>));
console.error(chalk.red('Test
can_introspect_on_union_and_intercetion_types()
all_variables_in_fragments_deeply_defined()
test('./src/GraphQL.DataLoader.Tests')
unquotedstring_into_boolean()
can_convert_json_to_nested_nullable_array()
parse_literal_string_value_quoted_string_to_identifier()
create_generic_query_that_fetches_luke()
argument_converts_int_to_long()
can_convert_json_to_nullable_array()
string_into_boolean()
should_resolve_in_query()
testInputString(arg:
use_inline_fragment_on_interface()
string_to_string_list()
variable_in_fragment_not_defined_by_operation()
parse_literal_int_value_to_identifier()
prints_multiple_interfaces()
multiple_args()
nonnull_string_list_to_string_list()
with_directives_of_valid_types()
use_fragment_spread_to_avoid_duplicate_content()
can_access_object_with_custom_resolver()
throws_error_when_trying_to_register_field_with_same_name()
unquotedstring_into_string()
evaluates_mutations_serially()
coerces_integer_to_null()
error(chalk.red('Test
can_convert_json_to_input_object_with_enum_string_exact()
allows_querying_the_schema_for_object_fields()
test_parseliteral_structured()
test_parseLiteral_toAst()
fieldType.Description.ShouldBe("Test
coerces_integer_to_decimal()
should_have_name()
test(applicationId:
string_into_int()
simple_float_into_int()
[Obsolete("Test
nullable_fields_without_values_never_complain()
test.Values.Count.ShouldBe(2);
testDbInput(arg:null)
converts_large_numbers_to_long()
can_have_a_default_value()
can_convert_json_to_input_object_with_child_object()
nullable_fields_with_values_never_complain()
scalar_selection_not_allowed_with_args()
can_convert_json_to_input_object_with_guid()
prints_input_type()
string_to_string_list_in_item_position()
skip_true_omits_scalar()
can_convert_json_to_input_object_with_enum_number()
test('./src/GraphQL.Harness.Tests')
DisposingRightAway_DoesNotThrowException()
does_not_throw_with_object_type()
can_get_enum_argument()
unquoted_string_into_float()
testDotnet()
test(project)
prints_string_field_with_int_arg_with_default()
float_into_int()
testField.Arguments.ShouldNotBeNull();
multiple_args_reverse_order()
skip_false_includes_scalar()
testReqObjField(arg:
test_field_name(fieldName);
multiple_anon_operations()
prints_enum()
partial_object_invalid_field_type()
string_into_float()
optional_arg_despite_required_field_in_type()
testData.FromJsonAsync<TestClass3>();
coerces_string_false()
fragment_and_operation_named_the_same()
errors_on_null_for_nested_non_null()
with_directives_with_incorrect_types()
works_on_scalars()
variable_in_fragment_not_defined_by_unnamed_query()
prints_long_value()
skip_false_includes_fragment()
can_have_arguments_with_and_without_default_values()
coerces_numeric_string_to_decimal()
identifies_r2_as_the_hero()
test(arg:{double.MaxValue:0}0.0)
can_convert_json_to_input_object_and_specific_object()
ExecutingThenDisposing_DoesNotThrowException()
validate_core_schema()
string_into_id()
nonnull_string_to_string_list_in_item_position()
parse_literal_long_value_to_identifier()
boolean_into_string()
throw_error_on_missing_istypeof()
_context.Errors.First().Message.ShouldBe("Test
can_get_nullable_argument_missing_value()
evaluates_mutations_correctly_in_the_presense_of_a_failed_mutation()
string_list_to_string_list()
test.Values.FindByName("IGNORED").ShouldBeNull();
prints_introspection_schema()
boolean_into_id()
allows_non_nullable_inputs_to_be_set_to_a_value_directly()
can_query_for_the_id_and_friends_of_r2()
throw_error_on_null_with_register_types()
argument_returns_list_from_array()
executes_using_interface_types()
arg_on_optional_arg()
variable_not_defined()
coerces_invalidly_formatted_date_to_null()
executes_union_types_with_inline_fragments()
if_false_omits_fragment_spread()
test_inputs()
should_return_the_right_type()
when_no_argument_provided()
string_to_nonnull_boolean_in_directive()
skip_true_omits_inline_fragment()
prints_non_null_string_field()
allows_non_nullable_inputs_to_be_set_to_a_value_in_a_variable()
test.GetMetadata<string>("Key1").ShouldBe("Value1");
should_yield_pagination_information()
partial_object_only_required()
testObject(arg:
int_to_int_with_default()
good_boolean_value()
query_same_root_field_using_alias()
boolean_into_float()
can_convert_json_to_input_object_with_enum_long_number()
log('Test
coerces_null_to_null()
prints_float_value()
