testTarget.InstallDdlCommands.Add(new
logFactory.AssertDebugLastMessage($"Test
testTarget.Install(context);
logFactory.AssertDebugLastMessage("TRACE*msg*Test
tests.VerifyDefaultValues();
logFactory.AssertDebugLastMessage("ERROR*msg*Test
logFactory.AssertDebugLastMessage("ftAlignRightTest
logFactory.AssertDebugLastMessage("DEBUG*msg*Test
testLoggerType.GetMethod("TestLog");
tests();
testDictionary.Add("key
logFactory.GetLogger("Test").Info("Test
Assert.StartsWith("Test
logFactory.AssertDebugLastMessage("Test
InvalidOperationException("Test
test_with_mockLogManager()
InvalidOperationException("AsyncTaskTargetTest
logger.Error("Test
logFactory.AssertDebugLastMessageContains("Test
testsFunc();
logFactory.AssertDebugLastMessage("FATAL*msg*Test
testMessage).ToList();
logFactory.AssertDebugLastMessage("htAlignRightTest
tests.VerifyProjectsInSync();
logFactory.GetCurrentClassLogger().Info("Test
logger.Info("Test
logFactory.GetCurrentClassLogger().Fatal("Test
logger.Trace("Test
testDictionary.Add("key1",
Exception("Test
testContext.CountdownEvent.Wait(webserviceCheckTimeoutMs);
testTarget.InstallDdlCommands.Add(installDbCommand);
tests.VerifyNamespacesAndClassNames();
logFactory.AssertDebugLastMessage("WARN*msg*Test
tests.VerifyFileHeaders();
logFactory.AssertDebugLastMessage("INFO*msg*Test
tests/NLog.UnitTests/NLog.UnitTests.$(SOLUTION).csproj
testTarget.Initialize(null);
Assert.Contains("Test
testTarget.Parameters.Add(new
logger.Debug("Test
