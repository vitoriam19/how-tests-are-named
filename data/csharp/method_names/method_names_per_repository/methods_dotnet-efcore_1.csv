testStore.ExecuteNonQuery("CREATE
testListener.Changed.Single());
testOutputHelper.WriteLine(newBaseLine);
testStore.Transaction.Commit();
testDatabase.Initialize(testDatabase.ServiceProvider,
(invertedTest
testListener.CollectionChanged.Single().Item4.Skip(1).Single());
testListener.CollectionChanged.Single().Item4.First());
testListener.Changed.Skip(1).Single().Item1);
testConnection.Close();
tests.Add(new
testStore.AddProviderOptions(new
testConnection.DbConnection.CreateCommand())
testConnection.Open();
testPropertyBuilder.HasPrecision(precision.Value);
testDatabase.Query<string>(
testListener.Changing.Single());
entity.Table("Test
testDatabase.ExecuteNonQueryAsync("CREATE
testOwnee.GetViewName());
testListener.CollectionChanged.Skip(1).Single().Item1);
testListener.CollectionChanged.First().Item1);
testListener.CollectionChanged.Single().Item1.Name);
test(generator,
testExpression.Compile()(queryable);
test();"));
test(Value)
testDatabase.Initialize(null,
testStore.ExecuteNonQuery(@"
.HasColumnName("Test
testStoreIndex.CreateShared(typeof(InMemoryTestStore).Name
testCases.Count();
testListener.CollectionChanged.Single().Item3.Single());
test(accessor,
test(new
testDatabase.QueryAsync<string>("SELECT
testStore.ExecuteScript(scriptPath));
testListener.CollectionChanged.Single().Item3.First());
testConnection.DbConnection.Close();
testDatabase.AddProviderOptions(optionsBuilder)
testListener.CollectionChanged.Skip(2).Single().Item1);
testDrivers.Attach(
testStore.ExecuteScalar<string>("PRAGMA
(!(conditionalExpression.Test
testHelpers.CreateConventionBuilder(
testListener.CollectionChanged.Skip(1).First().Item1);
testConnection.ExecutionFailures.Dequeue();
[Comment("Test
testHelpers.CreateConventionBuilder();
testSqlLoggerFactory.AssertBaseline(
test(context));
test(NULL);"));
testBase.NormalizeDelimitersInRawString("DELETE
entity.ToTable("Test
testListener.Changed.Select(e
testHelpers.CreateContextServices();
test();");
testPropertyBuilder.HasPrecision(precision.Value,
testListener.Changing.First().Item1);
testListener.Changing.Select(e
testClass.GetCustomAttribute<DescriptionAttribute>()?.Description;
testListener.CollectionChanged.Single().Item3.Skip(1).Single());
(binaryTest
[SkipForNonBenchmarkTestRuns("Test
testDatabase.OpenConnectionAsync();
test_file_lines.insert(index,
testStore.QueryAsync<string>(
test(accountNumbers);
testListener.Changing.Skip(1).Single().Item1);
[Table("Test
(conditionalExpression.Test
testDatabase.AddProviderOptions(new
test(NULL);");
e.Test_Spaces_Keywords_TableID).HasColumnName("Test
testStore.CloseConnection();
testStoreFactory.GetOrCreate(storeName)
testDatabase.QueryAsync<string>(
testStore.CreateShared(()
testStore.Connection.OpenAsync();
testClass.Tests.Single());
testSqlLoggerFactory.Clear();
tests.Select(Task.Run).ToArray();
testOutputHelper.WriteLine(
testData.Distinct().OrderBy(i
testListener.CollectionChanged.Skip(3).Single().Item1);
testStore.ExecuteNonQuery(
testDatabase.ExecuteScalarAsync<bool>(
testStore.QueryAsync<string>("SELECT
testListener.Changing.Single().Item2);
testListener.CollectionChanged.Single().Item2.Name);
e.Test_Spaces_Keywords_TableID).Column("Test
testClass.Sleep100ms(collector);
[Column("Test
(Test
testHelpers.CreateConventionBuilder(modelLogger,
testListener.Changed.Skip(2).Single().Item1);
test(c);
testStore.Clean(context);
test(X'');");
testDateList.Contains(a.MyTime))
testMethod.EvaluateSkipConditions();
[nvarchar](max)
testOperation(innerContext);
testListener.Changed.First().Item1);
testStore.OpenConnection();
testDatabase.Connection.OpenAsync();
test(context);
test(dummy)
testStore.ExecuteNonQueryAsync("CREATE
(!_insideConditionalTest
test(2,
testListener.CollectionChanged.Skip(2).First().Item1);
testListener.Changing.Skip(2).Single().Item1);
testStore.DisposeAsync();
testStoreFactory.CreateShared(StoreName)
testClass.GetCustomAttribute<DisplayNameAttribute>()?.DisplayName;
test()
testDatabase.ExecuteScalarAsync<int>(
testListener.CollectionChanged.Single().Item4.Single());
test(1,
testStore.ExecuteNonQuery(@"CREATE
testDrivers.Attach(new
testCases.Select(testCase
testHelpers.CreateModelValidator();
testOperation(context);
testDatabase.DeleteDatabase();
test(dummy1,
testDatabase.CloseConnection();
testCode();
Assert.Equal("Test
testName.Contains("Boolean
(
test(testClass);
(newCaseExpression.WhenClauses[i].Test
testDrivers.Local.ToBindingList();
testStoreFactory.GetOrCreate(StoreName)
testListener.Changed.Single().Item2);
testListener.CollectionChanged.Single().Item2.Single());
testDatabase.Connection.Close();
